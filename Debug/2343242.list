
2343242.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000078f4  080001e8  080001e8  000101e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000514  08007ae0  08007ae0  00017ae0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007ff4  08007ff4  000201e0  2**0
                  CONTENTS
  4 .ARM          00000000  08007ff4  08007ff4  000201e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007ff4  08007ff4  000201e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007ff4  08007ff4  00017ff4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007ff8  08007ff8  00017ff8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e0  20000000  08007ffc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000007c  200001e0  080081dc  000201e0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000025c  080081dc  0002025c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006062  00000000  00000000  00020209  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000015f6  00000000  00000000  0002626b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000688  00000000  00000000  00027868  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000005e0  00000000  00000000  00027ef0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019c2d  00000000  00000000  000284d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00007e80  00000000  00000000  000420fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00091d90  00000000  00000000  00049f7d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000dbd0d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003178  00000000  00000000  000dbd60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         0000003c  00000000  00000000  000deed8  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000076  00000000  00000000  000def14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001e8 <__do_global_dtors_aux>:
 80001e8:	b510      	push	{r4, lr}
 80001ea:	4c05      	ldr	r4, [pc, #20]	; (8000200 <__do_global_dtors_aux+0x18>)
 80001ec:	7823      	ldrb	r3, [r4, #0]
 80001ee:	b933      	cbnz	r3, 80001fe <__do_global_dtors_aux+0x16>
 80001f0:	4b04      	ldr	r3, [pc, #16]	; (8000204 <__do_global_dtors_aux+0x1c>)
 80001f2:	b113      	cbz	r3, 80001fa <__do_global_dtors_aux+0x12>
 80001f4:	4804      	ldr	r0, [pc, #16]	; (8000208 <__do_global_dtors_aux+0x20>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	2301      	movs	r3, #1
 80001fc:	7023      	strb	r3, [r4, #0]
 80001fe:	bd10      	pop	{r4, pc}
 8000200:	200001e0 	.word	0x200001e0
 8000204:	00000000 	.word	0x00000000
 8000208:	08007ac4 	.word	0x08007ac4

0800020c <frame_dummy>:
 800020c:	b508      	push	{r3, lr}
 800020e:	4b03      	ldr	r3, [pc, #12]	; (800021c <frame_dummy+0x10>)
 8000210:	b11b      	cbz	r3, 800021a <frame_dummy+0xe>
 8000212:	4903      	ldr	r1, [pc, #12]	; (8000220 <frame_dummy+0x14>)
 8000214:	4803      	ldr	r0, [pc, #12]	; (8000224 <frame_dummy+0x18>)
 8000216:	f3af 8000 	nop.w
 800021a:	bd08      	pop	{r3, pc}
 800021c:	00000000 	.word	0x00000000
 8000220:	200001e4 	.word	0x200001e4
 8000224:	08007ac4 	.word	0x08007ac4

08000228 <strlen>:
 8000228:	4603      	mov	r3, r0
 800022a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800022e:	2a00      	cmp	r2, #0
 8000230:	d1fb      	bne.n	800022a <strlen+0x2>
 8000232:	1a18      	subs	r0, r3, r0
 8000234:	3801      	subs	r0, #1
 8000236:	4770      	bx	lr

08000238 <__aeabi_drsub>:
 8000238:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800023c:	e002      	b.n	8000244 <__adddf3>
 800023e:	bf00      	nop

08000240 <__aeabi_dsub>:
 8000240:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000244 <__adddf3>:
 8000244:	b530      	push	{r4, r5, lr}
 8000246:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800024a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800024e:	ea94 0f05 	teq	r4, r5
 8000252:	bf08      	it	eq
 8000254:	ea90 0f02 	teqeq	r0, r2
 8000258:	bf1f      	itttt	ne
 800025a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800025e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000262:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000266:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800026a:	f000 80e2 	beq.w	8000432 <__adddf3+0x1ee>
 800026e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000272:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000276:	bfb8      	it	lt
 8000278:	426d      	neglt	r5, r5
 800027a:	dd0c      	ble.n	8000296 <__adddf3+0x52>
 800027c:	442c      	add	r4, r5
 800027e:	ea80 0202 	eor.w	r2, r0, r2
 8000282:	ea81 0303 	eor.w	r3, r1, r3
 8000286:	ea82 0000 	eor.w	r0, r2, r0
 800028a:	ea83 0101 	eor.w	r1, r3, r1
 800028e:	ea80 0202 	eor.w	r2, r0, r2
 8000292:	ea81 0303 	eor.w	r3, r1, r3
 8000296:	2d36      	cmp	r5, #54	; 0x36
 8000298:	bf88      	it	hi
 800029a:	bd30      	pophi	{r4, r5, pc}
 800029c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002a0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002a4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002a8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002ac:	d002      	beq.n	80002b4 <__adddf3+0x70>
 80002ae:	4240      	negs	r0, r0
 80002b0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002b4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002b8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002bc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002c0:	d002      	beq.n	80002c8 <__adddf3+0x84>
 80002c2:	4252      	negs	r2, r2
 80002c4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c8:	ea94 0f05 	teq	r4, r5
 80002cc:	f000 80a7 	beq.w	800041e <__adddf3+0x1da>
 80002d0:	f1a4 0401 	sub.w	r4, r4, #1
 80002d4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d8:	db0d      	blt.n	80002f6 <__adddf3+0xb2>
 80002da:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002de:	fa22 f205 	lsr.w	r2, r2, r5
 80002e2:	1880      	adds	r0, r0, r2
 80002e4:	f141 0100 	adc.w	r1, r1, #0
 80002e8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002ec:	1880      	adds	r0, r0, r2
 80002ee:	fa43 f305 	asr.w	r3, r3, r5
 80002f2:	4159      	adcs	r1, r3
 80002f4:	e00e      	b.n	8000314 <__adddf3+0xd0>
 80002f6:	f1a5 0520 	sub.w	r5, r5, #32
 80002fa:	f10e 0e20 	add.w	lr, lr, #32
 80002fe:	2a01      	cmp	r2, #1
 8000300:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000304:	bf28      	it	cs
 8000306:	f04c 0c02 	orrcs.w	ip, ip, #2
 800030a:	fa43 f305 	asr.w	r3, r3, r5
 800030e:	18c0      	adds	r0, r0, r3
 8000310:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000314:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000318:	d507      	bpl.n	800032a <__adddf3+0xe6>
 800031a:	f04f 0e00 	mov.w	lr, #0
 800031e:	f1dc 0c00 	rsbs	ip, ip, #0
 8000322:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000326:	eb6e 0101 	sbc.w	r1, lr, r1
 800032a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800032e:	d31b      	bcc.n	8000368 <__adddf3+0x124>
 8000330:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000334:	d30c      	bcc.n	8000350 <__adddf3+0x10c>
 8000336:	0849      	lsrs	r1, r1, #1
 8000338:	ea5f 0030 	movs.w	r0, r0, rrx
 800033c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000340:	f104 0401 	add.w	r4, r4, #1
 8000344:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000348:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800034c:	f080 809a 	bcs.w	8000484 <__adddf3+0x240>
 8000350:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000354:	bf08      	it	eq
 8000356:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800035a:	f150 0000 	adcs.w	r0, r0, #0
 800035e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000362:	ea41 0105 	orr.w	r1, r1, r5
 8000366:	bd30      	pop	{r4, r5, pc}
 8000368:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800036c:	4140      	adcs	r0, r0
 800036e:	eb41 0101 	adc.w	r1, r1, r1
 8000372:	3c01      	subs	r4, #1
 8000374:	bf28      	it	cs
 8000376:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800037a:	d2e9      	bcs.n	8000350 <__adddf3+0x10c>
 800037c:	f091 0f00 	teq	r1, #0
 8000380:	bf04      	itt	eq
 8000382:	4601      	moveq	r1, r0
 8000384:	2000      	moveq	r0, #0
 8000386:	fab1 f381 	clz	r3, r1
 800038a:	bf08      	it	eq
 800038c:	3320      	addeq	r3, #32
 800038e:	f1a3 030b 	sub.w	r3, r3, #11
 8000392:	f1b3 0220 	subs.w	r2, r3, #32
 8000396:	da0c      	bge.n	80003b2 <__adddf3+0x16e>
 8000398:	320c      	adds	r2, #12
 800039a:	dd08      	ble.n	80003ae <__adddf3+0x16a>
 800039c:	f102 0c14 	add.w	ip, r2, #20
 80003a0:	f1c2 020c 	rsb	r2, r2, #12
 80003a4:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a8:	fa21 f102 	lsr.w	r1, r1, r2
 80003ac:	e00c      	b.n	80003c8 <__adddf3+0x184>
 80003ae:	f102 0214 	add.w	r2, r2, #20
 80003b2:	bfd8      	it	le
 80003b4:	f1c2 0c20 	rsble	ip, r2, #32
 80003b8:	fa01 f102 	lsl.w	r1, r1, r2
 80003bc:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003c0:	bfdc      	itt	le
 80003c2:	ea41 010c 	orrle.w	r1, r1, ip
 80003c6:	4090      	lslle	r0, r2
 80003c8:	1ae4      	subs	r4, r4, r3
 80003ca:	bfa2      	ittt	ge
 80003cc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003d0:	4329      	orrge	r1, r5
 80003d2:	bd30      	popge	{r4, r5, pc}
 80003d4:	ea6f 0404 	mvn.w	r4, r4
 80003d8:	3c1f      	subs	r4, #31
 80003da:	da1c      	bge.n	8000416 <__adddf3+0x1d2>
 80003dc:	340c      	adds	r4, #12
 80003de:	dc0e      	bgt.n	80003fe <__adddf3+0x1ba>
 80003e0:	f104 0414 	add.w	r4, r4, #20
 80003e4:	f1c4 0220 	rsb	r2, r4, #32
 80003e8:	fa20 f004 	lsr.w	r0, r0, r4
 80003ec:	fa01 f302 	lsl.w	r3, r1, r2
 80003f0:	ea40 0003 	orr.w	r0, r0, r3
 80003f4:	fa21 f304 	lsr.w	r3, r1, r4
 80003f8:	ea45 0103 	orr.w	r1, r5, r3
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	f1c4 040c 	rsb	r4, r4, #12
 8000402:	f1c4 0220 	rsb	r2, r4, #32
 8000406:	fa20 f002 	lsr.w	r0, r0, r2
 800040a:	fa01 f304 	lsl.w	r3, r1, r4
 800040e:	ea40 0003 	orr.w	r0, r0, r3
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	fa21 f004 	lsr.w	r0, r1, r4
 800041a:	4629      	mov	r1, r5
 800041c:	bd30      	pop	{r4, r5, pc}
 800041e:	f094 0f00 	teq	r4, #0
 8000422:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000426:	bf06      	itte	eq
 8000428:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800042c:	3401      	addeq	r4, #1
 800042e:	3d01      	subne	r5, #1
 8000430:	e74e      	b.n	80002d0 <__adddf3+0x8c>
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf18      	it	ne
 8000438:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800043c:	d029      	beq.n	8000492 <__adddf3+0x24e>
 800043e:	ea94 0f05 	teq	r4, r5
 8000442:	bf08      	it	eq
 8000444:	ea90 0f02 	teqeq	r0, r2
 8000448:	d005      	beq.n	8000456 <__adddf3+0x212>
 800044a:	ea54 0c00 	orrs.w	ip, r4, r0
 800044e:	bf04      	itt	eq
 8000450:	4619      	moveq	r1, r3
 8000452:	4610      	moveq	r0, r2
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	ea91 0f03 	teq	r1, r3
 800045a:	bf1e      	ittt	ne
 800045c:	2100      	movne	r1, #0
 800045e:	2000      	movne	r0, #0
 8000460:	bd30      	popne	{r4, r5, pc}
 8000462:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000466:	d105      	bne.n	8000474 <__adddf3+0x230>
 8000468:	0040      	lsls	r0, r0, #1
 800046a:	4149      	adcs	r1, r1
 800046c:	bf28      	it	cs
 800046e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000472:	bd30      	pop	{r4, r5, pc}
 8000474:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000478:	bf3c      	itt	cc
 800047a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800047e:	bd30      	popcc	{r4, r5, pc}
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000488:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800048c:	f04f 0000 	mov.w	r0, #0
 8000490:	bd30      	pop	{r4, r5, pc}
 8000492:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000496:	bf1a      	itte	ne
 8000498:	4619      	movne	r1, r3
 800049a:	4610      	movne	r0, r2
 800049c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004a0:	bf1c      	itt	ne
 80004a2:	460b      	movne	r3, r1
 80004a4:	4602      	movne	r2, r0
 80004a6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004aa:	bf06      	itte	eq
 80004ac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004b0:	ea91 0f03 	teqeq	r1, r3
 80004b4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	bf00      	nop

080004bc <__aeabi_ui2d>:
 80004bc:	f090 0f00 	teq	r0, #0
 80004c0:	bf04      	itt	eq
 80004c2:	2100      	moveq	r1, #0
 80004c4:	4770      	bxeq	lr
 80004c6:	b530      	push	{r4, r5, lr}
 80004c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d0:	f04f 0500 	mov.w	r5, #0
 80004d4:	f04f 0100 	mov.w	r1, #0
 80004d8:	e750      	b.n	800037c <__adddf3+0x138>
 80004da:	bf00      	nop

080004dc <__aeabi_i2d>:
 80004dc:	f090 0f00 	teq	r0, #0
 80004e0:	bf04      	itt	eq
 80004e2:	2100      	moveq	r1, #0
 80004e4:	4770      	bxeq	lr
 80004e6:	b530      	push	{r4, r5, lr}
 80004e8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004ec:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004f0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004f4:	bf48      	it	mi
 80004f6:	4240      	negmi	r0, r0
 80004f8:	f04f 0100 	mov.w	r1, #0
 80004fc:	e73e      	b.n	800037c <__adddf3+0x138>
 80004fe:	bf00      	nop

08000500 <__aeabi_f2d>:
 8000500:	0042      	lsls	r2, r0, #1
 8000502:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000506:	ea4f 0131 	mov.w	r1, r1, rrx
 800050a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800050e:	bf1f      	itttt	ne
 8000510:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000514:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000518:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 800051c:	4770      	bxne	lr
 800051e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000522:	bf08      	it	eq
 8000524:	4770      	bxeq	lr
 8000526:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800052a:	bf04      	itt	eq
 800052c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000530:	4770      	bxeq	lr
 8000532:	b530      	push	{r4, r5, lr}
 8000534:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000538:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800053c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000540:	e71c      	b.n	800037c <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_ul2d>:
 8000544:	ea50 0201 	orrs.w	r2, r0, r1
 8000548:	bf08      	it	eq
 800054a:	4770      	bxeq	lr
 800054c:	b530      	push	{r4, r5, lr}
 800054e:	f04f 0500 	mov.w	r5, #0
 8000552:	e00a      	b.n	800056a <__aeabi_l2d+0x16>

08000554 <__aeabi_l2d>:
 8000554:	ea50 0201 	orrs.w	r2, r0, r1
 8000558:	bf08      	it	eq
 800055a:	4770      	bxeq	lr
 800055c:	b530      	push	{r4, r5, lr}
 800055e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000562:	d502      	bpl.n	800056a <__aeabi_l2d+0x16>
 8000564:	4240      	negs	r0, r0
 8000566:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800056a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800056e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000572:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000576:	f43f aed8 	beq.w	800032a <__adddf3+0xe6>
 800057a:	f04f 0203 	mov.w	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800058a:	bf18      	it	ne
 800058c:	3203      	addne	r2, #3
 800058e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000592:	f1c2 0320 	rsb	r3, r2, #32
 8000596:	fa00 fc03 	lsl.w	ip, r0, r3
 800059a:	fa20 f002 	lsr.w	r0, r0, r2
 800059e:	fa01 fe03 	lsl.w	lr, r1, r3
 80005a2:	ea40 000e 	orr.w	r0, r0, lr
 80005a6:	fa21 f102 	lsr.w	r1, r1, r2
 80005aa:	4414      	add	r4, r2
 80005ac:	e6bd      	b.n	800032a <__adddf3+0xe6>
 80005ae:	bf00      	nop

080005b0 <__aeabi_dmul>:
 80005b0:	b570      	push	{r4, r5, r6, lr}
 80005b2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005b6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005be:	bf1d      	ittte	ne
 80005c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005c4:	ea94 0f0c 	teqne	r4, ip
 80005c8:	ea95 0f0c 	teqne	r5, ip
 80005cc:	f000 f8de 	bleq	800078c <__aeabi_dmul+0x1dc>
 80005d0:	442c      	add	r4, r5
 80005d2:	ea81 0603 	eor.w	r6, r1, r3
 80005d6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005da:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005de:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005e2:	bf18      	it	ne
 80005e4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005f0:	d038      	beq.n	8000664 <__aeabi_dmul+0xb4>
 80005f2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005f6:	f04f 0500 	mov.w	r5, #0
 80005fa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005fe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000602:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000606:	f04f 0600 	mov.w	r6, #0
 800060a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800060e:	f09c 0f00 	teq	ip, #0
 8000612:	bf18      	it	ne
 8000614:	f04e 0e01 	orrne.w	lr, lr, #1
 8000618:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800061c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000620:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000624:	d204      	bcs.n	8000630 <__aeabi_dmul+0x80>
 8000626:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800062a:	416d      	adcs	r5, r5
 800062c:	eb46 0606 	adc.w	r6, r6, r6
 8000630:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000634:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000638:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800063c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000640:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000644:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000648:	bf88      	it	hi
 800064a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800064e:	d81e      	bhi.n	800068e <__aeabi_dmul+0xde>
 8000650:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000654:	bf08      	it	eq
 8000656:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800065a:	f150 0000 	adcs.w	r0, r0, #0
 800065e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000668:	ea46 0101 	orr.w	r1, r6, r1
 800066c:	ea40 0002 	orr.w	r0, r0, r2
 8000670:	ea81 0103 	eor.w	r1, r1, r3
 8000674:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000678:	bfc2      	ittt	gt
 800067a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800067e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000682:	bd70      	popgt	{r4, r5, r6, pc}
 8000684:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000688:	f04f 0e00 	mov.w	lr, #0
 800068c:	3c01      	subs	r4, #1
 800068e:	f300 80ab 	bgt.w	80007e8 <__aeabi_dmul+0x238>
 8000692:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000696:	bfde      	ittt	le
 8000698:	2000      	movle	r0, #0
 800069a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800069e:	bd70      	pople	{r4, r5, r6, pc}
 80006a0:	f1c4 0400 	rsb	r4, r4, #0
 80006a4:	3c20      	subs	r4, #32
 80006a6:	da35      	bge.n	8000714 <__aeabi_dmul+0x164>
 80006a8:	340c      	adds	r4, #12
 80006aa:	dc1b      	bgt.n	80006e4 <__aeabi_dmul+0x134>
 80006ac:	f104 0414 	add.w	r4, r4, #20
 80006b0:	f1c4 0520 	rsb	r5, r4, #32
 80006b4:	fa00 f305 	lsl.w	r3, r0, r5
 80006b8:	fa20 f004 	lsr.w	r0, r0, r4
 80006bc:	fa01 f205 	lsl.w	r2, r1, r5
 80006c0:	ea40 0002 	orr.w	r0, r0, r2
 80006c4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006cc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d0:	fa21 f604 	lsr.w	r6, r1, r4
 80006d4:	eb42 0106 	adc.w	r1, r2, r6
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 040c 	rsb	r4, r4, #12
 80006e8:	f1c4 0520 	rsb	r5, r4, #32
 80006ec:	fa00 f304 	lsl.w	r3, r0, r4
 80006f0:	fa20 f005 	lsr.w	r0, r0, r5
 80006f4:	fa01 f204 	lsl.w	r2, r1, r4
 80006f8:	ea40 0002 	orr.w	r0, r0, r2
 80006fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000700:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000704:	f141 0100 	adc.w	r1, r1, #0
 8000708:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800070c:	bf08      	it	eq
 800070e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f1c4 0520 	rsb	r5, r4, #32
 8000718:	fa00 f205 	lsl.w	r2, r0, r5
 800071c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000720:	fa20 f304 	lsr.w	r3, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea43 0302 	orr.w	r3, r3, r2
 800072c:	fa21 f004 	lsr.w	r0, r1, r4
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	fa21 f204 	lsr.w	r2, r1, r4
 8000738:	ea20 0002 	bic.w	r0, r0, r2
 800073c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f094 0f00 	teq	r4, #0
 8000750:	d10f      	bne.n	8000772 <__aeabi_dmul+0x1c2>
 8000752:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000756:	0040      	lsls	r0, r0, #1
 8000758:	eb41 0101 	adc.w	r1, r1, r1
 800075c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000760:	bf08      	it	eq
 8000762:	3c01      	subeq	r4, #1
 8000764:	d0f7      	beq.n	8000756 <__aeabi_dmul+0x1a6>
 8000766:	ea41 0106 	orr.w	r1, r1, r6
 800076a:	f095 0f00 	teq	r5, #0
 800076e:	bf18      	it	ne
 8000770:	4770      	bxne	lr
 8000772:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000776:	0052      	lsls	r2, r2, #1
 8000778:	eb43 0303 	adc.w	r3, r3, r3
 800077c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000780:	bf08      	it	eq
 8000782:	3d01      	subeq	r5, #1
 8000784:	d0f7      	beq.n	8000776 <__aeabi_dmul+0x1c6>
 8000786:	ea43 0306 	orr.w	r3, r3, r6
 800078a:	4770      	bx	lr
 800078c:	ea94 0f0c 	teq	r4, ip
 8000790:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000794:	bf18      	it	ne
 8000796:	ea95 0f0c 	teqne	r5, ip
 800079a:	d00c      	beq.n	80007b6 <__aeabi_dmul+0x206>
 800079c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007a0:	bf18      	it	ne
 80007a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007a6:	d1d1      	bne.n	800074c <__aeabi_dmul+0x19c>
 80007a8:	ea81 0103 	eor.w	r1, r1, r3
 80007ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b0:	f04f 0000 	mov.w	r0, #0
 80007b4:	bd70      	pop	{r4, r5, r6, pc}
 80007b6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007ba:	bf06      	itte	eq
 80007bc:	4610      	moveq	r0, r2
 80007be:	4619      	moveq	r1, r3
 80007c0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007c4:	d019      	beq.n	80007fa <__aeabi_dmul+0x24a>
 80007c6:	ea94 0f0c 	teq	r4, ip
 80007ca:	d102      	bne.n	80007d2 <__aeabi_dmul+0x222>
 80007cc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007d0:	d113      	bne.n	80007fa <__aeabi_dmul+0x24a>
 80007d2:	ea95 0f0c 	teq	r5, ip
 80007d6:	d105      	bne.n	80007e4 <__aeabi_dmul+0x234>
 80007d8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007dc:	bf1c      	itt	ne
 80007de:	4610      	movne	r0, r2
 80007e0:	4619      	movne	r1, r3
 80007e2:	d10a      	bne.n	80007fa <__aeabi_dmul+0x24a>
 80007e4:	ea81 0103 	eor.w	r1, r1, r3
 80007e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ec:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f4:	f04f 0000 	mov.w	r0, #0
 80007f8:	bd70      	pop	{r4, r5, r6, pc}
 80007fa:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007fe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000802:	bd70      	pop	{r4, r5, r6, pc}

08000804 <__aeabi_ddiv>:
 8000804:	b570      	push	{r4, r5, r6, lr}
 8000806:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800080a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800080e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000812:	bf1d      	ittte	ne
 8000814:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000818:	ea94 0f0c 	teqne	r4, ip
 800081c:	ea95 0f0c 	teqne	r5, ip
 8000820:	f000 f8a7 	bleq	8000972 <__aeabi_ddiv+0x16e>
 8000824:	eba4 0405 	sub.w	r4, r4, r5
 8000828:	ea81 0e03 	eor.w	lr, r1, r3
 800082c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000830:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000834:	f000 8088 	beq.w	8000948 <__aeabi_ddiv+0x144>
 8000838:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800083c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000840:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000844:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000848:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800084c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000850:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000854:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000858:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800085c:	429d      	cmp	r5, r3
 800085e:	bf08      	it	eq
 8000860:	4296      	cmpeq	r6, r2
 8000862:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000866:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800086a:	d202      	bcs.n	8000872 <__aeabi_ddiv+0x6e>
 800086c:	085b      	lsrs	r3, r3, #1
 800086e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000872:	1ab6      	subs	r6, r6, r2
 8000874:	eb65 0503 	sbc.w	r5, r5, r3
 8000878:	085b      	lsrs	r3, r3, #1
 800087a:	ea4f 0232 	mov.w	r2, r2, rrx
 800087e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000882:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 000c 	orrcs.w	r0, r0, ip
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008b0:	085b      	lsrs	r3, r3, #1
 80008b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008be:	bf22      	ittt	cs
 80008c0:	1ab6      	subcs	r6, r6, r2
 80008c2:	4675      	movcs	r5, lr
 80008c4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008e0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008e4:	d018      	beq.n	8000918 <__aeabi_ddiv+0x114>
 80008e6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ea:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008ee:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008f2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008f6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008fa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008fe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000902:	d1c0      	bne.n	8000886 <__aeabi_ddiv+0x82>
 8000904:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000908:	d10b      	bne.n	8000922 <__aeabi_ddiv+0x11e>
 800090a:	ea41 0100 	orr.w	r1, r1, r0
 800090e:	f04f 0000 	mov.w	r0, #0
 8000912:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000916:	e7b6      	b.n	8000886 <__aeabi_ddiv+0x82>
 8000918:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800091c:	bf04      	itt	eq
 800091e:	4301      	orreq	r1, r0
 8000920:	2000      	moveq	r0, #0
 8000922:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000926:	bf88      	it	hi
 8000928:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800092c:	f63f aeaf 	bhi.w	800068e <__aeabi_dmul+0xde>
 8000930:	ebb5 0c03 	subs.w	ip, r5, r3
 8000934:	bf04      	itt	eq
 8000936:	ebb6 0c02 	subseq.w	ip, r6, r2
 800093a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800093e:	f150 0000 	adcs.w	r0, r0, #0
 8000942:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000946:	bd70      	pop	{r4, r5, r6, pc}
 8000948:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800094c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000950:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000954:	bfc2      	ittt	gt
 8000956:	ebd4 050c 	rsbsgt	r5, r4, ip
 800095a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800095e:	bd70      	popgt	{r4, r5, r6, pc}
 8000960:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000964:	f04f 0e00 	mov.w	lr, #0
 8000968:	3c01      	subs	r4, #1
 800096a:	e690      	b.n	800068e <__aeabi_dmul+0xde>
 800096c:	ea45 0e06 	orr.w	lr, r5, r6
 8000970:	e68d      	b.n	800068e <__aeabi_dmul+0xde>
 8000972:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000976:	ea94 0f0c 	teq	r4, ip
 800097a:	bf08      	it	eq
 800097c:	ea95 0f0c 	teqeq	r5, ip
 8000980:	f43f af3b 	beq.w	80007fa <__aeabi_dmul+0x24a>
 8000984:	ea94 0f0c 	teq	r4, ip
 8000988:	d10a      	bne.n	80009a0 <__aeabi_ddiv+0x19c>
 800098a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800098e:	f47f af34 	bne.w	80007fa <__aeabi_dmul+0x24a>
 8000992:	ea95 0f0c 	teq	r5, ip
 8000996:	f47f af25 	bne.w	80007e4 <__aeabi_dmul+0x234>
 800099a:	4610      	mov	r0, r2
 800099c:	4619      	mov	r1, r3
 800099e:	e72c      	b.n	80007fa <__aeabi_dmul+0x24a>
 80009a0:	ea95 0f0c 	teq	r5, ip
 80009a4:	d106      	bne.n	80009b4 <__aeabi_ddiv+0x1b0>
 80009a6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009aa:	f43f aefd 	beq.w	80007a8 <__aeabi_dmul+0x1f8>
 80009ae:	4610      	mov	r0, r2
 80009b0:	4619      	mov	r1, r3
 80009b2:	e722      	b.n	80007fa <__aeabi_dmul+0x24a>
 80009b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b8:	bf18      	it	ne
 80009ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009be:	f47f aec5 	bne.w	800074c <__aeabi_dmul+0x19c>
 80009c2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009c6:	f47f af0d 	bne.w	80007e4 <__aeabi_dmul+0x234>
 80009ca:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ce:	f47f aeeb 	bne.w	80007a8 <__aeabi_dmul+0x1f8>
 80009d2:	e712      	b.n	80007fa <__aeabi_dmul+0x24a>

080009d4 <__gedf2>:
 80009d4:	f04f 3cff 	mov.w	ip, #4294967295
 80009d8:	e006      	b.n	80009e8 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__ledf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	e002      	b.n	80009e8 <__cmpdf2+0x4>
 80009e2:	bf00      	nop

080009e4 <__cmpdf2>:
 80009e4:	f04f 0c01 	mov.w	ip, #1
 80009e8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009ec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f8:	bf18      	it	ne
 80009fa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009fe:	d01b      	beq.n	8000a38 <__cmpdf2+0x54>
 8000a00:	b001      	add	sp, #4
 8000a02:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a06:	bf0c      	ite	eq
 8000a08:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a0c:	ea91 0f03 	teqne	r1, r3
 8000a10:	bf02      	ittt	eq
 8000a12:	ea90 0f02 	teqeq	r0, r2
 8000a16:	2000      	moveq	r0, #0
 8000a18:	4770      	bxeq	lr
 8000a1a:	f110 0f00 	cmn.w	r0, #0
 8000a1e:	ea91 0f03 	teq	r1, r3
 8000a22:	bf58      	it	pl
 8000a24:	4299      	cmppl	r1, r3
 8000a26:	bf08      	it	eq
 8000a28:	4290      	cmpeq	r0, r2
 8000a2a:	bf2c      	ite	cs
 8000a2c:	17d8      	asrcs	r0, r3, #31
 8000a2e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a32:	f040 0001 	orr.w	r0, r0, #1
 8000a36:	4770      	bx	lr
 8000a38:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a40:	d102      	bne.n	8000a48 <__cmpdf2+0x64>
 8000a42:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a46:	d107      	bne.n	8000a58 <__cmpdf2+0x74>
 8000a48:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a50:	d1d6      	bne.n	8000a00 <__cmpdf2+0x1c>
 8000a52:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a56:	d0d3      	beq.n	8000a00 <__cmpdf2+0x1c>
 8000a58:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a5c:	4770      	bx	lr
 8000a5e:	bf00      	nop

08000a60 <__aeabi_cdrcmple>:
 8000a60:	4684      	mov	ip, r0
 8000a62:	4610      	mov	r0, r2
 8000a64:	4662      	mov	r2, ip
 8000a66:	468c      	mov	ip, r1
 8000a68:	4619      	mov	r1, r3
 8000a6a:	4663      	mov	r3, ip
 8000a6c:	e000      	b.n	8000a70 <__aeabi_cdcmpeq>
 8000a6e:	bf00      	nop

08000a70 <__aeabi_cdcmpeq>:
 8000a70:	b501      	push	{r0, lr}
 8000a72:	f7ff ffb7 	bl	80009e4 <__cmpdf2>
 8000a76:	2800      	cmp	r0, #0
 8000a78:	bf48      	it	mi
 8000a7a:	f110 0f00 	cmnmi.w	r0, #0
 8000a7e:	bd01      	pop	{r0, pc}

08000a80 <__aeabi_dcmpeq>:
 8000a80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a84:	f7ff fff4 	bl	8000a70 <__aeabi_cdcmpeq>
 8000a88:	bf0c      	ite	eq
 8000a8a:	2001      	moveq	r0, #1
 8000a8c:	2000      	movne	r0, #0
 8000a8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a92:	bf00      	nop

08000a94 <__aeabi_dcmplt>:
 8000a94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a98:	f7ff ffea 	bl	8000a70 <__aeabi_cdcmpeq>
 8000a9c:	bf34      	ite	cc
 8000a9e:	2001      	movcc	r0, #1
 8000aa0:	2000      	movcs	r0, #0
 8000aa2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_dcmple>:
 8000aa8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aac:	f7ff ffe0 	bl	8000a70 <__aeabi_cdcmpeq>
 8000ab0:	bf94      	ite	ls
 8000ab2:	2001      	movls	r0, #1
 8000ab4:	2000      	movhi	r0, #0
 8000ab6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aba:	bf00      	nop

08000abc <__aeabi_dcmpge>:
 8000abc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac0:	f7ff ffce 	bl	8000a60 <__aeabi_cdrcmple>
 8000ac4:	bf94      	ite	ls
 8000ac6:	2001      	movls	r0, #1
 8000ac8:	2000      	movhi	r0, #0
 8000aca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ace:	bf00      	nop

08000ad0 <__aeabi_dcmpgt>:
 8000ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad4:	f7ff ffc4 	bl	8000a60 <__aeabi_cdrcmple>
 8000ad8:	bf34      	ite	cc
 8000ada:	2001      	movcc	r0, #1
 8000adc:	2000      	movcs	r0, #0
 8000ade:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae2:	bf00      	nop

08000ae4 <__aeabi_dcmpun>:
 8000ae4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aec:	d102      	bne.n	8000af4 <__aeabi_dcmpun+0x10>
 8000aee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000af2:	d10a      	bne.n	8000b0a <__aeabi_dcmpun+0x26>
 8000af4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000afc:	d102      	bne.n	8000b04 <__aeabi_dcmpun+0x20>
 8000afe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b02:	d102      	bne.n	8000b0a <__aeabi_dcmpun+0x26>
 8000b04:	f04f 0000 	mov.w	r0, #0
 8000b08:	4770      	bx	lr
 8000b0a:	f04f 0001 	mov.w	r0, #1
 8000b0e:	4770      	bx	lr

08000b10 <__aeabi_d2iz>:
 8000b10:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b14:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b18:	d215      	bcs.n	8000b46 <__aeabi_d2iz+0x36>
 8000b1a:	d511      	bpl.n	8000b40 <__aeabi_d2iz+0x30>
 8000b1c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b20:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b24:	d912      	bls.n	8000b4c <__aeabi_d2iz+0x3c>
 8000b26:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b2e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b32:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b36:	fa23 f002 	lsr.w	r0, r3, r2
 8000b3a:	bf18      	it	ne
 8000b3c:	4240      	negne	r0, r0
 8000b3e:	4770      	bx	lr
 8000b40:	f04f 0000 	mov.w	r0, #0
 8000b44:	4770      	bx	lr
 8000b46:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b4a:	d105      	bne.n	8000b58 <__aeabi_d2iz+0x48>
 8000b4c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b50:	bf08      	it	eq
 8000b52:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b56:	4770      	bx	lr
 8000b58:	f04f 0000 	mov.w	r0, #0
 8000b5c:	4770      	bx	lr
 8000b5e:	bf00      	nop

08000b60 <__aeabi_d2uiz>:
 8000b60:	004a      	lsls	r2, r1, #1
 8000b62:	d211      	bcs.n	8000b88 <__aeabi_d2uiz+0x28>
 8000b64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b68:	d211      	bcs.n	8000b8e <__aeabi_d2uiz+0x2e>
 8000b6a:	d50d      	bpl.n	8000b88 <__aeabi_d2uiz+0x28>
 8000b6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b74:	d40e      	bmi.n	8000b94 <__aeabi_d2uiz+0x34>
 8000b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b82:	fa23 f002 	lsr.w	r0, r3, r2
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d102      	bne.n	8000b9a <__aeabi_d2uiz+0x3a>
 8000b94:	f04f 30ff 	mov.w	r0, #4294967295
 8000b98:	4770      	bx	lr
 8000b9a:	f04f 0000 	mov.w	r0, #0
 8000b9e:	4770      	bx	lr

08000ba0 <__aeabi_d2f>:
 8000ba0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ba4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ba8:	bf24      	itt	cs
 8000baa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bae:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bb2:	d90d      	bls.n	8000bd0 <__aeabi_d2f+0x30>
 8000bb4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bb8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bbc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bc4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bc8:	bf08      	it	eq
 8000bca:	f020 0001 	biceq.w	r0, r0, #1
 8000bce:	4770      	bx	lr
 8000bd0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bd4:	d121      	bne.n	8000c1a <__aeabi_d2f+0x7a>
 8000bd6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bda:	bfbc      	itt	lt
 8000bdc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000be0:	4770      	bxlt	lr
 8000be2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000be6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bea:	f1c2 0218 	rsb	r2, r2, #24
 8000bee:	f1c2 0c20 	rsb	ip, r2, #32
 8000bf2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bf6:	fa20 f002 	lsr.w	r0, r0, r2
 8000bfa:	bf18      	it	ne
 8000bfc:	f040 0001 	orrne.w	r0, r0, #1
 8000c00:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c04:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c08:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c0c:	ea40 000c 	orr.w	r0, r0, ip
 8000c10:	fa23 f302 	lsr.w	r3, r3, r2
 8000c14:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c18:	e7cc      	b.n	8000bb4 <__aeabi_d2f+0x14>
 8000c1a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c1e:	d107      	bne.n	8000c30 <__aeabi_d2f+0x90>
 8000c20:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c24:	bf1e      	ittt	ne
 8000c26:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c2a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c2e:	4770      	bxne	lr
 8000c30:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c34:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c38:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop

08000c40 <__aeabi_d2lz>:
 8000c40:	b538      	push	{r3, r4, r5, lr}
 8000c42:	4605      	mov	r5, r0
 8000c44:	460c      	mov	r4, r1
 8000c46:	2200      	movs	r2, #0
 8000c48:	2300      	movs	r3, #0
 8000c4a:	4628      	mov	r0, r5
 8000c4c:	4621      	mov	r1, r4
 8000c4e:	f7ff ff21 	bl	8000a94 <__aeabi_dcmplt>
 8000c52:	b928      	cbnz	r0, 8000c60 <__aeabi_d2lz+0x20>
 8000c54:	4628      	mov	r0, r5
 8000c56:	4621      	mov	r1, r4
 8000c58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c5c:	f000 b80a 	b.w	8000c74 <__aeabi_d2ulz>
 8000c60:	4628      	mov	r0, r5
 8000c62:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8000c66:	f000 f805 	bl	8000c74 <__aeabi_d2ulz>
 8000c6a:	4240      	negs	r0, r0
 8000c6c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c70:	bd38      	pop	{r3, r4, r5, pc}
 8000c72:	bf00      	nop

08000c74 <__aeabi_d2ulz>:
 8000c74:	b5d0      	push	{r4, r6, r7, lr}
 8000c76:	2200      	movs	r2, #0
 8000c78:	4b0b      	ldr	r3, [pc, #44]	; (8000ca8 <__aeabi_d2ulz+0x34>)
 8000c7a:	4606      	mov	r6, r0
 8000c7c:	460f      	mov	r7, r1
 8000c7e:	f7ff fc97 	bl	80005b0 <__aeabi_dmul>
 8000c82:	f7ff ff6d 	bl	8000b60 <__aeabi_d2uiz>
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fc18 	bl	80004bc <__aeabi_ui2d>
 8000c8c:	2200      	movs	r2, #0
 8000c8e:	4b07      	ldr	r3, [pc, #28]	; (8000cac <__aeabi_d2ulz+0x38>)
 8000c90:	f7ff fc8e 	bl	80005b0 <__aeabi_dmul>
 8000c94:	4602      	mov	r2, r0
 8000c96:	460b      	mov	r3, r1
 8000c98:	4630      	mov	r0, r6
 8000c9a:	4639      	mov	r1, r7
 8000c9c:	f7ff fad0 	bl	8000240 <__aeabi_dsub>
 8000ca0:	f7ff ff5e 	bl	8000b60 <__aeabi_d2uiz>
 8000ca4:	4621      	mov	r1, r4
 8000ca6:	bdd0      	pop	{r4, r6, r7, pc}
 8000ca8:	3df00000 	.word	0x3df00000
 8000cac:	41f00000 	.word	0x41f00000

08000cb0 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000cb0:	b480      	push	{r7}
 8000cb2:	b083      	sub	sp, #12
 8000cb4:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cb6:	4b08      	ldr	r3, [pc, #32]	; (8000cd8 <MX_GPIO_Init+0x28>)
 8000cb8:	699b      	ldr	r3, [r3, #24]
 8000cba:	4a07      	ldr	r2, [pc, #28]	; (8000cd8 <MX_GPIO_Init+0x28>)
 8000cbc:	f043 0304 	orr.w	r3, r3, #4
 8000cc0:	6193      	str	r3, [r2, #24]
 8000cc2:	4b05      	ldr	r3, [pc, #20]	; (8000cd8 <MX_GPIO_Init+0x28>)
 8000cc4:	699b      	ldr	r3, [r3, #24]
 8000cc6:	f003 0304 	and.w	r3, r3, #4
 8000cca:	607b      	str	r3, [r7, #4]
 8000ccc:	687b      	ldr	r3, [r7, #4]

}
 8000cce:	bf00      	nop
 8000cd0:	370c      	adds	r7, #12
 8000cd2:	46bd      	mov	sp, r7
 8000cd4:	bc80      	pop	{r7}
 8000cd6:	4770      	bx	lr
 8000cd8:	40021000 	.word	0x40021000

08000cdc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000cdc:	b580      	push	{r7, lr}
 8000cde:	b09a      	sub	sp, #104	; 0x68
 8000ce0:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ce2:	f000 fa61 	bl	80011a8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ce6:	f000 f81d 	bl	8000d24 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000cea:	f7ff ffe1 	bl	8000cb0 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000cee:	f000 f9bf 	bl	8001070 <MX_USART1_UART_Init>
  RetargetInit(&huart1);
 8000cf2:	4808      	ldr	r0, [pc, #32]	; (8000d14 <main+0x38>)
 8000cf4:	f000 f860 	bl	8000db8 <RetargetInit>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
	  printf("Your Name:\r\n");
 8000cf8:	4807      	ldr	r0, [pc, #28]	; (8000d18 <main+0x3c>)
 8000cfa:	f002 fac9 	bl	8003290 <puts>
	  scanf("%s",buf);
 8000cfe:	1d3b      	adds	r3, r7, #4
 8000d00:	4619      	mov	r1, r3
 8000d02:	4806      	ldr	r0, [pc, #24]	; (8000d1c <main+0x40>)
 8000d04:	f002 facc 	bl	80032a0 <iscanf>
	  printf("Your Name:%s!\r\n",buf);
 8000d08:	1d3b      	adds	r3, r7, #4
 8000d0a:	4619      	mov	r1, r3
 8000d0c:	4804      	ldr	r0, [pc, #16]	; (8000d20 <main+0x44>)
 8000d0e:	f002 fa39 	bl	8003184 <iprintf>
	  printf("Your Name:\r\n");
 8000d12:	e7f1      	b.n	8000cf8 <main+0x1c>
 8000d14:	20000204 	.word	0x20000204
 8000d18:	08007ae0 	.word	0x08007ae0
 8000d1c:	08007aec 	.word	0x08007aec
 8000d20:	08007af0 	.word	0x08007af0

08000d24 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000d24:	b580      	push	{r7, lr}
 8000d26:	b090      	sub	sp, #64	; 0x40
 8000d28:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000d2a:	f107 0318 	add.w	r3, r7, #24
 8000d2e:	2228      	movs	r2, #40	; 0x28
 8000d30:	2100      	movs	r1, #0
 8000d32:	4618      	mov	r0, r3
 8000d34:	f001 fbb0 	bl	8002498 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000d38:	1d3b      	adds	r3, r7, #4
 8000d3a:	2200      	movs	r2, #0
 8000d3c:	601a      	str	r2, [r3, #0]
 8000d3e:	605a      	str	r2, [r3, #4]
 8000d40:	609a      	str	r2, [r3, #8]
 8000d42:	60da      	str	r2, [r3, #12]
 8000d44:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000d46:	2301      	movs	r3, #1
 8000d48:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000d4a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000d4e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000d50:	2300      	movs	r3, #0
 8000d52:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000d54:	2301      	movs	r3, #1
 8000d56:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000d58:	2302      	movs	r3, #2
 8000d5a:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000d5c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000d60:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000d62:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000d66:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000d68:	f107 0318 	add.w	r3, r7, #24
 8000d6c:	4618      	mov	r0, r3
 8000d6e:	f000 fcf5 	bl	800175c <HAL_RCC_OscConfig>
 8000d72:	4603      	mov	r3, r0
 8000d74:	2b00      	cmp	r3, #0
 8000d76:	d001      	beq.n	8000d7c <SystemClock_Config+0x58>
  {
    Error_Handler();
 8000d78:	f000 f819 	bl	8000dae <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000d7c:	230f      	movs	r3, #15
 8000d7e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000d80:	2302      	movs	r3, #2
 8000d82:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000d84:	2300      	movs	r3, #0
 8000d86:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000d88:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d8c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000d8e:	2300      	movs	r3, #0
 8000d90:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000d92:	1d3b      	adds	r3, r7, #4
 8000d94:	2102      	movs	r1, #2
 8000d96:	4618      	mov	r0, r3
 8000d98:	f000 ff62 	bl	8001c60 <HAL_RCC_ClockConfig>
 8000d9c:	4603      	mov	r3, r0
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d001      	beq.n	8000da6 <SystemClock_Config+0x82>
  {
    Error_Handler();
 8000da2:	f000 f804 	bl	8000dae <Error_Handler>
  }
}
 8000da6:	bf00      	nop
 8000da8:	3740      	adds	r7, #64	; 0x40
 8000daa:	46bd      	mov	sp, r7
 8000dac:	bd80      	pop	{r7, pc}

08000dae <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000dae:	b480      	push	{r7}
 8000db0:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000db2:	b672      	cpsid	i
}
 8000db4:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000db6:	e7fe      	b.n	8000db6 <Error_Handler+0x8>

08000db8 <RetargetInit>:
#define STDOUT_FILENO 1
#define STDERR_FILENO 2

UART_HandleTypeDef *gHuart;

void RetargetInit(UART_HandleTypeDef *huart) {
 8000db8:	b580      	push	{r7, lr}
 8000dba:	b082      	sub	sp, #8
 8000dbc:	af00      	add	r7, sp, #0
 8000dbe:	6078      	str	r0, [r7, #4]
  gHuart = huart;
 8000dc0:	4a07      	ldr	r2, [pc, #28]	; (8000de0 <RetargetInit+0x28>)
 8000dc2:	687b      	ldr	r3, [r7, #4]
 8000dc4:	6013      	str	r3, [r2, #0]

  /* Disable I/O buffering for STDOUT stream, so that
   * chars are sent out as soon as they are printed. */
     /* 禁用 STDOUT 流的 I/O 缓冲，以便
   * 字符在打印后立即发送出去。*/
  setvbuf(stdout, NULL, _IONBF, 0);
 8000dc6:	4b07      	ldr	r3, [pc, #28]	; (8000de4 <RetargetInit+0x2c>)
 8000dc8:	681b      	ldr	r3, [r3, #0]
 8000dca:	6898      	ldr	r0, [r3, #8]
 8000dcc:	2300      	movs	r3, #0
 8000dce:	2202      	movs	r2, #2
 8000dd0:	2100      	movs	r1, #0
 8000dd2:	f002 fa7d 	bl	80032d0 <setvbuf>
}
 8000dd6:	bf00      	nop
 8000dd8:	3708      	adds	r7, #8
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	bd80      	pop	{r7, pc}
 8000dde:	bf00      	nop
 8000de0:	200001fc 	.word	0x200001fc
 8000de4:	2000000c 	.word	0x2000000c

08000de8 <_isatty>:

int _isatty(int fd) {
 8000de8:	b580      	push	{r7, lr}
 8000dea:	b082      	sub	sp, #8
 8000dec:	af00      	add	r7, sp, #0
 8000dee:	6078      	str	r0, [r7, #4]
  if (fd >= STDIN_FILENO && fd <= STDERR_FILENO)
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	2b00      	cmp	r3, #0
 8000df4:	db04      	blt.n	8000e00 <_isatty+0x18>
 8000df6:	687b      	ldr	r3, [r7, #4]
 8000df8:	2b02      	cmp	r3, #2
 8000dfa:	dc01      	bgt.n	8000e00 <_isatty+0x18>
    return 1;
 8000dfc:	2301      	movs	r3, #1
 8000dfe:	e005      	b.n	8000e0c <_isatty+0x24>

  errno = EBADF;
 8000e00:	f001 fb20 	bl	8002444 <__errno>
 8000e04:	4603      	mov	r3, r0
 8000e06:	2209      	movs	r2, #9
 8000e08:	601a      	str	r2, [r3, #0]
  return 0;
 8000e0a:	2300      	movs	r3, #0
}
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	3708      	adds	r7, #8
 8000e10:	46bd      	mov	sp, r7
 8000e12:	bd80      	pop	{r7, pc}

08000e14 <_write>:

int _write(int fd, char* ptr, int len) {
 8000e14:	b580      	push	{r7, lr}
 8000e16:	b086      	sub	sp, #24
 8000e18:	af00      	add	r7, sp, #0
 8000e1a:	60f8      	str	r0, [r7, #12]
 8000e1c:	60b9      	str	r1, [r7, #8]
 8000e1e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef hstatus;

  if (fd == STDOUT_FILENO || fd == STDERR_FILENO) {
 8000e20:	68fb      	ldr	r3, [r7, #12]
 8000e22:	2b01      	cmp	r3, #1
 8000e24:	d002      	beq.n	8000e2c <_write+0x18>
 8000e26:	68fb      	ldr	r3, [r7, #12]
 8000e28:	2b02      	cmp	r3, #2
 8000e2a:	d111      	bne.n	8000e50 <_write+0x3c>
    hstatus = HAL_UART_Transmit(gHuart, (uint8_t *) ptr, len, HAL_MAX_DELAY);
 8000e2c:	4b0e      	ldr	r3, [pc, #56]	; (8000e68 <_write+0x54>)
 8000e2e:	6818      	ldr	r0, [r3, #0]
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	b29a      	uxth	r2, r3
 8000e34:	f04f 33ff 	mov.w	r3, #4294967295
 8000e38:	68b9      	ldr	r1, [r7, #8]
 8000e3a:	f001 f8f6 	bl	800202a <HAL_UART_Transmit>
 8000e3e:	4603      	mov	r3, r0
 8000e40:	75fb      	strb	r3, [r7, #23]
    if (hstatus == HAL_OK)
 8000e42:	7dfb      	ldrb	r3, [r7, #23]
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	d101      	bne.n	8000e4c <_write+0x38>
      return len;
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	e008      	b.n	8000e5e <_write+0x4a>
    else
      return EIO;
 8000e4c:	2305      	movs	r3, #5
 8000e4e:	e006      	b.n	8000e5e <_write+0x4a>
  }
  errno = EBADF;
 8000e50:	f001 faf8 	bl	8002444 <__errno>
 8000e54:	4603      	mov	r3, r0
 8000e56:	2209      	movs	r2, #9
 8000e58:	601a      	str	r2, [r3, #0]
  return -1;
 8000e5a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000e5e:	4618      	mov	r0, r3
 8000e60:	3718      	adds	r7, #24
 8000e62:	46bd      	mov	sp, r7
 8000e64:	bd80      	pop	{r7, pc}
 8000e66:	bf00      	nop
 8000e68:	200001fc 	.word	0x200001fc

08000e6c <_close>:

int _close(int fd) {
 8000e6c:	b580      	push	{r7, lr}
 8000e6e:	b082      	sub	sp, #8
 8000e70:	af00      	add	r7, sp, #0
 8000e72:	6078      	str	r0, [r7, #4]
  if (fd >= STDIN_FILENO && fd <= STDERR_FILENO)
 8000e74:	687b      	ldr	r3, [r7, #4]
 8000e76:	2b00      	cmp	r3, #0
 8000e78:	db04      	blt.n	8000e84 <_close+0x18>
 8000e7a:	687b      	ldr	r3, [r7, #4]
 8000e7c:	2b02      	cmp	r3, #2
 8000e7e:	dc01      	bgt.n	8000e84 <_close+0x18>
    return 0;
 8000e80:	2300      	movs	r3, #0
 8000e82:	e006      	b.n	8000e92 <_close+0x26>

  errno = EBADF;
 8000e84:	f001 fade 	bl	8002444 <__errno>
 8000e88:	4603      	mov	r3, r0
 8000e8a:	2209      	movs	r2, #9
 8000e8c:	601a      	str	r2, [r3, #0]
  return -1;
 8000e8e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000e92:	4618      	mov	r0, r3
 8000e94:	3708      	adds	r7, #8
 8000e96:	46bd      	mov	sp, r7
 8000e98:	bd80      	pop	{r7, pc}

08000e9a <_lseek>:

int _lseek(int fd, int ptr, int dir) {
 8000e9a:	b580      	push	{r7, lr}
 8000e9c:	b084      	sub	sp, #16
 8000e9e:	af00      	add	r7, sp, #0
 8000ea0:	60f8      	str	r0, [r7, #12]
 8000ea2:	60b9      	str	r1, [r7, #8]
 8000ea4:	607a      	str	r2, [r7, #4]
  (void) fd;
  (void) ptr;
  (void) dir;

  errno = EBADF;
 8000ea6:	f001 facd 	bl	8002444 <__errno>
 8000eaa:	4603      	mov	r3, r0
 8000eac:	2209      	movs	r2, #9
 8000eae:	601a      	str	r2, [r3, #0]
  return -1;
 8000eb0:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000eb4:	4618      	mov	r0, r3
 8000eb6:	3710      	adds	r7, #16
 8000eb8:	46bd      	mov	sp, r7
 8000eba:	bd80      	pop	{r7, pc}

08000ebc <_read>:

int _read(int fd, char* ptr, int len) {
 8000ebc:	b580      	push	{r7, lr}
 8000ebe:	b086      	sub	sp, #24
 8000ec0:	af00      	add	r7, sp, #0
 8000ec2:	60f8      	str	r0, [r7, #12]
 8000ec4:	60b9      	str	r1, [r7, #8]
 8000ec6:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef hstatus;

  if (fd == STDIN_FILENO) {
 8000ec8:	68fb      	ldr	r3, [r7, #12]
 8000eca:	2b00      	cmp	r3, #0
 8000ecc:	d110      	bne.n	8000ef0 <_read+0x34>
    hstatus = HAL_UART_Receive(gHuart, (uint8_t *) ptr, 1, HAL_MAX_DELAY);
 8000ece:	4b0e      	ldr	r3, [pc, #56]	; (8000f08 <_read+0x4c>)
 8000ed0:	6818      	ldr	r0, [r3, #0]
 8000ed2:	f04f 33ff 	mov.w	r3, #4294967295
 8000ed6:	2201      	movs	r2, #1
 8000ed8:	68b9      	ldr	r1, [r7, #8]
 8000eda:	f001 f938 	bl	800214e <HAL_UART_Receive>
 8000ede:	4603      	mov	r3, r0
 8000ee0:	75fb      	strb	r3, [r7, #23]
    if (hstatus == HAL_OK)
 8000ee2:	7dfb      	ldrb	r3, [r7, #23]
 8000ee4:	2b00      	cmp	r3, #0
 8000ee6:	d101      	bne.n	8000eec <_read+0x30>
      return 1;
 8000ee8:	2301      	movs	r3, #1
 8000eea:	e008      	b.n	8000efe <_read+0x42>
    else
      return EIO;
 8000eec:	2305      	movs	r3, #5
 8000eee:	e006      	b.n	8000efe <_read+0x42>
  }
  errno = EBADF;
 8000ef0:	f001 faa8 	bl	8002444 <__errno>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	2209      	movs	r2, #9
 8000ef8:	601a      	str	r2, [r3, #0]
  return -1;
 8000efa:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000efe:	4618      	mov	r0, r3
 8000f00:	3718      	adds	r7, #24
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bd80      	pop	{r7, pc}
 8000f06:	bf00      	nop
 8000f08:	200001fc 	.word	0x200001fc

08000f0c <_fstat>:

int _fstat(int fd, struct stat* st) {
 8000f0c:	b580      	push	{r7, lr}
 8000f0e:	b082      	sub	sp, #8
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	6078      	str	r0, [r7, #4]
 8000f14:	6039      	str	r1, [r7, #0]
  if (fd >= STDIN_FILENO && fd <= STDERR_FILENO) {
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	2b00      	cmp	r3, #0
 8000f1a:	db08      	blt.n	8000f2e <_fstat+0x22>
 8000f1c:	687b      	ldr	r3, [r7, #4]
 8000f1e:	2b02      	cmp	r3, #2
 8000f20:	dc05      	bgt.n	8000f2e <_fstat+0x22>
    st->st_mode = S_IFCHR;
 8000f22:	683b      	ldr	r3, [r7, #0]
 8000f24:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000f28:	605a      	str	r2, [r3, #4]
    return 0;
 8000f2a:	2300      	movs	r3, #0
 8000f2c:	e005      	b.n	8000f3a <_fstat+0x2e>
  }

  errno = EBADF;
 8000f2e:	f001 fa89 	bl	8002444 <__errno>
 8000f32:	4603      	mov	r3, r0
 8000f34:	2209      	movs	r2, #9
 8000f36:	601a      	str	r2, [r3, #0]
  return 0;
 8000f38:	2300      	movs	r3, #0
}
 8000f3a:	4618      	mov	r0, r3
 8000f3c:	3708      	adds	r7, #8
 8000f3e:	46bd      	mov	sp, r7
 8000f40:	bd80      	pop	{r7, pc}
	...

08000f44 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000f44:	b480      	push	{r7}
 8000f46:	b085      	sub	sp, #20
 8000f48:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000f4a:	4b15      	ldr	r3, [pc, #84]	; (8000fa0 <HAL_MspInit+0x5c>)
 8000f4c:	699b      	ldr	r3, [r3, #24]
 8000f4e:	4a14      	ldr	r2, [pc, #80]	; (8000fa0 <HAL_MspInit+0x5c>)
 8000f50:	f043 0301 	orr.w	r3, r3, #1
 8000f54:	6193      	str	r3, [r2, #24]
 8000f56:	4b12      	ldr	r3, [pc, #72]	; (8000fa0 <HAL_MspInit+0x5c>)
 8000f58:	699b      	ldr	r3, [r3, #24]
 8000f5a:	f003 0301 	and.w	r3, r3, #1
 8000f5e:	60bb      	str	r3, [r7, #8]
 8000f60:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000f62:	4b0f      	ldr	r3, [pc, #60]	; (8000fa0 <HAL_MspInit+0x5c>)
 8000f64:	69db      	ldr	r3, [r3, #28]
 8000f66:	4a0e      	ldr	r2, [pc, #56]	; (8000fa0 <HAL_MspInit+0x5c>)
 8000f68:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f6c:	61d3      	str	r3, [r2, #28]
 8000f6e:	4b0c      	ldr	r3, [pc, #48]	; (8000fa0 <HAL_MspInit+0x5c>)
 8000f70:	69db      	ldr	r3, [r3, #28]
 8000f72:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f76:	607b      	str	r3, [r7, #4]
 8000f78:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000f7a:	4b0a      	ldr	r3, [pc, #40]	; (8000fa4 <HAL_MspInit+0x60>)
 8000f7c:	685b      	ldr	r3, [r3, #4]
 8000f7e:	60fb      	str	r3, [r7, #12]
 8000f80:	68fb      	ldr	r3, [r7, #12]
 8000f82:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000f86:	60fb      	str	r3, [r7, #12]
 8000f88:	68fb      	ldr	r3, [r7, #12]
 8000f8a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000f8e:	60fb      	str	r3, [r7, #12]
 8000f90:	4a04      	ldr	r2, [pc, #16]	; (8000fa4 <HAL_MspInit+0x60>)
 8000f92:	68fb      	ldr	r3, [r7, #12]
 8000f94:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000f96:	bf00      	nop
 8000f98:	3714      	adds	r7, #20
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	bc80      	pop	{r7}
 8000f9e:	4770      	bx	lr
 8000fa0:	40021000 	.word	0x40021000
 8000fa4:	40010000 	.word	0x40010000

08000fa8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000fa8:	b480      	push	{r7}
 8000faa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000fac:	e7fe      	b.n	8000fac <NMI_Handler+0x4>

08000fae <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000fae:	b480      	push	{r7}
 8000fb0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000fb2:	e7fe      	b.n	8000fb2 <HardFault_Handler+0x4>

08000fb4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000fb4:	b480      	push	{r7}
 8000fb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000fb8:	e7fe      	b.n	8000fb8 <MemManage_Handler+0x4>

08000fba <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000fba:	b480      	push	{r7}
 8000fbc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000fbe:	e7fe      	b.n	8000fbe <BusFault_Handler+0x4>

08000fc0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000fc0:	b480      	push	{r7}
 8000fc2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000fc4:	e7fe      	b.n	8000fc4 <UsageFault_Handler+0x4>

08000fc6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000fc6:	b480      	push	{r7}
 8000fc8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000fca:	bf00      	nop
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	bc80      	pop	{r7}
 8000fd0:	4770      	bx	lr

08000fd2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000fd2:	b480      	push	{r7}
 8000fd4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000fd6:	bf00      	nop
 8000fd8:	46bd      	mov	sp, r7
 8000fda:	bc80      	pop	{r7}
 8000fdc:	4770      	bx	lr

08000fde <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000fde:	b480      	push	{r7}
 8000fe0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000fe2:	bf00      	nop
 8000fe4:	46bd      	mov	sp, r7
 8000fe6:	bc80      	pop	{r7}
 8000fe8:	4770      	bx	lr

08000fea <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000fea:	b580      	push	{r7, lr}
 8000fec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000fee:	f000 f921 	bl	8001234 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000ff2:	bf00      	nop
 8000ff4:	bd80      	pop	{r7, pc}
	...

08000ff8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	b086      	sub	sp, #24
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001000:	4a14      	ldr	r2, [pc, #80]	; (8001054 <_sbrk+0x5c>)
 8001002:	4b15      	ldr	r3, [pc, #84]	; (8001058 <_sbrk+0x60>)
 8001004:	1ad3      	subs	r3, r2, r3
 8001006:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001008:	697b      	ldr	r3, [r7, #20]
 800100a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800100c:	4b13      	ldr	r3, [pc, #76]	; (800105c <_sbrk+0x64>)
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	2b00      	cmp	r3, #0
 8001012:	d102      	bne.n	800101a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001014:	4b11      	ldr	r3, [pc, #68]	; (800105c <_sbrk+0x64>)
 8001016:	4a12      	ldr	r2, [pc, #72]	; (8001060 <_sbrk+0x68>)
 8001018:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800101a:	4b10      	ldr	r3, [pc, #64]	; (800105c <_sbrk+0x64>)
 800101c:	681a      	ldr	r2, [r3, #0]
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	4413      	add	r3, r2
 8001022:	693a      	ldr	r2, [r7, #16]
 8001024:	429a      	cmp	r2, r3
 8001026:	d207      	bcs.n	8001038 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001028:	f001 fa0c 	bl	8002444 <__errno>
 800102c:	4603      	mov	r3, r0
 800102e:	220c      	movs	r2, #12
 8001030:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001032:	f04f 33ff 	mov.w	r3, #4294967295
 8001036:	e009      	b.n	800104c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001038:	4b08      	ldr	r3, [pc, #32]	; (800105c <_sbrk+0x64>)
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800103e:	4b07      	ldr	r3, [pc, #28]	; (800105c <_sbrk+0x64>)
 8001040:	681a      	ldr	r2, [r3, #0]
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	4413      	add	r3, r2
 8001046:	4a05      	ldr	r2, [pc, #20]	; (800105c <_sbrk+0x64>)
 8001048:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800104a:	68fb      	ldr	r3, [r7, #12]
}
 800104c:	4618      	mov	r0, r3
 800104e:	3718      	adds	r7, #24
 8001050:	46bd      	mov	sp, r7
 8001052:	bd80      	pop	{r7, pc}
 8001054:	20010000 	.word	0x20010000
 8001058:	00000400 	.word	0x00000400
 800105c:	20000200 	.word	0x20000200
 8001060:	20000260 	.word	0x20000260

08001064 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001064:	b480      	push	{r7}
 8001066:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001068:	bf00      	nop
 800106a:	46bd      	mov	sp, r7
 800106c:	bc80      	pop	{r7}
 800106e:	4770      	bx	lr

08001070 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8001070:	b580      	push	{r7, lr}
 8001072:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001074:	4b11      	ldr	r3, [pc, #68]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 8001076:	4a12      	ldr	r2, [pc, #72]	; (80010c0 <MX_USART1_UART_Init+0x50>)
 8001078:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800107a:	4b10      	ldr	r3, [pc, #64]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 800107c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001080:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001082:	4b0e      	ldr	r3, [pc, #56]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 8001084:	2200      	movs	r2, #0
 8001086:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001088:	4b0c      	ldr	r3, [pc, #48]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 800108a:	2200      	movs	r2, #0
 800108c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800108e:	4b0b      	ldr	r3, [pc, #44]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 8001090:	2200      	movs	r2, #0
 8001092:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001094:	4b09      	ldr	r3, [pc, #36]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 8001096:	220c      	movs	r2, #12
 8001098:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800109a:	4b08      	ldr	r3, [pc, #32]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 800109c:	2200      	movs	r2, #0
 800109e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80010a0:	4b06      	ldr	r3, [pc, #24]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 80010a2:	2200      	movs	r2, #0
 80010a4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80010a6:	4805      	ldr	r0, [pc, #20]	; (80010bc <MX_USART1_UART_Init+0x4c>)
 80010a8:	f000 ff72 	bl	8001f90 <HAL_UART_Init>
 80010ac:	4603      	mov	r3, r0
 80010ae:	2b00      	cmp	r3, #0
 80010b0:	d001      	beq.n	80010b6 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80010b2:	f7ff fe7c 	bl	8000dae <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80010b6:	bf00      	nop
 80010b8:	bd80      	pop	{r7, pc}
 80010ba:	bf00      	nop
 80010bc:	20000204 	.word	0x20000204
 80010c0:	40013800 	.word	0x40013800

080010c4 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80010c4:	b580      	push	{r7, lr}
 80010c6:	b088      	sub	sp, #32
 80010c8:	af00      	add	r7, sp, #0
 80010ca:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010cc:	f107 0310 	add.w	r3, r7, #16
 80010d0:	2200      	movs	r2, #0
 80010d2:	601a      	str	r2, [r3, #0]
 80010d4:	605a      	str	r2, [r3, #4]
 80010d6:	609a      	str	r2, [r3, #8]
 80010d8:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART1)
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	681b      	ldr	r3, [r3, #0]
 80010de:	4a1c      	ldr	r2, [pc, #112]	; (8001150 <HAL_UART_MspInit+0x8c>)
 80010e0:	4293      	cmp	r3, r2
 80010e2:	d131      	bne.n	8001148 <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80010e4:	4b1b      	ldr	r3, [pc, #108]	; (8001154 <HAL_UART_MspInit+0x90>)
 80010e6:	699b      	ldr	r3, [r3, #24]
 80010e8:	4a1a      	ldr	r2, [pc, #104]	; (8001154 <HAL_UART_MspInit+0x90>)
 80010ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80010ee:	6193      	str	r3, [r2, #24]
 80010f0:	4b18      	ldr	r3, [pc, #96]	; (8001154 <HAL_UART_MspInit+0x90>)
 80010f2:	699b      	ldr	r3, [r3, #24]
 80010f4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80010f8:	60fb      	str	r3, [r7, #12]
 80010fa:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80010fc:	4b15      	ldr	r3, [pc, #84]	; (8001154 <HAL_UART_MspInit+0x90>)
 80010fe:	699b      	ldr	r3, [r3, #24]
 8001100:	4a14      	ldr	r2, [pc, #80]	; (8001154 <HAL_UART_MspInit+0x90>)
 8001102:	f043 0304 	orr.w	r3, r3, #4
 8001106:	6193      	str	r3, [r2, #24]
 8001108:	4b12      	ldr	r3, [pc, #72]	; (8001154 <HAL_UART_MspInit+0x90>)
 800110a:	699b      	ldr	r3, [r3, #24]
 800110c:	f003 0304 	and.w	r3, r3, #4
 8001110:	60bb      	str	r3, [r7, #8]
 8001112:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001114:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001118:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800111a:	2302      	movs	r3, #2
 800111c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800111e:	2303      	movs	r3, #3
 8001120:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001122:	f107 0310 	add.w	r3, r7, #16
 8001126:	4619      	mov	r1, r3
 8001128:	480b      	ldr	r0, [pc, #44]	; (8001158 <HAL_UART_MspInit+0x94>)
 800112a:	f000 f983 	bl	8001434 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800112e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001132:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001134:	2300      	movs	r3, #0
 8001136:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001138:	2300      	movs	r3, #0
 800113a:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800113c:	f107 0310 	add.w	r3, r7, #16
 8001140:	4619      	mov	r1, r3
 8001142:	4805      	ldr	r0, [pc, #20]	; (8001158 <HAL_UART_MspInit+0x94>)
 8001144:	f000 f976 	bl	8001434 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8001148:	bf00      	nop
 800114a:	3720      	adds	r7, #32
 800114c:	46bd      	mov	sp, r7
 800114e:	bd80      	pop	{r7, pc}
 8001150:	40013800 	.word	0x40013800
 8001154:	40021000 	.word	0x40021000
 8001158:	40010800 	.word	0x40010800

0800115c <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800115c:	480c      	ldr	r0, [pc, #48]	; (8001190 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800115e:	490d      	ldr	r1, [pc, #52]	; (8001194 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001160:	4a0d      	ldr	r2, [pc, #52]	; (8001198 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001162:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001164:	e002      	b.n	800116c <LoopCopyDataInit>

08001166 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001166:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001168:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800116a:	3304      	adds	r3, #4

0800116c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800116c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800116e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001170:	d3f9      	bcc.n	8001166 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001172:	4a0a      	ldr	r2, [pc, #40]	; (800119c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001174:	4c0a      	ldr	r4, [pc, #40]	; (80011a0 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001176:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001178:	e001      	b.n	800117e <LoopFillZerobss>

0800117a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800117a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800117c:	3204      	adds	r2, #4

0800117e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800117e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001180:	d3fb      	bcc.n	800117a <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8001182:	f7ff ff6f 	bl	8001064 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001186:	f001 f963 	bl	8002450 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800118a:	f7ff fda7 	bl	8000cdc <main>
  bx lr
 800118e:	4770      	bx	lr
  ldr r0, =_sdata
 8001190:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001194:	200001e0 	.word	0x200001e0
  ldr r2, =_sidata
 8001198:	08007ffc 	.word	0x08007ffc
  ldr r2, =_sbss
 800119c:	200001e0 	.word	0x200001e0
  ldr r4, =_ebss
 80011a0:	2000025c 	.word	0x2000025c

080011a4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80011a4:	e7fe      	b.n	80011a4 <ADC1_2_IRQHandler>
	...

080011a8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80011a8:	b580      	push	{r7, lr}
 80011aa:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80011ac:	4b08      	ldr	r3, [pc, #32]	; (80011d0 <HAL_Init+0x28>)
 80011ae:	681b      	ldr	r3, [r3, #0]
 80011b0:	4a07      	ldr	r2, [pc, #28]	; (80011d0 <HAL_Init+0x28>)
 80011b2:	f043 0310 	orr.w	r3, r3, #16
 80011b6:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80011b8:	2003      	movs	r0, #3
 80011ba:	f000 f907 	bl	80013cc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80011be:	200f      	movs	r0, #15
 80011c0:	f000 f808 	bl	80011d4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80011c4:	f7ff febe 	bl	8000f44 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80011c8:	2300      	movs	r3, #0
}
 80011ca:	4618      	mov	r0, r3
 80011cc:	bd80      	pop	{r7, pc}
 80011ce:	bf00      	nop
 80011d0:	40022000 	.word	0x40022000

080011d4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80011d4:	b580      	push	{r7, lr}
 80011d6:	b082      	sub	sp, #8
 80011d8:	af00      	add	r7, sp, #0
 80011da:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80011dc:	4b12      	ldr	r3, [pc, #72]	; (8001228 <HAL_InitTick+0x54>)
 80011de:	681a      	ldr	r2, [r3, #0]
 80011e0:	4b12      	ldr	r3, [pc, #72]	; (800122c <HAL_InitTick+0x58>)
 80011e2:	781b      	ldrb	r3, [r3, #0]
 80011e4:	4619      	mov	r1, r3
 80011e6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80011ea:	fbb3 f3f1 	udiv	r3, r3, r1
 80011ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80011f2:	4618      	mov	r0, r3
 80011f4:	f000 f911 	bl	800141a <HAL_SYSTICK_Config>
 80011f8:	4603      	mov	r3, r0
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d001      	beq.n	8001202 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80011fe:	2301      	movs	r3, #1
 8001200:	e00e      	b.n	8001220 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	2b0f      	cmp	r3, #15
 8001206:	d80a      	bhi.n	800121e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001208:	2200      	movs	r2, #0
 800120a:	6879      	ldr	r1, [r7, #4]
 800120c:	f04f 30ff 	mov.w	r0, #4294967295
 8001210:	f000 f8e7 	bl	80013e2 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001214:	4a06      	ldr	r2, [pc, #24]	; (8001230 <HAL_InitTick+0x5c>)
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800121a:	2300      	movs	r3, #0
 800121c:	e000      	b.n	8001220 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800121e:	2301      	movs	r3, #1
}
 8001220:	4618      	mov	r0, r3
 8001222:	3708      	adds	r7, #8
 8001224:	46bd      	mov	sp, r7
 8001226:	bd80      	pop	{r7, pc}
 8001228:	20000000 	.word	0x20000000
 800122c:	20000008 	.word	0x20000008
 8001230:	20000004 	.word	0x20000004

08001234 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001234:	b480      	push	{r7}
 8001236:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001238:	4b05      	ldr	r3, [pc, #20]	; (8001250 <HAL_IncTick+0x1c>)
 800123a:	781b      	ldrb	r3, [r3, #0]
 800123c:	461a      	mov	r2, r3
 800123e:	4b05      	ldr	r3, [pc, #20]	; (8001254 <HAL_IncTick+0x20>)
 8001240:	681b      	ldr	r3, [r3, #0]
 8001242:	4413      	add	r3, r2
 8001244:	4a03      	ldr	r2, [pc, #12]	; (8001254 <HAL_IncTick+0x20>)
 8001246:	6013      	str	r3, [r2, #0]
}
 8001248:	bf00      	nop
 800124a:	46bd      	mov	sp, r7
 800124c:	bc80      	pop	{r7}
 800124e:	4770      	bx	lr
 8001250:	20000008 	.word	0x20000008
 8001254:	20000248 	.word	0x20000248

08001258 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001258:	b480      	push	{r7}
 800125a:	af00      	add	r7, sp, #0
  return uwTick;
 800125c:	4b02      	ldr	r3, [pc, #8]	; (8001268 <HAL_GetTick+0x10>)
 800125e:	681b      	ldr	r3, [r3, #0]
}
 8001260:	4618      	mov	r0, r3
 8001262:	46bd      	mov	sp, r7
 8001264:	bc80      	pop	{r7}
 8001266:	4770      	bx	lr
 8001268:	20000248 	.word	0x20000248

0800126c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800126c:	b480      	push	{r7}
 800126e:	b085      	sub	sp, #20
 8001270:	af00      	add	r7, sp, #0
 8001272:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	f003 0307 	and.w	r3, r3, #7
 800127a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800127c:	4b0c      	ldr	r3, [pc, #48]	; (80012b0 <__NVIC_SetPriorityGrouping+0x44>)
 800127e:	68db      	ldr	r3, [r3, #12]
 8001280:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001282:	68ba      	ldr	r2, [r7, #8]
 8001284:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001288:	4013      	ands	r3, r2
 800128a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 800128c:	68fb      	ldr	r3, [r7, #12]
 800128e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001290:	68bb      	ldr	r3, [r7, #8]
 8001292:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001294:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001298:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800129c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800129e:	4a04      	ldr	r2, [pc, #16]	; (80012b0 <__NVIC_SetPriorityGrouping+0x44>)
 80012a0:	68bb      	ldr	r3, [r7, #8]
 80012a2:	60d3      	str	r3, [r2, #12]
}
 80012a4:	bf00      	nop
 80012a6:	3714      	adds	r7, #20
 80012a8:	46bd      	mov	sp, r7
 80012aa:	bc80      	pop	{r7}
 80012ac:	4770      	bx	lr
 80012ae:	bf00      	nop
 80012b0:	e000ed00 	.word	0xe000ed00

080012b4 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80012b8:	4b04      	ldr	r3, [pc, #16]	; (80012cc <__NVIC_GetPriorityGrouping+0x18>)
 80012ba:	68db      	ldr	r3, [r3, #12]
 80012bc:	0a1b      	lsrs	r3, r3, #8
 80012be:	f003 0307 	and.w	r3, r3, #7
}
 80012c2:	4618      	mov	r0, r3
 80012c4:	46bd      	mov	sp, r7
 80012c6:	bc80      	pop	{r7}
 80012c8:	4770      	bx	lr
 80012ca:	bf00      	nop
 80012cc:	e000ed00 	.word	0xe000ed00

080012d0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80012d0:	b480      	push	{r7}
 80012d2:	b083      	sub	sp, #12
 80012d4:	af00      	add	r7, sp, #0
 80012d6:	4603      	mov	r3, r0
 80012d8:	6039      	str	r1, [r7, #0]
 80012da:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80012dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	db0a      	blt.n	80012fa <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80012e4:	683b      	ldr	r3, [r7, #0]
 80012e6:	b2da      	uxtb	r2, r3
 80012e8:	490c      	ldr	r1, [pc, #48]	; (800131c <__NVIC_SetPriority+0x4c>)
 80012ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012ee:	0112      	lsls	r2, r2, #4
 80012f0:	b2d2      	uxtb	r2, r2
 80012f2:	440b      	add	r3, r1
 80012f4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80012f8:	e00a      	b.n	8001310 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80012fa:	683b      	ldr	r3, [r7, #0]
 80012fc:	b2da      	uxtb	r2, r3
 80012fe:	4908      	ldr	r1, [pc, #32]	; (8001320 <__NVIC_SetPriority+0x50>)
 8001300:	79fb      	ldrb	r3, [r7, #7]
 8001302:	f003 030f 	and.w	r3, r3, #15
 8001306:	3b04      	subs	r3, #4
 8001308:	0112      	lsls	r2, r2, #4
 800130a:	b2d2      	uxtb	r2, r2
 800130c:	440b      	add	r3, r1
 800130e:	761a      	strb	r2, [r3, #24]
}
 8001310:	bf00      	nop
 8001312:	370c      	adds	r7, #12
 8001314:	46bd      	mov	sp, r7
 8001316:	bc80      	pop	{r7}
 8001318:	4770      	bx	lr
 800131a:	bf00      	nop
 800131c:	e000e100 	.word	0xe000e100
 8001320:	e000ed00 	.word	0xe000ed00

08001324 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001324:	b480      	push	{r7}
 8001326:	b089      	sub	sp, #36	; 0x24
 8001328:	af00      	add	r7, sp, #0
 800132a:	60f8      	str	r0, [r7, #12]
 800132c:	60b9      	str	r1, [r7, #8]
 800132e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001330:	68fb      	ldr	r3, [r7, #12]
 8001332:	f003 0307 	and.w	r3, r3, #7
 8001336:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001338:	69fb      	ldr	r3, [r7, #28]
 800133a:	f1c3 0307 	rsb	r3, r3, #7
 800133e:	2b04      	cmp	r3, #4
 8001340:	bf28      	it	cs
 8001342:	2304      	movcs	r3, #4
 8001344:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001346:	69fb      	ldr	r3, [r7, #28]
 8001348:	3304      	adds	r3, #4
 800134a:	2b06      	cmp	r3, #6
 800134c:	d902      	bls.n	8001354 <NVIC_EncodePriority+0x30>
 800134e:	69fb      	ldr	r3, [r7, #28]
 8001350:	3b03      	subs	r3, #3
 8001352:	e000      	b.n	8001356 <NVIC_EncodePriority+0x32>
 8001354:	2300      	movs	r3, #0
 8001356:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001358:	f04f 32ff 	mov.w	r2, #4294967295
 800135c:	69bb      	ldr	r3, [r7, #24]
 800135e:	fa02 f303 	lsl.w	r3, r2, r3
 8001362:	43da      	mvns	r2, r3
 8001364:	68bb      	ldr	r3, [r7, #8]
 8001366:	401a      	ands	r2, r3
 8001368:	697b      	ldr	r3, [r7, #20]
 800136a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800136c:	f04f 31ff 	mov.w	r1, #4294967295
 8001370:	697b      	ldr	r3, [r7, #20]
 8001372:	fa01 f303 	lsl.w	r3, r1, r3
 8001376:	43d9      	mvns	r1, r3
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800137c:	4313      	orrs	r3, r2
         );
}
 800137e:	4618      	mov	r0, r3
 8001380:	3724      	adds	r7, #36	; 0x24
 8001382:	46bd      	mov	sp, r7
 8001384:	bc80      	pop	{r7}
 8001386:	4770      	bx	lr

08001388 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001388:	b580      	push	{r7, lr}
 800138a:	b082      	sub	sp, #8
 800138c:	af00      	add	r7, sp, #0
 800138e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001390:	687b      	ldr	r3, [r7, #4]
 8001392:	3b01      	subs	r3, #1
 8001394:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001398:	d301      	bcc.n	800139e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800139a:	2301      	movs	r3, #1
 800139c:	e00f      	b.n	80013be <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800139e:	4a0a      	ldr	r2, [pc, #40]	; (80013c8 <SysTick_Config+0x40>)
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	3b01      	subs	r3, #1
 80013a4:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80013a6:	210f      	movs	r1, #15
 80013a8:	f04f 30ff 	mov.w	r0, #4294967295
 80013ac:	f7ff ff90 	bl	80012d0 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80013b0:	4b05      	ldr	r3, [pc, #20]	; (80013c8 <SysTick_Config+0x40>)
 80013b2:	2200      	movs	r2, #0
 80013b4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80013b6:	4b04      	ldr	r3, [pc, #16]	; (80013c8 <SysTick_Config+0x40>)
 80013b8:	2207      	movs	r2, #7
 80013ba:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80013bc:	2300      	movs	r3, #0
}
 80013be:	4618      	mov	r0, r3
 80013c0:	3708      	adds	r7, #8
 80013c2:	46bd      	mov	sp, r7
 80013c4:	bd80      	pop	{r7, pc}
 80013c6:	bf00      	nop
 80013c8:	e000e010 	.word	0xe000e010

080013cc <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80013cc:	b580      	push	{r7, lr}
 80013ce:	b082      	sub	sp, #8
 80013d0:	af00      	add	r7, sp, #0
 80013d2:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80013d4:	6878      	ldr	r0, [r7, #4]
 80013d6:	f7ff ff49 	bl	800126c <__NVIC_SetPriorityGrouping>
}
 80013da:	bf00      	nop
 80013dc:	3708      	adds	r7, #8
 80013de:	46bd      	mov	sp, r7
 80013e0:	bd80      	pop	{r7, pc}

080013e2 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80013e2:	b580      	push	{r7, lr}
 80013e4:	b086      	sub	sp, #24
 80013e6:	af00      	add	r7, sp, #0
 80013e8:	4603      	mov	r3, r0
 80013ea:	60b9      	str	r1, [r7, #8]
 80013ec:	607a      	str	r2, [r7, #4]
 80013ee:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80013f0:	2300      	movs	r3, #0
 80013f2:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80013f4:	f7ff ff5e 	bl	80012b4 <__NVIC_GetPriorityGrouping>
 80013f8:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80013fa:	687a      	ldr	r2, [r7, #4]
 80013fc:	68b9      	ldr	r1, [r7, #8]
 80013fe:	6978      	ldr	r0, [r7, #20]
 8001400:	f7ff ff90 	bl	8001324 <NVIC_EncodePriority>
 8001404:	4602      	mov	r2, r0
 8001406:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800140a:	4611      	mov	r1, r2
 800140c:	4618      	mov	r0, r3
 800140e:	f7ff ff5f 	bl	80012d0 <__NVIC_SetPriority>
}
 8001412:	bf00      	nop
 8001414:	3718      	adds	r7, #24
 8001416:	46bd      	mov	sp, r7
 8001418:	bd80      	pop	{r7, pc}

0800141a <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800141a:	b580      	push	{r7, lr}
 800141c:	b082      	sub	sp, #8
 800141e:	af00      	add	r7, sp, #0
 8001420:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001422:	6878      	ldr	r0, [r7, #4]
 8001424:	f7ff ffb0 	bl	8001388 <SysTick_Config>
 8001428:	4603      	mov	r3, r0
}
 800142a:	4618      	mov	r0, r3
 800142c:	3708      	adds	r7, #8
 800142e:	46bd      	mov	sp, r7
 8001430:	bd80      	pop	{r7, pc}
	...

08001434 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001434:	b480      	push	{r7}
 8001436:	b08b      	sub	sp, #44	; 0x2c
 8001438:	af00      	add	r7, sp, #0
 800143a:	6078      	str	r0, [r7, #4]
 800143c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 800143e:	2300      	movs	r3, #0
 8001440:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 8001442:	2300      	movs	r3, #0
 8001444:	623b      	str	r3, [r7, #32]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001446:	e179      	b.n	800173c <HAL_GPIO_Init+0x308>
  {
    /* Get the IO position */
    ioposition = (0x01uL << position);
 8001448:	2201      	movs	r2, #1
 800144a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800144c:	fa02 f303 	lsl.w	r3, r2, r3
 8001450:	61fb      	str	r3, [r7, #28]

    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001452:	683b      	ldr	r3, [r7, #0]
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	69fa      	ldr	r2, [r7, #28]
 8001458:	4013      	ands	r3, r2
 800145a:	61bb      	str	r3, [r7, #24]

    if (iocurrent == ioposition)
 800145c:	69ba      	ldr	r2, [r7, #24]
 800145e:	69fb      	ldr	r3, [r7, #28]
 8001460:	429a      	cmp	r2, r3
 8001462:	f040 8168 	bne.w	8001736 <HAL_GPIO_Init+0x302>
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 8001466:	683b      	ldr	r3, [r7, #0]
 8001468:	685b      	ldr	r3, [r3, #4]
 800146a:	4a96      	ldr	r2, [pc, #600]	; (80016c4 <HAL_GPIO_Init+0x290>)
 800146c:	4293      	cmp	r3, r2
 800146e:	d05e      	beq.n	800152e <HAL_GPIO_Init+0xfa>
 8001470:	4a94      	ldr	r2, [pc, #592]	; (80016c4 <HAL_GPIO_Init+0x290>)
 8001472:	4293      	cmp	r3, r2
 8001474:	d875      	bhi.n	8001562 <HAL_GPIO_Init+0x12e>
 8001476:	4a94      	ldr	r2, [pc, #592]	; (80016c8 <HAL_GPIO_Init+0x294>)
 8001478:	4293      	cmp	r3, r2
 800147a:	d058      	beq.n	800152e <HAL_GPIO_Init+0xfa>
 800147c:	4a92      	ldr	r2, [pc, #584]	; (80016c8 <HAL_GPIO_Init+0x294>)
 800147e:	4293      	cmp	r3, r2
 8001480:	d86f      	bhi.n	8001562 <HAL_GPIO_Init+0x12e>
 8001482:	4a92      	ldr	r2, [pc, #584]	; (80016cc <HAL_GPIO_Init+0x298>)
 8001484:	4293      	cmp	r3, r2
 8001486:	d052      	beq.n	800152e <HAL_GPIO_Init+0xfa>
 8001488:	4a90      	ldr	r2, [pc, #576]	; (80016cc <HAL_GPIO_Init+0x298>)
 800148a:	4293      	cmp	r3, r2
 800148c:	d869      	bhi.n	8001562 <HAL_GPIO_Init+0x12e>
 800148e:	4a90      	ldr	r2, [pc, #576]	; (80016d0 <HAL_GPIO_Init+0x29c>)
 8001490:	4293      	cmp	r3, r2
 8001492:	d04c      	beq.n	800152e <HAL_GPIO_Init+0xfa>
 8001494:	4a8e      	ldr	r2, [pc, #568]	; (80016d0 <HAL_GPIO_Init+0x29c>)
 8001496:	4293      	cmp	r3, r2
 8001498:	d863      	bhi.n	8001562 <HAL_GPIO_Init+0x12e>
 800149a:	4a8e      	ldr	r2, [pc, #568]	; (80016d4 <HAL_GPIO_Init+0x2a0>)
 800149c:	4293      	cmp	r3, r2
 800149e:	d046      	beq.n	800152e <HAL_GPIO_Init+0xfa>
 80014a0:	4a8c      	ldr	r2, [pc, #560]	; (80016d4 <HAL_GPIO_Init+0x2a0>)
 80014a2:	4293      	cmp	r3, r2
 80014a4:	d85d      	bhi.n	8001562 <HAL_GPIO_Init+0x12e>
 80014a6:	2b12      	cmp	r3, #18
 80014a8:	d82a      	bhi.n	8001500 <HAL_GPIO_Init+0xcc>
 80014aa:	2b12      	cmp	r3, #18
 80014ac:	d859      	bhi.n	8001562 <HAL_GPIO_Init+0x12e>
 80014ae:	a201      	add	r2, pc, #4	; (adr r2, 80014b4 <HAL_GPIO_Init+0x80>)
 80014b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014b4:	0800152f 	.word	0x0800152f
 80014b8:	08001509 	.word	0x08001509
 80014bc:	0800151b 	.word	0x0800151b
 80014c0:	0800155d 	.word	0x0800155d
 80014c4:	08001563 	.word	0x08001563
 80014c8:	08001563 	.word	0x08001563
 80014cc:	08001563 	.word	0x08001563
 80014d0:	08001563 	.word	0x08001563
 80014d4:	08001563 	.word	0x08001563
 80014d8:	08001563 	.word	0x08001563
 80014dc:	08001563 	.word	0x08001563
 80014e0:	08001563 	.word	0x08001563
 80014e4:	08001563 	.word	0x08001563
 80014e8:	08001563 	.word	0x08001563
 80014ec:	08001563 	.word	0x08001563
 80014f0:	08001563 	.word	0x08001563
 80014f4:	08001563 	.word	0x08001563
 80014f8:	08001511 	.word	0x08001511
 80014fc:	08001525 	.word	0x08001525
 8001500:	4a75      	ldr	r2, [pc, #468]	; (80016d8 <HAL_GPIO_Init+0x2a4>)
 8001502:	4293      	cmp	r3, r2
 8001504:	d013      	beq.n	800152e <HAL_GPIO_Init+0xfa>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
          break;

        /* Parameters are checked with assert_param */
        default:
          break;
 8001506:	e02c      	b.n	8001562 <HAL_GPIO_Init+0x12e>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 8001508:	683b      	ldr	r3, [r7, #0]
 800150a:	68db      	ldr	r3, [r3, #12]
 800150c:	623b      	str	r3, [r7, #32]
          break;
 800150e:	e029      	b.n	8001564 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 8001510:	683b      	ldr	r3, [r7, #0]
 8001512:	68db      	ldr	r3, [r3, #12]
 8001514:	3304      	adds	r3, #4
 8001516:	623b      	str	r3, [r7, #32]
          break;
 8001518:	e024      	b.n	8001564 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 800151a:	683b      	ldr	r3, [r7, #0]
 800151c:	68db      	ldr	r3, [r3, #12]
 800151e:	3308      	adds	r3, #8
 8001520:	623b      	str	r3, [r7, #32]
          break;
 8001522:	e01f      	b.n	8001564 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 8001524:	683b      	ldr	r3, [r7, #0]
 8001526:	68db      	ldr	r3, [r3, #12]
 8001528:	330c      	adds	r3, #12
 800152a:	623b      	str	r3, [r7, #32]
          break;
 800152c:	e01a      	b.n	8001564 <HAL_GPIO_Init+0x130>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 800152e:	683b      	ldr	r3, [r7, #0]
 8001530:	689b      	ldr	r3, [r3, #8]
 8001532:	2b00      	cmp	r3, #0
 8001534:	d102      	bne.n	800153c <HAL_GPIO_Init+0x108>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 8001536:	2304      	movs	r3, #4
 8001538:	623b      	str	r3, [r7, #32]
          break;
 800153a:	e013      	b.n	8001564 <HAL_GPIO_Init+0x130>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 800153c:	683b      	ldr	r3, [r7, #0]
 800153e:	689b      	ldr	r3, [r3, #8]
 8001540:	2b01      	cmp	r3, #1
 8001542:	d105      	bne.n	8001550 <HAL_GPIO_Init+0x11c>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8001544:	2308      	movs	r3, #8
 8001546:	623b      	str	r3, [r7, #32]
            GPIOx->BSRR = ioposition;
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	69fa      	ldr	r2, [r7, #28]
 800154c:	611a      	str	r2, [r3, #16]
          break;
 800154e:	e009      	b.n	8001564 <HAL_GPIO_Init+0x130>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8001550:	2308      	movs	r3, #8
 8001552:	623b      	str	r3, [r7, #32]
            GPIOx->BRR = ioposition;
 8001554:	687b      	ldr	r3, [r7, #4]
 8001556:	69fa      	ldr	r2, [r7, #28]
 8001558:	615a      	str	r2, [r3, #20]
          break;
 800155a:	e003      	b.n	8001564 <HAL_GPIO_Init+0x130>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 800155c:	2300      	movs	r3, #0
 800155e:	623b      	str	r3, [r7, #32]
          break;
 8001560:	e000      	b.n	8001564 <HAL_GPIO_Init+0x130>
          break;
 8001562:	bf00      	nop
      }

      /* Check if the current bit belongs to first half or last half of the pin count number
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 8001564:	69bb      	ldr	r3, [r7, #24]
 8001566:	2bff      	cmp	r3, #255	; 0xff
 8001568:	d801      	bhi.n	800156e <HAL_GPIO_Init+0x13a>
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	e001      	b.n	8001572 <HAL_GPIO_Init+0x13e>
 800156e:	687b      	ldr	r3, [r7, #4]
 8001570:	3304      	adds	r3, #4
 8001572:	617b      	str	r3, [r7, #20]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 8001574:	69bb      	ldr	r3, [r7, #24]
 8001576:	2bff      	cmp	r3, #255	; 0xff
 8001578:	d802      	bhi.n	8001580 <HAL_GPIO_Init+0x14c>
 800157a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800157c:	009b      	lsls	r3, r3, #2
 800157e:	e002      	b.n	8001586 <HAL_GPIO_Init+0x152>
 8001580:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001582:	3b08      	subs	r3, #8
 8001584:	009b      	lsls	r3, r3, #2
 8001586:	613b      	str	r3, [r7, #16]

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 8001588:	697b      	ldr	r3, [r7, #20]
 800158a:	681a      	ldr	r2, [r3, #0]
 800158c:	210f      	movs	r1, #15
 800158e:	693b      	ldr	r3, [r7, #16]
 8001590:	fa01 f303 	lsl.w	r3, r1, r3
 8001594:	43db      	mvns	r3, r3
 8001596:	401a      	ands	r2, r3
 8001598:	6a39      	ldr	r1, [r7, #32]
 800159a:	693b      	ldr	r3, [r7, #16]
 800159c:	fa01 f303 	lsl.w	r3, r1, r3
 80015a0:	431a      	orrs	r2, r3
 80015a2:	697b      	ldr	r3, [r7, #20]
 80015a4:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80015a6:	683b      	ldr	r3, [r7, #0]
 80015a8:	685b      	ldr	r3, [r3, #4]
 80015aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	f000 80c1 	beq.w	8001736 <HAL_GPIO_Init+0x302>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 80015b4:	4b49      	ldr	r3, [pc, #292]	; (80016dc <HAL_GPIO_Init+0x2a8>)
 80015b6:	699b      	ldr	r3, [r3, #24]
 80015b8:	4a48      	ldr	r2, [pc, #288]	; (80016dc <HAL_GPIO_Init+0x2a8>)
 80015ba:	f043 0301 	orr.w	r3, r3, #1
 80015be:	6193      	str	r3, [r2, #24]
 80015c0:	4b46      	ldr	r3, [pc, #280]	; (80016dc <HAL_GPIO_Init+0x2a8>)
 80015c2:	699b      	ldr	r3, [r3, #24]
 80015c4:	f003 0301 	and.w	r3, r3, #1
 80015c8:	60bb      	str	r3, [r7, #8]
 80015ca:	68bb      	ldr	r3, [r7, #8]
        temp = AFIO->EXTICR[position >> 2u];
 80015cc:	4a44      	ldr	r2, [pc, #272]	; (80016e0 <HAL_GPIO_Init+0x2ac>)
 80015ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015d0:	089b      	lsrs	r3, r3, #2
 80015d2:	3302      	adds	r3, #2
 80015d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015d8:	60fb      	str	r3, [r7, #12]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 80015da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015dc:	f003 0303 	and.w	r3, r3, #3
 80015e0:	009b      	lsls	r3, r3, #2
 80015e2:	220f      	movs	r2, #15
 80015e4:	fa02 f303 	lsl.w	r3, r2, r3
 80015e8:	43db      	mvns	r3, r3
 80015ea:	68fa      	ldr	r2, [r7, #12]
 80015ec:	4013      	ands	r3, r2
 80015ee:	60fb      	str	r3, [r7, #12]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	4a3c      	ldr	r2, [pc, #240]	; (80016e4 <HAL_GPIO_Init+0x2b0>)
 80015f4:	4293      	cmp	r3, r2
 80015f6:	d01f      	beq.n	8001638 <HAL_GPIO_Init+0x204>
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	4a3b      	ldr	r2, [pc, #236]	; (80016e8 <HAL_GPIO_Init+0x2b4>)
 80015fc:	4293      	cmp	r3, r2
 80015fe:	d019      	beq.n	8001634 <HAL_GPIO_Init+0x200>
 8001600:	687b      	ldr	r3, [r7, #4]
 8001602:	4a3a      	ldr	r2, [pc, #232]	; (80016ec <HAL_GPIO_Init+0x2b8>)
 8001604:	4293      	cmp	r3, r2
 8001606:	d013      	beq.n	8001630 <HAL_GPIO_Init+0x1fc>
 8001608:	687b      	ldr	r3, [r7, #4]
 800160a:	4a39      	ldr	r2, [pc, #228]	; (80016f0 <HAL_GPIO_Init+0x2bc>)
 800160c:	4293      	cmp	r3, r2
 800160e:	d00d      	beq.n	800162c <HAL_GPIO_Init+0x1f8>
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	4a38      	ldr	r2, [pc, #224]	; (80016f4 <HAL_GPIO_Init+0x2c0>)
 8001614:	4293      	cmp	r3, r2
 8001616:	d007      	beq.n	8001628 <HAL_GPIO_Init+0x1f4>
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	4a37      	ldr	r2, [pc, #220]	; (80016f8 <HAL_GPIO_Init+0x2c4>)
 800161c:	4293      	cmp	r3, r2
 800161e:	d101      	bne.n	8001624 <HAL_GPIO_Init+0x1f0>
 8001620:	2305      	movs	r3, #5
 8001622:	e00a      	b.n	800163a <HAL_GPIO_Init+0x206>
 8001624:	2306      	movs	r3, #6
 8001626:	e008      	b.n	800163a <HAL_GPIO_Init+0x206>
 8001628:	2304      	movs	r3, #4
 800162a:	e006      	b.n	800163a <HAL_GPIO_Init+0x206>
 800162c:	2303      	movs	r3, #3
 800162e:	e004      	b.n	800163a <HAL_GPIO_Init+0x206>
 8001630:	2302      	movs	r3, #2
 8001632:	e002      	b.n	800163a <HAL_GPIO_Init+0x206>
 8001634:	2301      	movs	r3, #1
 8001636:	e000      	b.n	800163a <HAL_GPIO_Init+0x206>
 8001638:	2300      	movs	r3, #0
 800163a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800163c:	f002 0203 	and.w	r2, r2, #3
 8001640:	0092      	lsls	r2, r2, #2
 8001642:	4093      	lsls	r3, r2
 8001644:	68fa      	ldr	r2, [r7, #12]
 8001646:	4313      	orrs	r3, r2
 8001648:	60fb      	str	r3, [r7, #12]
        AFIO->EXTICR[position >> 2u] = temp;
 800164a:	4925      	ldr	r1, [pc, #148]	; (80016e0 <HAL_GPIO_Init+0x2ac>)
 800164c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800164e:	089b      	lsrs	r3, r3, #2
 8001650:	3302      	adds	r3, #2
 8001652:	68fa      	ldr	r2, [r7, #12]
 8001654:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001658:	683b      	ldr	r3, [r7, #0]
 800165a:	685b      	ldr	r3, [r3, #4]
 800165c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001660:	2b00      	cmp	r3, #0
 8001662:	d006      	beq.n	8001672 <HAL_GPIO_Init+0x23e>
        {
          SET_BIT(EXTI->IMR, iocurrent);
 8001664:	4b25      	ldr	r3, [pc, #148]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 8001666:	681a      	ldr	r2, [r3, #0]
 8001668:	4924      	ldr	r1, [pc, #144]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 800166a:	69bb      	ldr	r3, [r7, #24]
 800166c:	4313      	orrs	r3, r2
 800166e:	600b      	str	r3, [r1, #0]
 8001670:	e006      	b.n	8001680 <HAL_GPIO_Init+0x24c>
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 8001672:	4b22      	ldr	r3, [pc, #136]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 8001674:	681a      	ldr	r2, [r3, #0]
 8001676:	69bb      	ldr	r3, [r7, #24]
 8001678:	43db      	mvns	r3, r3
 800167a:	4920      	ldr	r1, [pc, #128]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 800167c:	4013      	ands	r3, r2
 800167e:	600b      	str	r3, [r1, #0]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001680:	683b      	ldr	r3, [r7, #0]
 8001682:	685b      	ldr	r3, [r3, #4]
 8001684:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001688:	2b00      	cmp	r3, #0
 800168a:	d006      	beq.n	800169a <HAL_GPIO_Init+0x266>
        {
          SET_BIT(EXTI->EMR, iocurrent);
 800168c:	4b1b      	ldr	r3, [pc, #108]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 800168e:	685a      	ldr	r2, [r3, #4]
 8001690:	491a      	ldr	r1, [pc, #104]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 8001692:	69bb      	ldr	r3, [r7, #24]
 8001694:	4313      	orrs	r3, r2
 8001696:	604b      	str	r3, [r1, #4]
 8001698:	e006      	b.n	80016a8 <HAL_GPIO_Init+0x274>
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 800169a:	4b18      	ldr	r3, [pc, #96]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 800169c:	685a      	ldr	r2, [r3, #4]
 800169e:	69bb      	ldr	r3, [r7, #24]
 80016a0:	43db      	mvns	r3, r3
 80016a2:	4916      	ldr	r1, [pc, #88]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 80016a4:	4013      	ands	r3, r2
 80016a6:	604b      	str	r3, [r1, #4]
        }

        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80016a8:	683b      	ldr	r3, [r7, #0]
 80016aa:	685b      	ldr	r3, [r3, #4]
 80016ac:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80016b0:	2b00      	cmp	r3, #0
 80016b2:	d025      	beq.n	8001700 <HAL_GPIO_Init+0x2cc>
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 80016b4:	4b11      	ldr	r3, [pc, #68]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 80016b6:	689a      	ldr	r2, [r3, #8]
 80016b8:	4910      	ldr	r1, [pc, #64]	; (80016fc <HAL_GPIO_Init+0x2c8>)
 80016ba:	69bb      	ldr	r3, [r7, #24]
 80016bc:	4313      	orrs	r3, r2
 80016be:	608b      	str	r3, [r1, #8]
 80016c0:	e025      	b.n	800170e <HAL_GPIO_Init+0x2da>
 80016c2:	bf00      	nop
 80016c4:	10320000 	.word	0x10320000
 80016c8:	10310000 	.word	0x10310000
 80016cc:	10220000 	.word	0x10220000
 80016d0:	10210000 	.word	0x10210000
 80016d4:	10120000 	.word	0x10120000
 80016d8:	10110000 	.word	0x10110000
 80016dc:	40021000 	.word	0x40021000
 80016e0:	40010000 	.word	0x40010000
 80016e4:	40010800 	.word	0x40010800
 80016e8:	40010c00 	.word	0x40010c00
 80016ec:	40011000 	.word	0x40011000
 80016f0:	40011400 	.word	0x40011400
 80016f4:	40011800 	.word	0x40011800
 80016f8:	40011c00 	.word	0x40011c00
 80016fc:	40010400 	.word	0x40010400
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 8001700:	4b15      	ldr	r3, [pc, #84]	; (8001758 <HAL_GPIO_Init+0x324>)
 8001702:	689a      	ldr	r2, [r3, #8]
 8001704:	69bb      	ldr	r3, [r7, #24]
 8001706:	43db      	mvns	r3, r3
 8001708:	4913      	ldr	r1, [pc, #76]	; (8001758 <HAL_GPIO_Init+0x324>)
 800170a:	4013      	ands	r3, r2
 800170c:	608b      	str	r3, [r1, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800170e:	683b      	ldr	r3, [r7, #0]
 8001710:	685b      	ldr	r3, [r3, #4]
 8001712:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001716:	2b00      	cmp	r3, #0
 8001718:	d006      	beq.n	8001728 <HAL_GPIO_Init+0x2f4>
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 800171a:	4b0f      	ldr	r3, [pc, #60]	; (8001758 <HAL_GPIO_Init+0x324>)
 800171c:	68da      	ldr	r2, [r3, #12]
 800171e:	490e      	ldr	r1, [pc, #56]	; (8001758 <HAL_GPIO_Init+0x324>)
 8001720:	69bb      	ldr	r3, [r7, #24]
 8001722:	4313      	orrs	r3, r2
 8001724:	60cb      	str	r3, [r1, #12]
 8001726:	e006      	b.n	8001736 <HAL_GPIO_Init+0x302>
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 8001728:	4b0b      	ldr	r3, [pc, #44]	; (8001758 <HAL_GPIO_Init+0x324>)
 800172a:	68da      	ldr	r2, [r3, #12]
 800172c:	69bb      	ldr	r3, [r7, #24]
 800172e:	43db      	mvns	r3, r3
 8001730:	4909      	ldr	r1, [pc, #36]	; (8001758 <HAL_GPIO_Init+0x324>)
 8001732:	4013      	ands	r3, r2
 8001734:	60cb      	str	r3, [r1, #12]
        }
      }
    }

	position++;
 8001736:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001738:	3301      	adds	r3, #1
 800173a:	627b      	str	r3, [r7, #36]	; 0x24
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800173c:	683b      	ldr	r3, [r7, #0]
 800173e:	681a      	ldr	r2, [r3, #0]
 8001740:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001742:	fa22 f303 	lsr.w	r3, r2, r3
 8001746:	2b00      	cmp	r3, #0
 8001748:	f47f ae7e 	bne.w	8001448 <HAL_GPIO_Init+0x14>
  }
}
 800174c:	bf00      	nop
 800174e:	bf00      	nop
 8001750:	372c      	adds	r7, #44	; 0x2c
 8001752:	46bd      	mov	sp, r7
 8001754:	bc80      	pop	{r7}
 8001756:	4770      	bx	lr
 8001758:	40010400 	.word	0x40010400

0800175c <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800175c:	b580      	push	{r7, lr}
 800175e:	b086      	sub	sp, #24
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	2b00      	cmp	r3, #0
 8001768:	d101      	bne.n	800176e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800176a:	2301      	movs	r3, #1
 800176c:	e272      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	681b      	ldr	r3, [r3, #0]
 8001772:	f003 0301 	and.w	r3, r3, #1
 8001776:	2b00      	cmp	r3, #0
 8001778:	f000 8087 	beq.w	800188a <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 800177c:	4b92      	ldr	r3, [pc, #584]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800177e:	685b      	ldr	r3, [r3, #4]
 8001780:	f003 030c 	and.w	r3, r3, #12
 8001784:	2b04      	cmp	r3, #4
 8001786:	d00c      	beq.n	80017a2 <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8001788:	4b8f      	ldr	r3, [pc, #572]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800178a:	685b      	ldr	r3, [r3, #4]
 800178c:	f003 030c 	and.w	r3, r3, #12
 8001790:	2b08      	cmp	r3, #8
 8001792:	d112      	bne.n	80017ba <HAL_RCC_OscConfig+0x5e>
 8001794:	4b8c      	ldr	r3, [pc, #560]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001796:	685b      	ldr	r3, [r3, #4]
 8001798:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800179c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017a0:	d10b      	bne.n	80017ba <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80017a2:	4b89      	ldr	r3, [pc, #548]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80017aa:	2b00      	cmp	r3, #0
 80017ac:	d06c      	beq.n	8001888 <HAL_RCC_OscConfig+0x12c>
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	685b      	ldr	r3, [r3, #4]
 80017b2:	2b00      	cmp	r3, #0
 80017b4:	d168      	bne.n	8001888 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 80017b6:	2301      	movs	r3, #1
 80017b8:	e24c      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	685b      	ldr	r3, [r3, #4]
 80017be:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017c2:	d106      	bne.n	80017d2 <HAL_RCC_OscConfig+0x76>
 80017c4:	4b80      	ldr	r3, [pc, #512]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	4a7f      	ldr	r2, [pc, #508]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80017ca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80017ce:	6013      	str	r3, [r2, #0]
 80017d0:	e02e      	b.n	8001830 <HAL_RCC_OscConfig+0xd4>
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	685b      	ldr	r3, [r3, #4]
 80017d6:	2b00      	cmp	r3, #0
 80017d8:	d10c      	bne.n	80017f4 <HAL_RCC_OscConfig+0x98>
 80017da:	4b7b      	ldr	r3, [pc, #492]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	4a7a      	ldr	r2, [pc, #488]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80017e0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80017e4:	6013      	str	r3, [r2, #0]
 80017e6:	4b78      	ldr	r3, [pc, #480]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	4a77      	ldr	r2, [pc, #476]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80017ec:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80017f0:	6013      	str	r3, [r2, #0]
 80017f2:	e01d      	b.n	8001830 <HAL_RCC_OscConfig+0xd4>
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	685b      	ldr	r3, [r3, #4]
 80017f8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80017fc:	d10c      	bne.n	8001818 <HAL_RCC_OscConfig+0xbc>
 80017fe:	4b72      	ldr	r3, [pc, #456]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	4a71      	ldr	r2, [pc, #452]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001804:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001808:	6013      	str	r3, [r2, #0]
 800180a:	4b6f      	ldr	r3, [pc, #444]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	4a6e      	ldr	r2, [pc, #440]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001810:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001814:	6013      	str	r3, [r2, #0]
 8001816:	e00b      	b.n	8001830 <HAL_RCC_OscConfig+0xd4>
 8001818:	4b6b      	ldr	r3, [pc, #428]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	4a6a      	ldr	r2, [pc, #424]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800181e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001822:	6013      	str	r3, [r2, #0]
 8001824:	4b68      	ldr	r3, [pc, #416]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	4a67      	ldr	r2, [pc, #412]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800182a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800182e:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	685b      	ldr	r3, [r3, #4]
 8001834:	2b00      	cmp	r3, #0
 8001836:	d013      	beq.n	8001860 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001838:	f7ff fd0e 	bl	8001258 <HAL_GetTick>
 800183c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800183e:	e008      	b.n	8001852 <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001840:	f7ff fd0a 	bl	8001258 <HAL_GetTick>
 8001844:	4602      	mov	r2, r0
 8001846:	693b      	ldr	r3, [r7, #16]
 8001848:	1ad3      	subs	r3, r2, r3
 800184a:	2b64      	cmp	r3, #100	; 0x64
 800184c:	d901      	bls.n	8001852 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 800184e:	2303      	movs	r3, #3
 8001850:	e200      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001852:	4b5d      	ldr	r3, [pc, #372]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001854:	681b      	ldr	r3, [r3, #0]
 8001856:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800185a:	2b00      	cmp	r3, #0
 800185c:	d0f0      	beq.n	8001840 <HAL_RCC_OscConfig+0xe4>
 800185e:	e014      	b.n	800188a <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001860:	f7ff fcfa 	bl	8001258 <HAL_GetTick>
 8001864:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001866:	e008      	b.n	800187a <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001868:	f7ff fcf6 	bl	8001258 <HAL_GetTick>
 800186c:	4602      	mov	r2, r0
 800186e:	693b      	ldr	r3, [r7, #16]
 8001870:	1ad3      	subs	r3, r2, r3
 8001872:	2b64      	cmp	r3, #100	; 0x64
 8001874:	d901      	bls.n	800187a <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 8001876:	2303      	movs	r3, #3
 8001878:	e1ec      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800187a:	4b53      	ldr	r3, [pc, #332]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001882:	2b00      	cmp	r3, #0
 8001884:	d1f0      	bne.n	8001868 <HAL_RCC_OscConfig+0x10c>
 8001886:	e000      	b.n	800188a <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001888:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	681b      	ldr	r3, [r3, #0]
 800188e:	f003 0302 	and.w	r3, r3, #2
 8001892:	2b00      	cmp	r3, #0
 8001894:	d063      	beq.n	800195e <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8001896:	4b4c      	ldr	r3, [pc, #304]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001898:	685b      	ldr	r3, [r3, #4]
 800189a:	f003 030c 	and.w	r3, r3, #12
 800189e:	2b00      	cmp	r3, #0
 80018a0:	d00b      	beq.n	80018ba <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 80018a2:	4b49      	ldr	r3, [pc, #292]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80018a4:	685b      	ldr	r3, [r3, #4]
 80018a6:	f003 030c 	and.w	r3, r3, #12
 80018aa:	2b08      	cmp	r3, #8
 80018ac:	d11c      	bne.n	80018e8 <HAL_RCC_OscConfig+0x18c>
 80018ae:	4b46      	ldr	r3, [pc, #280]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80018b0:	685b      	ldr	r3, [r3, #4]
 80018b2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018b6:	2b00      	cmp	r3, #0
 80018b8:	d116      	bne.n	80018e8 <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80018ba:	4b43      	ldr	r3, [pc, #268]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80018bc:	681b      	ldr	r3, [r3, #0]
 80018be:	f003 0302 	and.w	r3, r3, #2
 80018c2:	2b00      	cmp	r3, #0
 80018c4:	d005      	beq.n	80018d2 <HAL_RCC_OscConfig+0x176>
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	691b      	ldr	r3, [r3, #16]
 80018ca:	2b01      	cmp	r3, #1
 80018cc:	d001      	beq.n	80018d2 <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 80018ce:	2301      	movs	r3, #1
 80018d0:	e1c0      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80018d2:	4b3d      	ldr	r3, [pc, #244]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	695b      	ldr	r3, [r3, #20]
 80018de:	00db      	lsls	r3, r3, #3
 80018e0:	4939      	ldr	r1, [pc, #228]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 80018e2:	4313      	orrs	r3, r2
 80018e4:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80018e6:	e03a      	b.n	800195e <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	691b      	ldr	r3, [r3, #16]
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d020      	beq.n	8001932 <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80018f0:	4b36      	ldr	r3, [pc, #216]	; (80019cc <HAL_RCC_OscConfig+0x270>)
 80018f2:	2201      	movs	r2, #1
 80018f4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80018f6:	f7ff fcaf 	bl	8001258 <HAL_GetTick>
 80018fa:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80018fc:	e008      	b.n	8001910 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80018fe:	f7ff fcab 	bl	8001258 <HAL_GetTick>
 8001902:	4602      	mov	r2, r0
 8001904:	693b      	ldr	r3, [r7, #16]
 8001906:	1ad3      	subs	r3, r2, r3
 8001908:	2b02      	cmp	r3, #2
 800190a:	d901      	bls.n	8001910 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 800190c:	2303      	movs	r3, #3
 800190e:	e1a1      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001910:	4b2d      	ldr	r3, [pc, #180]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	f003 0302 	and.w	r3, r3, #2
 8001918:	2b00      	cmp	r3, #0
 800191a:	d0f0      	beq.n	80018fe <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800191c:	4b2a      	ldr	r3, [pc, #168]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800191e:	681b      	ldr	r3, [r3, #0]
 8001920:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	695b      	ldr	r3, [r3, #20]
 8001928:	00db      	lsls	r3, r3, #3
 800192a:	4927      	ldr	r1, [pc, #156]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 800192c:	4313      	orrs	r3, r2
 800192e:	600b      	str	r3, [r1, #0]
 8001930:	e015      	b.n	800195e <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8001932:	4b26      	ldr	r3, [pc, #152]	; (80019cc <HAL_RCC_OscConfig+0x270>)
 8001934:	2200      	movs	r2, #0
 8001936:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001938:	f7ff fc8e 	bl	8001258 <HAL_GetTick>
 800193c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800193e:	e008      	b.n	8001952 <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001940:	f7ff fc8a 	bl	8001258 <HAL_GetTick>
 8001944:	4602      	mov	r2, r0
 8001946:	693b      	ldr	r3, [r7, #16]
 8001948:	1ad3      	subs	r3, r2, r3
 800194a:	2b02      	cmp	r3, #2
 800194c:	d901      	bls.n	8001952 <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 800194e:	2303      	movs	r3, #3
 8001950:	e180      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001952:	4b1d      	ldr	r3, [pc, #116]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	f003 0302 	and.w	r3, r3, #2
 800195a:	2b00      	cmp	r3, #0
 800195c:	d1f0      	bne.n	8001940 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	681b      	ldr	r3, [r3, #0]
 8001962:	f003 0308 	and.w	r3, r3, #8
 8001966:	2b00      	cmp	r3, #0
 8001968:	d03a      	beq.n	80019e0 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	699b      	ldr	r3, [r3, #24]
 800196e:	2b00      	cmp	r3, #0
 8001970:	d019      	beq.n	80019a6 <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8001972:	4b17      	ldr	r3, [pc, #92]	; (80019d0 <HAL_RCC_OscConfig+0x274>)
 8001974:	2201      	movs	r2, #1
 8001976:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001978:	f7ff fc6e 	bl	8001258 <HAL_GetTick>
 800197c:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800197e:	e008      	b.n	8001992 <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001980:	f7ff fc6a 	bl	8001258 <HAL_GetTick>
 8001984:	4602      	mov	r2, r0
 8001986:	693b      	ldr	r3, [r7, #16]
 8001988:	1ad3      	subs	r3, r2, r3
 800198a:	2b02      	cmp	r3, #2
 800198c:	d901      	bls.n	8001992 <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 800198e:	2303      	movs	r3, #3
 8001990:	e160      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001992:	4b0d      	ldr	r3, [pc, #52]	; (80019c8 <HAL_RCC_OscConfig+0x26c>)
 8001994:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001996:	f003 0302 	and.w	r3, r3, #2
 800199a:	2b00      	cmp	r3, #0
 800199c:	d0f0      	beq.n	8001980 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 800199e:	2001      	movs	r0, #1
 80019a0:	f000 fad8 	bl	8001f54 <RCC_Delay>
 80019a4:	e01c      	b.n	80019e0 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80019a6:	4b0a      	ldr	r3, [pc, #40]	; (80019d0 <HAL_RCC_OscConfig+0x274>)
 80019a8:	2200      	movs	r2, #0
 80019aa:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80019ac:	f7ff fc54 	bl	8001258 <HAL_GetTick>
 80019b0:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80019b2:	e00f      	b.n	80019d4 <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80019b4:	f7ff fc50 	bl	8001258 <HAL_GetTick>
 80019b8:	4602      	mov	r2, r0
 80019ba:	693b      	ldr	r3, [r7, #16]
 80019bc:	1ad3      	subs	r3, r2, r3
 80019be:	2b02      	cmp	r3, #2
 80019c0:	d908      	bls.n	80019d4 <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 80019c2:	2303      	movs	r3, #3
 80019c4:	e146      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
 80019c6:	bf00      	nop
 80019c8:	40021000 	.word	0x40021000
 80019cc:	42420000 	.word	0x42420000
 80019d0:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80019d4:	4b92      	ldr	r3, [pc, #584]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 80019d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80019d8:	f003 0302 	and.w	r3, r3, #2
 80019dc:	2b00      	cmp	r3, #0
 80019de:	d1e9      	bne.n	80019b4 <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80019e0:	687b      	ldr	r3, [r7, #4]
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	f003 0304 	and.w	r3, r3, #4
 80019e8:	2b00      	cmp	r3, #0
 80019ea:	f000 80a6 	beq.w	8001b3a <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 80019ee:	2300      	movs	r3, #0
 80019f0:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80019f2:	4b8b      	ldr	r3, [pc, #556]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 80019f4:	69db      	ldr	r3, [r3, #28]
 80019f6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d10d      	bne.n	8001a1a <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80019fe:	4b88      	ldr	r3, [pc, #544]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a00:	69db      	ldr	r3, [r3, #28]
 8001a02:	4a87      	ldr	r2, [pc, #540]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a04:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001a08:	61d3      	str	r3, [r2, #28]
 8001a0a:	4b85      	ldr	r3, [pc, #532]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a0c:	69db      	ldr	r3, [r3, #28]
 8001a0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a12:	60bb      	str	r3, [r7, #8]
 8001a14:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8001a16:	2301      	movs	r3, #1
 8001a18:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001a1a:	4b82      	ldr	r3, [pc, #520]	; (8001c24 <HAL_RCC_OscConfig+0x4c8>)
 8001a1c:	681b      	ldr	r3, [r3, #0]
 8001a1e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a22:	2b00      	cmp	r3, #0
 8001a24:	d118      	bne.n	8001a58 <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8001a26:	4b7f      	ldr	r3, [pc, #508]	; (8001c24 <HAL_RCC_OscConfig+0x4c8>)
 8001a28:	681b      	ldr	r3, [r3, #0]
 8001a2a:	4a7e      	ldr	r2, [pc, #504]	; (8001c24 <HAL_RCC_OscConfig+0x4c8>)
 8001a2c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a30:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8001a32:	f7ff fc11 	bl	8001258 <HAL_GetTick>
 8001a36:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001a38:	e008      	b.n	8001a4c <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001a3a:	f7ff fc0d 	bl	8001258 <HAL_GetTick>
 8001a3e:	4602      	mov	r2, r0
 8001a40:	693b      	ldr	r3, [r7, #16]
 8001a42:	1ad3      	subs	r3, r2, r3
 8001a44:	2b64      	cmp	r3, #100	; 0x64
 8001a46:	d901      	bls.n	8001a4c <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 8001a48:	2303      	movs	r3, #3
 8001a4a:	e103      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001a4c:	4b75      	ldr	r3, [pc, #468]	; (8001c24 <HAL_RCC_OscConfig+0x4c8>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	d0f0      	beq.n	8001a3a <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	68db      	ldr	r3, [r3, #12]
 8001a5c:	2b01      	cmp	r3, #1
 8001a5e:	d106      	bne.n	8001a6e <HAL_RCC_OscConfig+0x312>
 8001a60:	4b6f      	ldr	r3, [pc, #444]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a62:	6a1b      	ldr	r3, [r3, #32]
 8001a64:	4a6e      	ldr	r2, [pc, #440]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a66:	f043 0301 	orr.w	r3, r3, #1
 8001a6a:	6213      	str	r3, [r2, #32]
 8001a6c:	e02d      	b.n	8001aca <HAL_RCC_OscConfig+0x36e>
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	68db      	ldr	r3, [r3, #12]
 8001a72:	2b00      	cmp	r3, #0
 8001a74:	d10c      	bne.n	8001a90 <HAL_RCC_OscConfig+0x334>
 8001a76:	4b6a      	ldr	r3, [pc, #424]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a78:	6a1b      	ldr	r3, [r3, #32]
 8001a7a:	4a69      	ldr	r2, [pc, #420]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a7c:	f023 0301 	bic.w	r3, r3, #1
 8001a80:	6213      	str	r3, [r2, #32]
 8001a82:	4b67      	ldr	r3, [pc, #412]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a84:	6a1b      	ldr	r3, [r3, #32]
 8001a86:	4a66      	ldr	r2, [pc, #408]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a88:	f023 0304 	bic.w	r3, r3, #4
 8001a8c:	6213      	str	r3, [r2, #32]
 8001a8e:	e01c      	b.n	8001aca <HAL_RCC_OscConfig+0x36e>
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	68db      	ldr	r3, [r3, #12]
 8001a94:	2b05      	cmp	r3, #5
 8001a96:	d10c      	bne.n	8001ab2 <HAL_RCC_OscConfig+0x356>
 8001a98:	4b61      	ldr	r3, [pc, #388]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a9a:	6a1b      	ldr	r3, [r3, #32]
 8001a9c:	4a60      	ldr	r2, [pc, #384]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001a9e:	f043 0304 	orr.w	r3, r3, #4
 8001aa2:	6213      	str	r3, [r2, #32]
 8001aa4:	4b5e      	ldr	r3, [pc, #376]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001aa6:	6a1b      	ldr	r3, [r3, #32]
 8001aa8:	4a5d      	ldr	r2, [pc, #372]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001aaa:	f043 0301 	orr.w	r3, r3, #1
 8001aae:	6213      	str	r3, [r2, #32]
 8001ab0:	e00b      	b.n	8001aca <HAL_RCC_OscConfig+0x36e>
 8001ab2:	4b5b      	ldr	r3, [pc, #364]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001ab4:	6a1b      	ldr	r3, [r3, #32]
 8001ab6:	4a5a      	ldr	r2, [pc, #360]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001ab8:	f023 0301 	bic.w	r3, r3, #1
 8001abc:	6213      	str	r3, [r2, #32]
 8001abe:	4b58      	ldr	r3, [pc, #352]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001ac0:	6a1b      	ldr	r3, [r3, #32]
 8001ac2:	4a57      	ldr	r2, [pc, #348]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001ac4:	f023 0304 	bic.w	r3, r3, #4
 8001ac8:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8001aca:	687b      	ldr	r3, [r7, #4]
 8001acc:	68db      	ldr	r3, [r3, #12]
 8001ace:	2b00      	cmp	r3, #0
 8001ad0:	d015      	beq.n	8001afe <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001ad2:	f7ff fbc1 	bl	8001258 <HAL_GetTick>
 8001ad6:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001ad8:	e00a      	b.n	8001af0 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001ada:	f7ff fbbd 	bl	8001258 <HAL_GetTick>
 8001ade:	4602      	mov	r2, r0
 8001ae0:	693b      	ldr	r3, [r7, #16]
 8001ae2:	1ad3      	subs	r3, r2, r3
 8001ae4:	f241 3288 	movw	r2, #5000	; 0x1388
 8001ae8:	4293      	cmp	r3, r2
 8001aea:	d901      	bls.n	8001af0 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8001aec:	2303      	movs	r3, #3
 8001aee:	e0b1      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001af0:	4b4b      	ldr	r3, [pc, #300]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001af2:	6a1b      	ldr	r3, [r3, #32]
 8001af4:	f003 0302 	and.w	r3, r3, #2
 8001af8:	2b00      	cmp	r3, #0
 8001afa:	d0ee      	beq.n	8001ada <HAL_RCC_OscConfig+0x37e>
 8001afc:	e014      	b.n	8001b28 <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001afe:	f7ff fbab 	bl	8001258 <HAL_GetTick>
 8001b02:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001b04:	e00a      	b.n	8001b1c <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001b06:	f7ff fba7 	bl	8001258 <HAL_GetTick>
 8001b0a:	4602      	mov	r2, r0
 8001b0c:	693b      	ldr	r3, [r7, #16]
 8001b0e:	1ad3      	subs	r3, r2, r3
 8001b10:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b14:	4293      	cmp	r3, r2
 8001b16:	d901      	bls.n	8001b1c <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 8001b18:	2303      	movs	r3, #3
 8001b1a:	e09b      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001b1c:	4b40      	ldr	r3, [pc, #256]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001b1e:	6a1b      	ldr	r3, [r3, #32]
 8001b20:	f003 0302 	and.w	r3, r3, #2
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d1ee      	bne.n	8001b06 <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 8001b28:	7dfb      	ldrb	r3, [r7, #23]
 8001b2a:	2b01      	cmp	r3, #1
 8001b2c:	d105      	bne.n	8001b3a <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001b2e:	4b3c      	ldr	r3, [pc, #240]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001b30:	69db      	ldr	r3, [r3, #28]
 8001b32:	4a3b      	ldr	r2, [pc, #236]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001b34:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001b38:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	69db      	ldr	r3, [r3, #28]
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	f000 8087 	beq.w	8001c52 <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001b44:	4b36      	ldr	r3, [pc, #216]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001b46:	685b      	ldr	r3, [r3, #4]
 8001b48:	f003 030c 	and.w	r3, r3, #12
 8001b4c:	2b08      	cmp	r3, #8
 8001b4e:	d061      	beq.n	8001c14 <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	69db      	ldr	r3, [r3, #28]
 8001b54:	2b02      	cmp	r3, #2
 8001b56:	d146      	bne.n	8001be6 <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001b58:	4b33      	ldr	r3, [pc, #204]	; (8001c28 <HAL_RCC_OscConfig+0x4cc>)
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001b5e:	f7ff fb7b 	bl	8001258 <HAL_GetTick>
 8001b62:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001b64:	e008      	b.n	8001b78 <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001b66:	f7ff fb77 	bl	8001258 <HAL_GetTick>
 8001b6a:	4602      	mov	r2, r0
 8001b6c:	693b      	ldr	r3, [r7, #16]
 8001b6e:	1ad3      	subs	r3, r2, r3
 8001b70:	2b02      	cmp	r3, #2
 8001b72:	d901      	bls.n	8001b78 <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 8001b74:	2303      	movs	r3, #3
 8001b76:	e06d      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001b78:	4b29      	ldr	r3, [pc, #164]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001b80:	2b00      	cmp	r3, #0
 8001b82:	d1f0      	bne.n	8001b66 <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	6a1b      	ldr	r3, [r3, #32]
 8001b88:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001b8c:	d108      	bne.n	8001ba0 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8001b8e:	4b24      	ldr	r3, [pc, #144]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001b90:	685b      	ldr	r3, [r3, #4]
 8001b92:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	689b      	ldr	r3, [r3, #8]
 8001b9a:	4921      	ldr	r1, [pc, #132]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001b9c:	4313      	orrs	r3, r2
 8001b9e:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001ba0:	4b1f      	ldr	r3, [pc, #124]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001ba2:	685b      	ldr	r3, [r3, #4]
 8001ba4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	6a19      	ldr	r1, [r3, #32]
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bb0:	430b      	orrs	r3, r1
 8001bb2:	491b      	ldr	r1, [pc, #108]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001bb4:	4313      	orrs	r3, r2
 8001bb6:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8001bb8:	4b1b      	ldr	r3, [pc, #108]	; (8001c28 <HAL_RCC_OscConfig+0x4cc>)
 8001bba:	2201      	movs	r2, #1
 8001bbc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001bbe:	f7ff fb4b 	bl	8001258 <HAL_GetTick>
 8001bc2:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001bc4:	e008      	b.n	8001bd8 <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001bc6:	f7ff fb47 	bl	8001258 <HAL_GetTick>
 8001bca:	4602      	mov	r2, r0
 8001bcc:	693b      	ldr	r3, [r7, #16]
 8001bce:	1ad3      	subs	r3, r2, r3
 8001bd0:	2b02      	cmp	r3, #2
 8001bd2:	d901      	bls.n	8001bd8 <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8001bd4:	2303      	movs	r3, #3
 8001bd6:	e03d      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001bd8:	4b11      	ldr	r3, [pc, #68]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001be0:	2b00      	cmp	r3, #0
 8001be2:	d0f0      	beq.n	8001bc6 <HAL_RCC_OscConfig+0x46a>
 8001be4:	e035      	b.n	8001c52 <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001be6:	4b10      	ldr	r3, [pc, #64]	; (8001c28 <HAL_RCC_OscConfig+0x4cc>)
 8001be8:	2200      	movs	r2, #0
 8001bea:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001bec:	f7ff fb34 	bl	8001258 <HAL_GetTick>
 8001bf0:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001bf2:	e008      	b.n	8001c06 <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001bf4:	f7ff fb30 	bl	8001258 <HAL_GetTick>
 8001bf8:	4602      	mov	r2, r0
 8001bfa:	693b      	ldr	r3, [r7, #16]
 8001bfc:	1ad3      	subs	r3, r2, r3
 8001bfe:	2b02      	cmp	r3, #2
 8001c00:	d901      	bls.n	8001c06 <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8001c02:	2303      	movs	r3, #3
 8001c04:	e026      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001c06:	4b06      	ldr	r3, [pc, #24]	; (8001c20 <HAL_RCC_OscConfig+0x4c4>)
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c0e:	2b00      	cmp	r3, #0
 8001c10:	d1f0      	bne.n	8001bf4 <HAL_RCC_OscConfig+0x498>
 8001c12:	e01e      	b.n	8001c52 <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	69db      	ldr	r3, [r3, #28]
 8001c18:	2b01      	cmp	r3, #1
 8001c1a:	d107      	bne.n	8001c2c <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8001c1c:	2301      	movs	r3, #1
 8001c1e:	e019      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
 8001c20:	40021000 	.word	0x40021000
 8001c24:	40007000 	.word	0x40007000
 8001c28:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8001c2c:	4b0b      	ldr	r3, [pc, #44]	; (8001c5c <HAL_RCC_OscConfig+0x500>)
 8001c2e:	685b      	ldr	r3, [r3, #4]
 8001c30:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001c32:	68fb      	ldr	r3, [r7, #12]
 8001c34:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	6a1b      	ldr	r3, [r3, #32]
 8001c3c:	429a      	cmp	r2, r3
 8001c3e:	d106      	bne.n	8001c4e <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8001c40:	68fb      	ldr	r3, [r7, #12]
 8001c42:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001c4a:	429a      	cmp	r2, r3
 8001c4c:	d001      	beq.n	8001c52 <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8001c4e:	2301      	movs	r3, #1
 8001c50:	e000      	b.n	8001c54 <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 8001c52:	2300      	movs	r3, #0
}
 8001c54:	4618      	mov	r0, r3
 8001c56:	3718      	adds	r7, #24
 8001c58:	46bd      	mov	sp, r7
 8001c5a:	bd80      	pop	{r7, pc}
 8001c5c:	40021000 	.word	0x40021000

08001c60 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001c60:	b580      	push	{r7, lr}
 8001c62:	b084      	sub	sp, #16
 8001c64:	af00      	add	r7, sp, #0
 8001c66:	6078      	str	r0, [r7, #4]
 8001c68:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d101      	bne.n	8001c74 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001c70:	2301      	movs	r3, #1
 8001c72:	e0d0      	b.n	8001e16 <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001c74:	4b6a      	ldr	r3, [pc, #424]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	f003 0307 	and.w	r3, r3, #7
 8001c7c:	683a      	ldr	r2, [r7, #0]
 8001c7e:	429a      	cmp	r2, r3
 8001c80:	d910      	bls.n	8001ca4 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001c82:	4b67      	ldr	r3, [pc, #412]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	f023 0207 	bic.w	r2, r3, #7
 8001c8a:	4965      	ldr	r1, [pc, #404]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001c8c:	683b      	ldr	r3, [r7, #0]
 8001c8e:	4313      	orrs	r3, r2
 8001c90:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001c92:	4b63      	ldr	r3, [pc, #396]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	f003 0307 	and.w	r3, r3, #7
 8001c9a:	683a      	ldr	r2, [r7, #0]
 8001c9c:	429a      	cmp	r2, r3
 8001c9e:	d001      	beq.n	8001ca4 <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 8001ca0:	2301      	movs	r3, #1
 8001ca2:	e0b8      	b.n	8001e16 <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	f003 0302 	and.w	r3, r3, #2
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d020      	beq.n	8001cf2 <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	f003 0304 	and.w	r3, r3, #4
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d005      	beq.n	8001cc8 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001cbc:	4b59      	ldr	r3, [pc, #356]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001cbe:	685b      	ldr	r3, [r3, #4]
 8001cc0:	4a58      	ldr	r2, [pc, #352]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001cc2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001cc6:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f003 0308 	and.w	r3, r3, #8
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d005      	beq.n	8001ce0 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001cd4:	4b53      	ldr	r3, [pc, #332]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001cd6:	685b      	ldr	r3, [r3, #4]
 8001cd8:	4a52      	ldr	r2, [pc, #328]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001cda:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001cde:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001ce0:	4b50      	ldr	r3, [pc, #320]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001ce2:	685b      	ldr	r3, [r3, #4]
 8001ce4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	689b      	ldr	r3, [r3, #8]
 8001cec:	494d      	ldr	r1, [pc, #308]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001cee:	4313      	orrs	r3, r2
 8001cf0:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	f003 0301 	and.w	r3, r3, #1
 8001cfa:	2b00      	cmp	r3, #0
 8001cfc:	d040      	beq.n	8001d80 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	685b      	ldr	r3, [r3, #4]
 8001d02:	2b01      	cmp	r3, #1
 8001d04:	d107      	bne.n	8001d16 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001d06:	4b47      	ldr	r3, [pc, #284]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d0e:	2b00      	cmp	r3, #0
 8001d10:	d115      	bne.n	8001d3e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001d12:	2301      	movs	r3, #1
 8001d14:	e07f      	b.n	8001e16 <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	685b      	ldr	r3, [r3, #4]
 8001d1a:	2b02      	cmp	r3, #2
 8001d1c:	d107      	bne.n	8001d2e <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001d1e:	4b41      	ldr	r3, [pc, #260]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d26:	2b00      	cmp	r3, #0
 8001d28:	d109      	bne.n	8001d3e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001d2a:	2301      	movs	r3, #1
 8001d2c:	e073      	b.n	8001e16 <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001d2e:	4b3d      	ldr	r3, [pc, #244]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	f003 0302 	and.w	r3, r3, #2
 8001d36:	2b00      	cmp	r3, #0
 8001d38:	d101      	bne.n	8001d3e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001d3a:	2301      	movs	r3, #1
 8001d3c:	e06b      	b.n	8001e16 <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001d3e:	4b39      	ldr	r3, [pc, #228]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001d40:	685b      	ldr	r3, [r3, #4]
 8001d42:	f023 0203 	bic.w	r2, r3, #3
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	685b      	ldr	r3, [r3, #4]
 8001d4a:	4936      	ldr	r1, [pc, #216]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001d4c:	4313      	orrs	r3, r2
 8001d4e:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001d50:	f7ff fa82 	bl	8001258 <HAL_GetTick>
 8001d54:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001d56:	e00a      	b.n	8001d6e <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001d58:	f7ff fa7e 	bl	8001258 <HAL_GetTick>
 8001d5c:	4602      	mov	r2, r0
 8001d5e:	68fb      	ldr	r3, [r7, #12]
 8001d60:	1ad3      	subs	r3, r2, r3
 8001d62:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d66:	4293      	cmp	r3, r2
 8001d68:	d901      	bls.n	8001d6e <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8001d6a:	2303      	movs	r3, #3
 8001d6c:	e053      	b.n	8001e16 <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001d6e:	4b2d      	ldr	r3, [pc, #180]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001d70:	685b      	ldr	r3, [r3, #4]
 8001d72:	f003 020c 	and.w	r2, r3, #12
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	685b      	ldr	r3, [r3, #4]
 8001d7a:	009b      	lsls	r3, r3, #2
 8001d7c:	429a      	cmp	r2, r3
 8001d7e:	d1eb      	bne.n	8001d58 <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001d80:	4b27      	ldr	r3, [pc, #156]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	f003 0307 	and.w	r3, r3, #7
 8001d88:	683a      	ldr	r2, [r7, #0]
 8001d8a:	429a      	cmp	r2, r3
 8001d8c:	d210      	bcs.n	8001db0 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001d8e:	4b24      	ldr	r3, [pc, #144]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	f023 0207 	bic.w	r2, r3, #7
 8001d96:	4922      	ldr	r1, [pc, #136]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001d98:	683b      	ldr	r3, [r7, #0]
 8001d9a:	4313      	orrs	r3, r2
 8001d9c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001d9e:	4b20      	ldr	r3, [pc, #128]	; (8001e20 <HAL_RCC_ClockConfig+0x1c0>)
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	f003 0307 	and.w	r3, r3, #7
 8001da6:	683a      	ldr	r2, [r7, #0]
 8001da8:	429a      	cmp	r2, r3
 8001daa:	d001      	beq.n	8001db0 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8001dac:	2301      	movs	r3, #1
 8001dae:	e032      	b.n	8001e16 <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	681b      	ldr	r3, [r3, #0]
 8001db4:	f003 0304 	and.w	r3, r3, #4
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	d008      	beq.n	8001dce <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001dbc:	4b19      	ldr	r3, [pc, #100]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001dbe:	685b      	ldr	r3, [r3, #4]
 8001dc0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	68db      	ldr	r3, [r3, #12]
 8001dc8:	4916      	ldr	r1, [pc, #88]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001dca:	4313      	orrs	r3, r2
 8001dcc:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	f003 0308 	and.w	r3, r3, #8
 8001dd6:	2b00      	cmp	r3, #0
 8001dd8:	d009      	beq.n	8001dee <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001dda:	4b12      	ldr	r3, [pc, #72]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001ddc:	685b      	ldr	r3, [r3, #4]
 8001dde:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	691b      	ldr	r3, [r3, #16]
 8001de6:	00db      	lsls	r3, r3, #3
 8001de8:	490e      	ldr	r1, [pc, #56]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001dea:	4313      	orrs	r3, r2
 8001dec:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001dee:	f000 f821 	bl	8001e34 <HAL_RCC_GetSysClockFreq>
 8001df2:	4602      	mov	r2, r0
 8001df4:	4b0b      	ldr	r3, [pc, #44]	; (8001e24 <HAL_RCC_ClockConfig+0x1c4>)
 8001df6:	685b      	ldr	r3, [r3, #4]
 8001df8:	091b      	lsrs	r3, r3, #4
 8001dfa:	f003 030f 	and.w	r3, r3, #15
 8001dfe:	490a      	ldr	r1, [pc, #40]	; (8001e28 <HAL_RCC_ClockConfig+0x1c8>)
 8001e00:	5ccb      	ldrb	r3, [r1, r3]
 8001e02:	fa22 f303 	lsr.w	r3, r2, r3
 8001e06:	4a09      	ldr	r2, [pc, #36]	; (8001e2c <HAL_RCC_ClockConfig+0x1cc>)
 8001e08:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8001e0a:	4b09      	ldr	r3, [pc, #36]	; (8001e30 <HAL_RCC_ClockConfig+0x1d0>)
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	4618      	mov	r0, r3
 8001e10:	f7ff f9e0 	bl	80011d4 <HAL_InitTick>

  return HAL_OK;
 8001e14:	2300      	movs	r3, #0
}
 8001e16:	4618      	mov	r0, r3
 8001e18:	3710      	adds	r7, #16
 8001e1a:	46bd      	mov	sp, r7
 8001e1c:	bd80      	pop	{r7, pc}
 8001e1e:	bf00      	nop
 8001e20:	40022000 	.word	0x40022000
 8001e24:	40021000 	.word	0x40021000
 8001e28:	08007b1c 	.word	0x08007b1c
 8001e2c:	20000000 	.word	0x20000000
 8001e30:	20000004 	.word	0x20000004

08001e34 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8001e34:	b490      	push	{r4, r7}
 8001e36:	b08a      	sub	sp, #40	; 0x28
 8001e38:	af00      	add	r7, sp, #0
#if defined(RCC_CFGR2_PREDIV1SRC)
  const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 8001e3a:	4b29      	ldr	r3, [pc, #164]	; (8001ee0 <HAL_RCC_GetSysClockFreq+0xac>)
 8001e3c:	1d3c      	adds	r4, r7, #4
 8001e3e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001e40:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
#if defined(RCC_CFGR2_PREDIV1)
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPredivFactorTable[2] = {1, 2};
 8001e44:	f240 2301 	movw	r3, #513	; 0x201
 8001e48:	803b      	strh	r3, [r7, #0]
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	61fb      	str	r3, [r7, #28]
 8001e4e:	2300      	movs	r3, #0
 8001e50:	61bb      	str	r3, [r7, #24]
 8001e52:	2300      	movs	r3, #0
 8001e54:	627b      	str	r3, [r7, #36]	; 0x24
 8001e56:	2300      	movs	r3, #0
 8001e58:	617b      	str	r3, [r7, #20]
  uint32_t sysclockfreq = 0U;
 8001e5a:	2300      	movs	r3, #0
 8001e5c:	623b      	str	r3, [r7, #32]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 8001e5e:	4b21      	ldr	r3, [pc, #132]	; (8001ee4 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001e60:	685b      	ldr	r3, [r3, #4]
 8001e62:	61fb      	str	r3, [r7, #28]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8001e64:	69fb      	ldr	r3, [r7, #28]
 8001e66:	f003 030c 	and.w	r3, r3, #12
 8001e6a:	2b04      	cmp	r3, #4
 8001e6c:	d002      	beq.n	8001e74 <HAL_RCC_GetSysClockFreq+0x40>
 8001e6e:	2b08      	cmp	r3, #8
 8001e70:	d003      	beq.n	8001e7a <HAL_RCC_GetSysClockFreq+0x46>
 8001e72:	e02b      	b.n	8001ecc <HAL_RCC_GetSysClockFreq+0x98>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8001e74:	4b1c      	ldr	r3, [pc, #112]	; (8001ee8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001e76:	623b      	str	r3, [r7, #32]
      break;
 8001e78:	e02b      	b.n	8001ed2 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8001e7a:	69fb      	ldr	r3, [r7, #28]
 8001e7c:	0c9b      	lsrs	r3, r3, #18
 8001e7e:	f003 030f 	and.w	r3, r3, #15
 8001e82:	3328      	adds	r3, #40	; 0x28
 8001e84:	443b      	add	r3, r7
 8001e86:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001e8a:	617b      	str	r3, [r7, #20]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8001e8c:	69fb      	ldr	r3, [r7, #28]
 8001e8e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001e92:	2b00      	cmp	r3, #0
 8001e94:	d012      	beq.n	8001ebc <HAL_RCC_GetSysClockFreq+0x88>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8001e96:	4b13      	ldr	r3, [pc, #76]	; (8001ee4 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001e98:	685b      	ldr	r3, [r3, #4]
 8001e9a:	0c5b      	lsrs	r3, r3, #17
 8001e9c:	f003 0301 	and.w	r3, r3, #1
 8001ea0:	3328      	adds	r3, #40	; 0x28
 8001ea2:	443b      	add	r3, r7
 8001ea4:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001ea8:	61bb      	str	r3, [r7, #24]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8001eaa:	697b      	ldr	r3, [r7, #20]
 8001eac:	4a0e      	ldr	r2, [pc, #56]	; (8001ee8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001eae:	fb03 f202 	mul.w	r2, r3, r2
 8001eb2:	69bb      	ldr	r3, [r7, #24]
 8001eb4:	fbb2 f3f3 	udiv	r3, r2, r3
 8001eb8:	627b      	str	r3, [r7, #36]	; 0x24
 8001eba:	e004      	b.n	8001ec6 <HAL_RCC_GetSysClockFreq+0x92>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8001ebc:	697b      	ldr	r3, [r7, #20]
 8001ebe:	4a0b      	ldr	r2, [pc, #44]	; (8001eec <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ec0:	fb02 f303 	mul.w	r3, r2, r3
 8001ec4:	627b      	str	r3, [r7, #36]	; 0x24
      }
      sysclockfreq = pllclk;
 8001ec6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ec8:	623b      	str	r3, [r7, #32]
      break;
 8001eca:	e002      	b.n	8001ed2 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8001ecc:	4b06      	ldr	r3, [pc, #24]	; (8001ee8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001ece:	623b      	str	r3, [r7, #32]
      break;
 8001ed0:	bf00      	nop
    }
  }
  return sysclockfreq;
 8001ed2:	6a3b      	ldr	r3, [r7, #32]
}
 8001ed4:	4618      	mov	r0, r3
 8001ed6:	3728      	adds	r7, #40	; 0x28
 8001ed8:	46bd      	mov	sp, r7
 8001eda:	bc90      	pop	{r4, r7}
 8001edc:	4770      	bx	lr
 8001ede:	bf00      	nop
 8001ee0:	08007b00 	.word	0x08007b00
 8001ee4:	40021000 	.word	0x40021000
 8001ee8:	007a1200 	.word	0x007a1200
 8001eec:	003d0900 	.word	0x003d0900

08001ef0 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8001ef0:	b480      	push	{r7}
 8001ef2:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8001ef4:	4b02      	ldr	r3, [pc, #8]	; (8001f00 <HAL_RCC_GetHCLKFreq+0x10>)
 8001ef6:	681b      	ldr	r3, [r3, #0]
}
 8001ef8:	4618      	mov	r0, r3
 8001efa:	46bd      	mov	sp, r7
 8001efc:	bc80      	pop	{r7}
 8001efe:	4770      	bx	lr
 8001f00:	20000000 	.word	0x20000000

08001f04 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8001f04:	b580      	push	{r7, lr}
 8001f06:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8001f08:	f7ff fff2 	bl	8001ef0 <HAL_RCC_GetHCLKFreq>
 8001f0c:	4602      	mov	r2, r0
 8001f0e:	4b05      	ldr	r3, [pc, #20]	; (8001f24 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001f10:	685b      	ldr	r3, [r3, #4]
 8001f12:	0a1b      	lsrs	r3, r3, #8
 8001f14:	f003 0307 	and.w	r3, r3, #7
 8001f18:	4903      	ldr	r1, [pc, #12]	; (8001f28 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001f1a:	5ccb      	ldrb	r3, [r1, r3]
 8001f1c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8001f20:	4618      	mov	r0, r3
 8001f22:	bd80      	pop	{r7, pc}
 8001f24:	40021000 	.word	0x40021000
 8001f28:	08007b2c 	.word	0x08007b2c

08001f2c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8001f2c:	b580      	push	{r7, lr}
 8001f2e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8001f30:	f7ff ffde 	bl	8001ef0 <HAL_RCC_GetHCLKFreq>
 8001f34:	4602      	mov	r2, r0
 8001f36:	4b05      	ldr	r3, [pc, #20]	; (8001f4c <HAL_RCC_GetPCLK2Freq+0x20>)
 8001f38:	685b      	ldr	r3, [r3, #4]
 8001f3a:	0adb      	lsrs	r3, r3, #11
 8001f3c:	f003 0307 	and.w	r3, r3, #7
 8001f40:	4903      	ldr	r1, [pc, #12]	; (8001f50 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001f42:	5ccb      	ldrb	r3, [r1, r3]
 8001f44:	fa22 f303 	lsr.w	r3, r2, r3
}
 8001f48:	4618      	mov	r0, r3
 8001f4a:	bd80      	pop	{r7, pc}
 8001f4c:	40021000 	.word	0x40021000
 8001f50:	08007b2c 	.word	0x08007b2c

08001f54 <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 8001f54:	b480      	push	{r7}
 8001f56:	b085      	sub	sp, #20
 8001f58:	af00      	add	r7, sp, #0
 8001f5a:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8001f5c:	4b0a      	ldr	r3, [pc, #40]	; (8001f88 <RCC_Delay+0x34>)
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	4a0a      	ldr	r2, [pc, #40]	; (8001f8c <RCC_Delay+0x38>)
 8001f62:	fba2 2303 	umull	r2, r3, r2, r3
 8001f66:	0a5b      	lsrs	r3, r3, #9
 8001f68:	687a      	ldr	r2, [r7, #4]
 8001f6a:	fb02 f303 	mul.w	r3, r2, r3
 8001f6e:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 8001f70:	bf00      	nop
  }
  while (Delay --);
 8001f72:	68fb      	ldr	r3, [r7, #12]
 8001f74:	1e5a      	subs	r2, r3, #1
 8001f76:	60fa      	str	r2, [r7, #12]
 8001f78:	2b00      	cmp	r3, #0
 8001f7a:	d1f9      	bne.n	8001f70 <RCC_Delay+0x1c>
}
 8001f7c:	bf00      	nop
 8001f7e:	bf00      	nop
 8001f80:	3714      	adds	r7, #20
 8001f82:	46bd      	mov	sp, r7
 8001f84:	bc80      	pop	{r7}
 8001f86:	4770      	bx	lr
 8001f88:	20000000 	.word	0x20000000
 8001f8c:	10624dd3 	.word	0x10624dd3

08001f90 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8001f90:	b580      	push	{r7, lr}
 8001f92:	b082      	sub	sp, #8
 8001f94:	af00      	add	r7, sp, #0
 8001f96:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	2b00      	cmp	r3, #0
 8001f9c:	d101      	bne.n	8001fa2 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8001f9e:	2301      	movs	r3, #1
 8001fa0:	e03f      	b.n	8002022 <HAL_UART_Init+0x92>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
#if defined(USART_CR1_OVER8)
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
#endif /* USART_CR1_OVER8 */

  if (huart->gState == HAL_UART_STATE_RESET)
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001fa8:	b2db      	uxtb	r3, r3
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	d106      	bne.n	8001fbc <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8001fb6:	6878      	ldr	r0, [r7, #4]
 8001fb8:	f7ff f884 	bl	80010c4 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	2224      	movs	r2, #36	; 0x24
 8001fc0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	68da      	ldr	r2, [r3, #12]
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8001fd2:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8001fd4:	6878      	ldr	r0, [r7, #4]
 8001fd6:	f000 f9a7 	bl	8002328 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	691a      	ldr	r2, [r3, #16]
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8001fe8:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	695a      	ldr	r2, [r3, #20]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8001ff8:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	68da      	ldr	r2, [r3, #12]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002008:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	2200      	movs	r2, #0
 800200e:	641a      	str	r2, [r3, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	2220      	movs	r2, #32
 8002014:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	2220      	movs	r2, #32
 800201c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8002020:	2300      	movs	r3, #0
}
 8002022:	4618      	mov	r0, r3
 8002024:	3708      	adds	r7, #8
 8002026:	46bd      	mov	sp, r7
 8002028:	bd80      	pop	{r7, pc}

0800202a <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800202a:	b580      	push	{r7, lr}
 800202c:	b08a      	sub	sp, #40	; 0x28
 800202e:	af02      	add	r7, sp, #8
 8002030:	60f8      	str	r0, [r7, #12]
 8002032:	60b9      	str	r1, [r7, #8]
 8002034:	603b      	str	r3, [r7, #0]
 8002036:	4613      	mov	r3, r2
 8002038:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 800203a:	2300      	movs	r3, #0
 800203c:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800203e:	68fb      	ldr	r3, [r7, #12]
 8002040:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002044:	b2db      	uxtb	r3, r3
 8002046:	2b20      	cmp	r3, #32
 8002048:	d17c      	bne.n	8002144 <HAL_UART_Transmit+0x11a>
  {
    if ((pData == NULL) || (Size == 0U))
 800204a:	68bb      	ldr	r3, [r7, #8]
 800204c:	2b00      	cmp	r3, #0
 800204e:	d002      	beq.n	8002056 <HAL_UART_Transmit+0x2c>
 8002050:	88fb      	ldrh	r3, [r7, #6]
 8002052:	2b00      	cmp	r3, #0
 8002054:	d101      	bne.n	800205a <HAL_UART_Transmit+0x30>
    {
      return  HAL_ERROR;
 8002056:	2301      	movs	r3, #1
 8002058:	e075      	b.n	8002146 <HAL_UART_Transmit+0x11c>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 800205a:	68fb      	ldr	r3, [r7, #12]
 800205c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002060:	2b01      	cmp	r3, #1
 8002062:	d101      	bne.n	8002068 <HAL_UART_Transmit+0x3e>
 8002064:	2302      	movs	r3, #2
 8002066:	e06e      	b.n	8002146 <HAL_UART_Transmit+0x11c>
 8002068:	68fb      	ldr	r3, [r7, #12]
 800206a:	2201      	movs	r2, #1
 800206c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002070:	68fb      	ldr	r3, [r7, #12]
 8002072:	2200      	movs	r2, #0
 8002074:	641a      	str	r2, [r3, #64]	; 0x40
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8002076:	68fb      	ldr	r3, [r7, #12]
 8002078:	2221      	movs	r2, #33	; 0x21
 800207a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 800207e:	f7ff f8eb 	bl	8001258 <HAL_GetTick>
 8002082:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8002084:	68fb      	ldr	r3, [r7, #12]
 8002086:	88fa      	ldrh	r2, [r7, #6]
 8002088:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 800208a:	68fb      	ldr	r3, [r7, #12]
 800208c:	88fa      	ldrh	r2, [r7, #6]
 800208e:	84da      	strh	r2, [r3, #38]	; 0x26

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	689b      	ldr	r3, [r3, #8]
 8002094:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002098:	d108      	bne.n	80020ac <HAL_UART_Transmit+0x82>
 800209a:	68fb      	ldr	r3, [r7, #12]
 800209c:	691b      	ldr	r3, [r3, #16]
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d104      	bne.n	80020ac <HAL_UART_Transmit+0x82>
    {
      pdata8bits  = NULL;
 80020a2:	2300      	movs	r3, #0
 80020a4:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80020a6:	68bb      	ldr	r3, [r7, #8]
 80020a8:	61bb      	str	r3, [r7, #24]
 80020aa:	e003      	b.n	80020b4 <HAL_UART_Transmit+0x8a>
    }
    else
    {
      pdata8bits  = pData;
 80020ac:	68bb      	ldr	r3, [r7, #8]
 80020ae:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80020b0:	2300      	movs	r3, #0
 80020b2:	61bb      	str	r3, [r7, #24]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 80020b4:	68fb      	ldr	r3, [r7, #12]
 80020b6:	2200      	movs	r2, #0
 80020b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    while (huart->TxXferCount > 0U)
 80020bc:	e02a      	b.n	8002114 <HAL_UART_Transmit+0xea>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80020be:	683b      	ldr	r3, [r7, #0]
 80020c0:	9300      	str	r3, [sp, #0]
 80020c2:	697b      	ldr	r3, [r7, #20]
 80020c4:	2200      	movs	r2, #0
 80020c6:	2180      	movs	r1, #128	; 0x80
 80020c8:	68f8      	ldr	r0, [r7, #12]
 80020ca:	f000 f8e2 	bl	8002292 <UART_WaitOnFlagUntilTimeout>
 80020ce:	4603      	mov	r3, r0
 80020d0:	2b00      	cmp	r3, #0
 80020d2:	d001      	beq.n	80020d8 <HAL_UART_Transmit+0xae>
      {
        return HAL_TIMEOUT;
 80020d4:	2303      	movs	r3, #3
 80020d6:	e036      	b.n	8002146 <HAL_UART_Transmit+0x11c>
      }
      if (pdata8bits == NULL)
 80020d8:	69fb      	ldr	r3, [r7, #28]
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d10b      	bne.n	80020f6 <HAL_UART_Transmit+0xcc>
      {
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80020de:	69bb      	ldr	r3, [r7, #24]
 80020e0:	881b      	ldrh	r3, [r3, #0]
 80020e2:	461a      	mov	r2, r3
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80020ec:	605a      	str	r2, [r3, #4]
        pdata16bits++;
 80020ee:	69bb      	ldr	r3, [r7, #24]
 80020f0:	3302      	adds	r3, #2
 80020f2:	61bb      	str	r3, [r7, #24]
 80020f4:	e007      	b.n	8002106 <HAL_UART_Transmit+0xdc>
      }
      else
      {
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80020f6:	69fb      	ldr	r3, [r7, #28]
 80020f8:	781a      	ldrb	r2, [r3, #0]
 80020fa:	68fb      	ldr	r3, [r7, #12]
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8002100:	69fb      	ldr	r3, [r7, #28]
 8002102:	3301      	adds	r3, #1
 8002104:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8002106:	68fb      	ldr	r3, [r7, #12]
 8002108:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800210a:	b29b      	uxth	r3, r3
 800210c:	3b01      	subs	r3, #1
 800210e:	b29a      	uxth	r2, r3
 8002110:	68fb      	ldr	r3, [r7, #12]
 8002112:	84da      	strh	r2, [r3, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8002114:	68fb      	ldr	r3, [r7, #12]
 8002116:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002118:	b29b      	uxth	r3, r3
 800211a:	2b00      	cmp	r3, #0
 800211c:	d1cf      	bne.n	80020be <HAL_UART_Transmit+0x94>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800211e:	683b      	ldr	r3, [r7, #0]
 8002120:	9300      	str	r3, [sp, #0]
 8002122:	697b      	ldr	r3, [r7, #20]
 8002124:	2200      	movs	r2, #0
 8002126:	2140      	movs	r1, #64	; 0x40
 8002128:	68f8      	ldr	r0, [r7, #12]
 800212a:	f000 f8b2 	bl	8002292 <UART_WaitOnFlagUntilTimeout>
 800212e:	4603      	mov	r3, r0
 8002130:	2b00      	cmp	r3, #0
 8002132:	d001      	beq.n	8002138 <HAL_UART_Transmit+0x10e>
    {
      return HAL_TIMEOUT;
 8002134:	2303      	movs	r3, #3
 8002136:	e006      	b.n	8002146 <HAL_UART_Transmit+0x11c>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	2220      	movs	r2, #32
 800213c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 8002140:	2300      	movs	r3, #0
 8002142:	e000      	b.n	8002146 <HAL_UART_Transmit+0x11c>
  }
  else
  {
    return HAL_BUSY;
 8002144:	2302      	movs	r3, #2
  }
}
 8002146:	4618      	mov	r0, r3
 8002148:	3720      	adds	r7, #32
 800214a:	46bd      	mov	sp, r7
 800214c:	bd80      	pop	{r7, pc}

0800214e <HAL_UART_Receive>:
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800214e:	b580      	push	{r7, lr}
 8002150:	b08a      	sub	sp, #40	; 0x28
 8002152:	af02      	add	r7, sp, #8
 8002154:	60f8      	str	r0, [r7, #12]
 8002156:	60b9      	str	r1, [r7, #8]
 8002158:	603b      	str	r3, [r7, #0]
 800215a:	4613      	mov	r3, r2
 800215c:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 800215e:	2300      	movs	r3, #0
 8002160:	617b      	str	r3, [r7, #20]

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8002162:	68fb      	ldr	r3, [r7, #12]
 8002164:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002168:	b2db      	uxtb	r3, r3
 800216a:	2b20      	cmp	r3, #32
 800216c:	f040 808c 	bne.w	8002288 <HAL_UART_Receive+0x13a>
  {
    if ((pData == NULL) || (Size == 0U))
 8002170:	68bb      	ldr	r3, [r7, #8]
 8002172:	2b00      	cmp	r3, #0
 8002174:	d002      	beq.n	800217c <HAL_UART_Receive+0x2e>
 8002176:	88fb      	ldrh	r3, [r7, #6]
 8002178:	2b00      	cmp	r3, #0
 800217a:	d101      	bne.n	8002180 <HAL_UART_Receive+0x32>
    {
      return  HAL_ERROR;
 800217c:	2301      	movs	r3, #1
 800217e:	e084      	b.n	800228a <HAL_UART_Receive+0x13c>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8002180:	68fb      	ldr	r3, [r7, #12]
 8002182:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002186:	2b01      	cmp	r3, #1
 8002188:	d101      	bne.n	800218e <HAL_UART_Receive+0x40>
 800218a:	2302      	movs	r3, #2
 800218c:	e07d      	b.n	800228a <HAL_UART_Receive+0x13c>
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	2201      	movs	r2, #1
 8002192:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002196:	68fb      	ldr	r3, [r7, #12]
 8002198:	2200      	movs	r2, #0
 800219a:	641a      	str	r2, [r3, #64]	; 0x40
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 800219c:	68fb      	ldr	r3, [r7, #12]
 800219e:	2222      	movs	r2, #34	; 0x22
 80021a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80021a4:	68fb      	ldr	r3, [r7, #12]
 80021a6:	2200      	movs	r2, #0
 80021a8:	631a      	str	r2, [r3, #48]	; 0x30

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 80021aa:	f7ff f855 	bl	8001258 <HAL_GetTick>
 80021ae:	6178      	str	r0, [r7, #20]

    huart->RxXferSize = Size;
 80021b0:	68fb      	ldr	r3, [r7, #12]
 80021b2:	88fa      	ldrh	r2, [r7, #6]
 80021b4:	859a      	strh	r2, [r3, #44]	; 0x2c
    huart->RxXferCount = Size;
 80021b6:	68fb      	ldr	r3, [r7, #12]
 80021b8:	88fa      	ldrh	r2, [r7, #6]
 80021ba:	85da      	strh	r2, [r3, #46]	; 0x2e

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	689b      	ldr	r3, [r3, #8]
 80021c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80021c4:	d108      	bne.n	80021d8 <HAL_UART_Receive+0x8a>
 80021c6:	68fb      	ldr	r3, [r7, #12]
 80021c8:	691b      	ldr	r3, [r3, #16]
 80021ca:	2b00      	cmp	r3, #0
 80021cc:	d104      	bne.n	80021d8 <HAL_UART_Receive+0x8a>
    {
      pdata8bits  = NULL;
 80021ce:	2300      	movs	r3, #0
 80021d0:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80021d2:	68bb      	ldr	r3, [r7, #8]
 80021d4:	61bb      	str	r3, [r7, #24]
 80021d6:	e003      	b.n	80021e0 <HAL_UART_Receive+0x92>
    }
    else
    {
      pdata8bits  = pData;
 80021d8:	68bb      	ldr	r3, [r7, #8]
 80021da:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80021dc:	2300      	movs	r3, #0
 80021de:	61bb      	str	r3, [r7, #24]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 80021e0:	68fb      	ldr	r3, [r7, #12]
 80021e2:	2200      	movs	r2, #0
 80021e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check the remain data to be received */
    while (huart->RxXferCount > 0U)
 80021e8:	e043      	b.n	8002272 <HAL_UART_Receive+0x124>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 80021ea:	683b      	ldr	r3, [r7, #0]
 80021ec:	9300      	str	r3, [sp, #0]
 80021ee:	697b      	ldr	r3, [r7, #20]
 80021f0:	2200      	movs	r2, #0
 80021f2:	2120      	movs	r1, #32
 80021f4:	68f8      	ldr	r0, [r7, #12]
 80021f6:	f000 f84c 	bl	8002292 <UART_WaitOnFlagUntilTimeout>
 80021fa:	4603      	mov	r3, r0
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	d001      	beq.n	8002204 <HAL_UART_Receive+0xb6>
      {
        return HAL_TIMEOUT;
 8002200:	2303      	movs	r3, #3
 8002202:	e042      	b.n	800228a <HAL_UART_Receive+0x13c>
      }
      if (pdata8bits == NULL)
 8002204:	69fb      	ldr	r3, [r7, #28]
 8002206:	2b00      	cmp	r3, #0
 8002208:	d10c      	bne.n	8002224 <HAL_UART_Receive+0xd6>
      {
        *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 800220a:	68fb      	ldr	r3, [r7, #12]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	685b      	ldr	r3, [r3, #4]
 8002210:	b29b      	uxth	r3, r3
 8002212:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002216:	b29a      	uxth	r2, r3
 8002218:	69bb      	ldr	r3, [r7, #24]
 800221a:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 800221c:	69bb      	ldr	r3, [r7, #24]
 800221e:	3302      	adds	r3, #2
 8002220:	61bb      	str	r3, [r7, #24]
 8002222:	e01f      	b.n	8002264 <HAL_UART_Receive+0x116>
      }
      else
      {
        if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8002224:	68fb      	ldr	r3, [r7, #12]
 8002226:	689b      	ldr	r3, [r3, #8]
 8002228:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800222c:	d007      	beq.n	800223e <HAL_UART_Receive+0xf0>
 800222e:	68fb      	ldr	r3, [r7, #12]
 8002230:	689b      	ldr	r3, [r3, #8]
 8002232:	2b00      	cmp	r3, #0
 8002234:	d10a      	bne.n	800224c <HAL_UART_Receive+0xfe>
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	691b      	ldr	r3, [r3, #16]
 800223a:	2b00      	cmp	r3, #0
 800223c:	d106      	bne.n	800224c <HAL_UART_Receive+0xfe>
        {
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 800223e:	68fb      	ldr	r3, [r7, #12]
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	685b      	ldr	r3, [r3, #4]
 8002244:	b2da      	uxtb	r2, r3
 8002246:	69fb      	ldr	r3, [r7, #28]
 8002248:	701a      	strb	r2, [r3, #0]
 800224a:	e008      	b.n	800225e <HAL_UART_Receive+0x110>
        }
        else
        {
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	685b      	ldr	r3, [r3, #4]
 8002252:	b2db      	uxtb	r3, r3
 8002254:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002258:	b2da      	uxtb	r2, r3
 800225a:	69fb      	ldr	r3, [r7, #28]
 800225c:	701a      	strb	r2, [r3, #0]
        }
        pdata8bits++;
 800225e:	69fb      	ldr	r3, [r7, #28]
 8002260:	3301      	adds	r3, #1
 8002262:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002268:	b29b      	uxth	r3, r3
 800226a:	3b01      	subs	r3, #1
 800226c:	b29a      	uxth	r2, r3
 800226e:	68fb      	ldr	r3, [r7, #12]
 8002270:	85da      	strh	r2, [r3, #46]	; 0x2e
    while (huart->RxXferCount > 0U)
 8002272:	68fb      	ldr	r3, [r7, #12]
 8002274:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002276:	b29b      	uxth	r3, r3
 8002278:	2b00      	cmp	r3, #0
 800227a:	d1b6      	bne.n	80021ea <HAL_UART_Receive+0x9c>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 800227c:	68fb      	ldr	r3, [r7, #12]
 800227e:	2220      	movs	r2, #32
 8002280:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    return HAL_OK;
 8002284:	2300      	movs	r3, #0
 8002286:	e000      	b.n	800228a <HAL_UART_Receive+0x13c>
  }
  else
  {
    return HAL_BUSY;
 8002288:	2302      	movs	r3, #2
  }
}
 800228a:	4618      	mov	r0, r3
 800228c:	3720      	adds	r7, #32
 800228e:	46bd      	mov	sp, r7
 8002290:	bd80      	pop	{r7, pc}

08002292 <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8002292:	b580      	push	{r7, lr}
 8002294:	b084      	sub	sp, #16
 8002296:	af00      	add	r7, sp, #0
 8002298:	60f8      	str	r0, [r7, #12]
 800229a:	60b9      	str	r1, [r7, #8]
 800229c:	603b      	str	r3, [r7, #0]
 800229e:	4613      	mov	r3, r2
 80022a0:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80022a2:	e02c      	b.n	80022fe <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80022a4:	69bb      	ldr	r3, [r7, #24]
 80022a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80022aa:	d028      	beq.n	80022fe <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 80022ac:	69bb      	ldr	r3, [r7, #24]
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d007      	beq.n	80022c2 <UART_WaitOnFlagUntilTimeout+0x30>
 80022b2:	f7fe ffd1 	bl	8001258 <HAL_GetTick>
 80022b6:	4602      	mov	r2, r0
 80022b8:	683b      	ldr	r3, [r7, #0]
 80022ba:	1ad3      	subs	r3, r2, r3
 80022bc:	69ba      	ldr	r2, [r7, #24]
 80022be:	429a      	cmp	r2, r3
 80022c0:	d21d      	bcs.n	80022fe <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80022c2:	68fb      	ldr	r3, [r7, #12]
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	68da      	ldr	r2, [r3, #12]
 80022c8:	68fb      	ldr	r3, [r7, #12]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80022d0:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80022d2:	68fb      	ldr	r3, [r7, #12]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	695a      	ldr	r2, [r3, #20]
 80022d8:	68fb      	ldr	r3, [r7, #12]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	f022 0201 	bic.w	r2, r2, #1
 80022e0:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	2220      	movs	r2, #32
 80022e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        huart->RxState = HAL_UART_STATE_READY;
 80022ea:	68fb      	ldr	r3, [r7, #12]
 80022ec:	2220      	movs	r2, #32
 80022ee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 80022f2:	68fb      	ldr	r3, [r7, #12]
 80022f4:	2200      	movs	r2, #0
 80022f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_TIMEOUT;
 80022fa:	2303      	movs	r3, #3
 80022fc:	e00f      	b.n	800231e <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	681a      	ldr	r2, [r3, #0]
 8002304:	68bb      	ldr	r3, [r7, #8]
 8002306:	4013      	ands	r3, r2
 8002308:	68ba      	ldr	r2, [r7, #8]
 800230a:	429a      	cmp	r2, r3
 800230c:	bf0c      	ite	eq
 800230e:	2301      	moveq	r3, #1
 8002310:	2300      	movne	r3, #0
 8002312:	b2db      	uxtb	r3, r3
 8002314:	461a      	mov	r2, r3
 8002316:	79fb      	ldrb	r3, [r7, #7]
 8002318:	429a      	cmp	r2, r3
 800231a:	d0c3      	beq.n	80022a4 <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800231c:	2300      	movs	r3, #0
}
 800231e:	4618      	mov	r0, r3
 8002320:	3710      	adds	r7, #16
 8002322:	46bd      	mov	sp, r7
 8002324:	bd80      	pop	{r7, pc}
	...

08002328 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8002328:	b580      	push	{r7, lr}
 800232a:	b084      	sub	sp, #16
 800232c:	af00      	add	r7, sp, #0
 800232e:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	691b      	ldr	r3, [r3, #16]
 8002336:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	68da      	ldr	r2, [r3, #12]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	430a      	orrs	r2, r1
 8002344:	611a      	str	r2, [r3, #16]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
  MODIFY_REG(huart->Instance->CR1,
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);
#else
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	689a      	ldr	r2, [r3, #8]
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	691b      	ldr	r3, [r3, #16]
 800234e:	431a      	orrs	r2, r3
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	695b      	ldr	r3, [r3, #20]
 8002354:	4313      	orrs	r3, r2
 8002356:	60bb      	str	r3, [r7, #8]
  MODIFY_REG(huart->Instance->CR1,
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	681b      	ldr	r3, [r3, #0]
 800235c:	68db      	ldr	r3, [r3, #12]
 800235e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8002362:	f023 030c 	bic.w	r3, r3, #12
 8002366:	687a      	ldr	r2, [r7, #4]
 8002368:	6812      	ldr	r2, [r2, #0]
 800236a:	68b9      	ldr	r1, [r7, #8]
 800236c:	430b      	orrs	r3, r1
 800236e:	60d3      	str	r3, [r2, #12]
             tmpreg);
#endif /* USART_CR1_OVER8 */

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	695b      	ldr	r3, [r3, #20]
 8002376:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	699a      	ldr	r2, [r3, #24]
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	430a      	orrs	r2, r1
 8002384:	615a      	str	r2, [r3, #20]


  if(huart->Instance == USART1)
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	4a2c      	ldr	r2, [pc, #176]	; (800243c <UART_SetConfig+0x114>)
 800238c:	4293      	cmp	r3, r2
 800238e:	d103      	bne.n	8002398 <UART_SetConfig+0x70>
  {
    pclk = HAL_RCC_GetPCLK2Freq();
 8002390:	f7ff fdcc 	bl	8001f2c <HAL_RCC_GetPCLK2Freq>
 8002394:	60f8      	str	r0, [r7, #12]
 8002396:	e002      	b.n	800239e <UART_SetConfig+0x76>
  }
  else
  {
    pclk = HAL_RCC_GetPCLK1Freq();
 8002398:	f7ff fdb4 	bl	8001f04 <HAL_RCC_GetPCLK1Freq>
 800239c:	60f8      	str	r0, [r7, #12]
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
#else
  huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800239e:	68fa      	ldr	r2, [r7, #12]
 80023a0:	4613      	mov	r3, r2
 80023a2:	009b      	lsls	r3, r3, #2
 80023a4:	4413      	add	r3, r2
 80023a6:	009a      	lsls	r2, r3, #2
 80023a8:	441a      	add	r2, r3
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	685b      	ldr	r3, [r3, #4]
 80023ae:	009b      	lsls	r3, r3, #2
 80023b0:	fbb2 f3f3 	udiv	r3, r2, r3
 80023b4:	4a22      	ldr	r2, [pc, #136]	; (8002440 <UART_SetConfig+0x118>)
 80023b6:	fba2 2303 	umull	r2, r3, r2, r3
 80023ba:	095b      	lsrs	r3, r3, #5
 80023bc:	0119      	lsls	r1, r3, #4
 80023be:	68fa      	ldr	r2, [r7, #12]
 80023c0:	4613      	mov	r3, r2
 80023c2:	009b      	lsls	r3, r3, #2
 80023c4:	4413      	add	r3, r2
 80023c6:	009a      	lsls	r2, r3, #2
 80023c8:	441a      	add	r2, r3
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	685b      	ldr	r3, [r3, #4]
 80023ce:	009b      	lsls	r3, r3, #2
 80023d0:	fbb2 f2f3 	udiv	r2, r2, r3
 80023d4:	4b1a      	ldr	r3, [pc, #104]	; (8002440 <UART_SetConfig+0x118>)
 80023d6:	fba3 0302 	umull	r0, r3, r3, r2
 80023da:	095b      	lsrs	r3, r3, #5
 80023dc:	2064      	movs	r0, #100	; 0x64
 80023de:	fb00 f303 	mul.w	r3, r0, r3
 80023e2:	1ad3      	subs	r3, r2, r3
 80023e4:	011b      	lsls	r3, r3, #4
 80023e6:	3332      	adds	r3, #50	; 0x32
 80023e8:	4a15      	ldr	r2, [pc, #84]	; (8002440 <UART_SetConfig+0x118>)
 80023ea:	fba2 2303 	umull	r2, r3, r2, r3
 80023ee:	095b      	lsrs	r3, r3, #5
 80023f0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80023f4:	4419      	add	r1, r3
 80023f6:	68fa      	ldr	r2, [r7, #12]
 80023f8:	4613      	mov	r3, r2
 80023fa:	009b      	lsls	r3, r3, #2
 80023fc:	4413      	add	r3, r2
 80023fe:	009a      	lsls	r2, r3, #2
 8002400:	441a      	add	r2, r3
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	685b      	ldr	r3, [r3, #4]
 8002406:	009b      	lsls	r3, r3, #2
 8002408:	fbb2 f2f3 	udiv	r2, r2, r3
 800240c:	4b0c      	ldr	r3, [pc, #48]	; (8002440 <UART_SetConfig+0x118>)
 800240e:	fba3 0302 	umull	r0, r3, r3, r2
 8002412:	095b      	lsrs	r3, r3, #5
 8002414:	2064      	movs	r0, #100	; 0x64
 8002416:	fb00 f303 	mul.w	r3, r0, r3
 800241a:	1ad3      	subs	r3, r2, r3
 800241c:	011b      	lsls	r3, r3, #4
 800241e:	3332      	adds	r3, #50	; 0x32
 8002420:	4a07      	ldr	r2, [pc, #28]	; (8002440 <UART_SetConfig+0x118>)
 8002422:	fba2 2303 	umull	r2, r3, r2, r3
 8002426:	095b      	lsrs	r3, r3, #5
 8002428:	f003 020f 	and.w	r2, r3, #15
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	440a      	add	r2, r1
 8002432:	609a      	str	r2, [r3, #8]
#endif /* USART_CR1_OVER8 */
}
 8002434:	bf00      	nop
 8002436:	3710      	adds	r7, #16
 8002438:	46bd      	mov	sp, r7
 800243a:	bd80      	pop	{r7, pc}
 800243c:	40013800 	.word	0x40013800
 8002440:	51eb851f 	.word	0x51eb851f

08002444 <__errno>:
 8002444:	4b01      	ldr	r3, [pc, #4]	; (800244c <__errno+0x8>)
 8002446:	6818      	ldr	r0, [r3, #0]
 8002448:	4770      	bx	lr
 800244a:	bf00      	nop
 800244c:	2000000c 	.word	0x2000000c

08002450 <__libc_init_array>:
 8002450:	b570      	push	{r4, r5, r6, lr}
 8002452:	2600      	movs	r6, #0
 8002454:	4d0c      	ldr	r5, [pc, #48]	; (8002488 <__libc_init_array+0x38>)
 8002456:	4c0d      	ldr	r4, [pc, #52]	; (800248c <__libc_init_array+0x3c>)
 8002458:	1b64      	subs	r4, r4, r5
 800245a:	10a4      	asrs	r4, r4, #2
 800245c:	42a6      	cmp	r6, r4
 800245e:	d109      	bne.n	8002474 <__libc_init_array+0x24>
 8002460:	f005 fb30 	bl	8007ac4 <_init>
 8002464:	2600      	movs	r6, #0
 8002466:	4d0a      	ldr	r5, [pc, #40]	; (8002490 <__libc_init_array+0x40>)
 8002468:	4c0a      	ldr	r4, [pc, #40]	; (8002494 <__libc_init_array+0x44>)
 800246a:	1b64      	subs	r4, r4, r5
 800246c:	10a4      	asrs	r4, r4, #2
 800246e:	42a6      	cmp	r6, r4
 8002470:	d105      	bne.n	800247e <__libc_init_array+0x2e>
 8002472:	bd70      	pop	{r4, r5, r6, pc}
 8002474:	f855 3b04 	ldr.w	r3, [r5], #4
 8002478:	4798      	blx	r3
 800247a:	3601      	adds	r6, #1
 800247c:	e7ee      	b.n	800245c <__libc_init_array+0xc>
 800247e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002482:	4798      	blx	r3
 8002484:	3601      	adds	r6, #1
 8002486:	e7f2      	b.n	800246e <__libc_init_array+0x1e>
 8002488:	08007ff4 	.word	0x08007ff4
 800248c:	08007ff4 	.word	0x08007ff4
 8002490:	08007ff4 	.word	0x08007ff4
 8002494:	08007ff8 	.word	0x08007ff8

08002498 <memset>:
 8002498:	4603      	mov	r3, r0
 800249a:	4402      	add	r2, r0
 800249c:	4293      	cmp	r3, r2
 800249e:	d100      	bne.n	80024a2 <memset+0xa>
 80024a0:	4770      	bx	lr
 80024a2:	f803 1b01 	strb.w	r1, [r3], #1
 80024a6:	e7f9      	b.n	800249c <memset+0x4>

080024a8 <__cvt>:
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80024ae:	461f      	mov	r7, r3
 80024b0:	bfbb      	ittet	lt
 80024b2:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 80024b6:	461f      	movlt	r7, r3
 80024b8:	2300      	movge	r3, #0
 80024ba:	232d      	movlt	r3, #45	; 0x2d
 80024bc:	b088      	sub	sp, #32
 80024be:	4614      	mov	r4, r2
 80024c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80024c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80024c4:	7013      	strb	r3, [r2, #0]
 80024c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80024c8:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 80024cc:	f023 0820 	bic.w	r8, r3, #32
 80024d0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80024d4:	d005      	beq.n	80024e2 <__cvt+0x3a>
 80024d6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80024da:	d100      	bne.n	80024de <__cvt+0x36>
 80024dc:	3501      	adds	r5, #1
 80024de:	2302      	movs	r3, #2
 80024e0:	e000      	b.n	80024e4 <__cvt+0x3c>
 80024e2:	2303      	movs	r3, #3
 80024e4:	aa07      	add	r2, sp, #28
 80024e6:	9204      	str	r2, [sp, #16]
 80024e8:	aa06      	add	r2, sp, #24
 80024ea:	e9cd a202 	strd	sl, r2, [sp, #8]
 80024ee:	e9cd 3500 	strd	r3, r5, [sp]
 80024f2:	4622      	mov	r2, r4
 80024f4:	463b      	mov	r3, r7
 80024f6:	f001 ffaf 	bl	8004458 <_dtoa_r>
 80024fa:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80024fe:	4606      	mov	r6, r0
 8002500:	d102      	bne.n	8002508 <__cvt+0x60>
 8002502:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002504:	07db      	lsls	r3, r3, #31
 8002506:	d522      	bpl.n	800254e <__cvt+0xa6>
 8002508:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800250c:	eb06 0905 	add.w	r9, r6, r5
 8002510:	d110      	bne.n	8002534 <__cvt+0x8c>
 8002512:	7833      	ldrb	r3, [r6, #0]
 8002514:	2b30      	cmp	r3, #48	; 0x30
 8002516:	d10a      	bne.n	800252e <__cvt+0x86>
 8002518:	2200      	movs	r2, #0
 800251a:	2300      	movs	r3, #0
 800251c:	4620      	mov	r0, r4
 800251e:	4639      	mov	r1, r7
 8002520:	f7fe faae 	bl	8000a80 <__aeabi_dcmpeq>
 8002524:	b918      	cbnz	r0, 800252e <__cvt+0x86>
 8002526:	f1c5 0501 	rsb	r5, r5, #1
 800252a:	f8ca 5000 	str.w	r5, [sl]
 800252e:	f8da 3000 	ldr.w	r3, [sl]
 8002532:	4499      	add	r9, r3
 8002534:	2200      	movs	r2, #0
 8002536:	2300      	movs	r3, #0
 8002538:	4620      	mov	r0, r4
 800253a:	4639      	mov	r1, r7
 800253c:	f7fe faa0 	bl	8000a80 <__aeabi_dcmpeq>
 8002540:	b108      	cbz	r0, 8002546 <__cvt+0x9e>
 8002542:	f8cd 901c 	str.w	r9, [sp, #28]
 8002546:	2230      	movs	r2, #48	; 0x30
 8002548:	9b07      	ldr	r3, [sp, #28]
 800254a:	454b      	cmp	r3, r9
 800254c:	d307      	bcc.n	800255e <__cvt+0xb6>
 800254e:	4630      	mov	r0, r6
 8002550:	9b07      	ldr	r3, [sp, #28]
 8002552:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8002554:	1b9b      	subs	r3, r3, r6
 8002556:	6013      	str	r3, [r2, #0]
 8002558:	b008      	add	sp, #32
 800255a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800255e:	1c59      	adds	r1, r3, #1
 8002560:	9107      	str	r1, [sp, #28]
 8002562:	701a      	strb	r2, [r3, #0]
 8002564:	e7f0      	b.n	8002548 <__cvt+0xa0>

08002566 <__exponent>:
 8002566:	4603      	mov	r3, r0
 8002568:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800256a:	2900      	cmp	r1, #0
 800256c:	f803 2b02 	strb.w	r2, [r3], #2
 8002570:	bfb6      	itet	lt
 8002572:	222d      	movlt	r2, #45	; 0x2d
 8002574:	222b      	movge	r2, #43	; 0x2b
 8002576:	4249      	neglt	r1, r1
 8002578:	2909      	cmp	r1, #9
 800257a:	7042      	strb	r2, [r0, #1]
 800257c:	dd2b      	ble.n	80025d6 <__exponent+0x70>
 800257e:	f10d 0407 	add.w	r4, sp, #7
 8002582:	46a4      	mov	ip, r4
 8002584:	270a      	movs	r7, #10
 8002586:	fb91 f6f7 	sdiv	r6, r1, r7
 800258a:	460a      	mov	r2, r1
 800258c:	46a6      	mov	lr, r4
 800258e:	fb07 1516 	mls	r5, r7, r6, r1
 8002592:	2a63      	cmp	r2, #99	; 0x63
 8002594:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8002598:	4631      	mov	r1, r6
 800259a:	f104 34ff 	add.w	r4, r4, #4294967295
 800259e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80025a2:	dcf0      	bgt.n	8002586 <__exponent+0x20>
 80025a4:	3130      	adds	r1, #48	; 0x30
 80025a6:	f1ae 0502 	sub.w	r5, lr, #2
 80025aa:	f804 1c01 	strb.w	r1, [r4, #-1]
 80025ae:	4629      	mov	r1, r5
 80025b0:	1c44      	adds	r4, r0, #1
 80025b2:	4561      	cmp	r1, ip
 80025b4:	d30a      	bcc.n	80025cc <__exponent+0x66>
 80025b6:	f10d 0209 	add.w	r2, sp, #9
 80025ba:	eba2 020e 	sub.w	r2, r2, lr
 80025be:	4565      	cmp	r5, ip
 80025c0:	bf88      	it	hi
 80025c2:	2200      	movhi	r2, #0
 80025c4:	4413      	add	r3, r2
 80025c6:	1a18      	subs	r0, r3, r0
 80025c8:	b003      	add	sp, #12
 80025ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025cc:	f811 2b01 	ldrb.w	r2, [r1], #1
 80025d0:	f804 2f01 	strb.w	r2, [r4, #1]!
 80025d4:	e7ed      	b.n	80025b2 <__exponent+0x4c>
 80025d6:	2330      	movs	r3, #48	; 0x30
 80025d8:	3130      	adds	r1, #48	; 0x30
 80025da:	7083      	strb	r3, [r0, #2]
 80025dc:	70c1      	strb	r1, [r0, #3]
 80025de:	1d03      	adds	r3, r0, #4
 80025e0:	e7f1      	b.n	80025c6 <__exponent+0x60>
	...

080025e4 <_printf_float>:
 80025e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025e8:	b091      	sub	sp, #68	; 0x44
 80025ea:	460c      	mov	r4, r1
 80025ec:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80025f0:	4616      	mov	r6, r2
 80025f2:	461f      	mov	r7, r3
 80025f4:	4605      	mov	r5, r0
 80025f6:	f003 fa65 	bl	8005ac4 <_localeconv_r>
 80025fa:	6803      	ldr	r3, [r0, #0]
 80025fc:	4618      	mov	r0, r3
 80025fe:	9309      	str	r3, [sp, #36]	; 0x24
 8002600:	f7fd fe12 	bl	8000228 <strlen>
 8002604:	2300      	movs	r3, #0
 8002606:	930e      	str	r3, [sp, #56]	; 0x38
 8002608:	f8d8 3000 	ldr.w	r3, [r8]
 800260c:	900a      	str	r0, [sp, #40]	; 0x28
 800260e:	3307      	adds	r3, #7
 8002610:	f023 0307 	bic.w	r3, r3, #7
 8002614:	f103 0208 	add.w	r2, r3, #8
 8002618:	f894 9018 	ldrb.w	r9, [r4, #24]
 800261c:	f8d4 b000 	ldr.w	fp, [r4]
 8002620:	f8c8 2000 	str.w	r2, [r8]
 8002624:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002628:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800262c:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 8002630:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8002634:	930b      	str	r3, [sp, #44]	; 0x2c
 8002636:	f04f 32ff 	mov.w	r2, #4294967295
 800263a:	4640      	mov	r0, r8
 800263c:	4b9c      	ldr	r3, [pc, #624]	; (80028b0 <_printf_float+0x2cc>)
 800263e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002640:	f7fe fa50 	bl	8000ae4 <__aeabi_dcmpun>
 8002644:	bb70      	cbnz	r0, 80026a4 <_printf_float+0xc0>
 8002646:	f04f 32ff 	mov.w	r2, #4294967295
 800264a:	4640      	mov	r0, r8
 800264c:	4b98      	ldr	r3, [pc, #608]	; (80028b0 <_printf_float+0x2cc>)
 800264e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002650:	f7fe fa2a 	bl	8000aa8 <__aeabi_dcmple>
 8002654:	bb30      	cbnz	r0, 80026a4 <_printf_float+0xc0>
 8002656:	2200      	movs	r2, #0
 8002658:	2300      	movs	r3, #0
 800265a:	4640      	mov	r0, r8
 800265c:	4651      	mov	r1, sl
 800265e:	f7fe fa19 	bl	8000a94 <__aeabi_dcmplt>
 8002662:	b110      	cbz	r0, 800266a <_printf_float+0x86>
 8002664:	232d      	movs	r3, #45	; 0x2d
 8002666:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800266a:	4b92      	ldr	r3, [pc, #584]	; (80028b4 <_printf_float+0x2d0>)
 800266c:	4892      	ldr	r0, [pc, #584]	; (80028b8 <_printf_float+0x2d4>)
 800266e:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8002672:	bf94      	ite	ls
 8002674:	4698      	movls	r8, r3
 8002676:	4680      	movhi	r8, r0
 8002678:	2303      	movs	r3, #3
 800267a:	f04f 0a00 	mov.w	sl, #0
 800267e:	6123      	str	r3, [r4, #16]
 8002680:	f02b 0304 	bic.w	r3, fp, #4
 8002684:	6023      	str	r3, [r4, #0]
 8002686:	4633      	mov	r3, r6
 8002688:	4621      	mov	r1, r4
 800268a:	4628      	mov	r0, r5
 800268c:	9700      	str	r7, [sp, #0]
 800268e:	aa0f      	add	r2, sp, #60	; 0x3c
 8002690:	f000 f9d4 	bl	8002a3c <_printf_common>
 8002694:	3001      	adds	r0, #1
 8002696:	f040 8090 	bne.w	80027ba <_printf_float+0x1d6>
 800269a:	f04f 30ff 	mov.w	r0, #4294967295
 800269e:	b011      	add	sp, #68	; 0x44
 80026a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026a4:	4642      	mov	r2, r8
 80026a6:	4653      	mov	r3, sl
 80026a8:	4640      	mov	r0, r8
 80026aa:	4651      	mov	r1, sl
 80026ac:	f7fe fa1a 	bl	8000ae4 <__aeabi_dcmpun>
 80026b0:	b148      	cbz	r0, 80026c6 <_printf_float+0xe2>
 80026b2:	f1ba 0f00 	cmp.w	sl, #0
 80026b6:	bfb8      	it	lt
 80026b8:	232d      	movlt	r3, #45	; 0x2d
 80026ba:	4880      	ldr	r0, [pc, #512]	; (80028bc <_printf_float+0x2d8>)
 80026bc:	bfb8      	it	lt
 80026be:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80026c2:	4b7f      	ldr	r3, [pc, #508]	; (80028c0 <_printf_float+0x2dc>)
 80026c4:	e7d3      	b.n	800266e <_printf_float+0x8a>
 80026c6:	6863      	ldr	r3, [r4, #4]
 80026c8:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 80026cc:	1c5a      	adds	r2, r3, #1
 80026ce:	d142      	bne.n	8002756 <_printf_float+0x172>
 80026d0:	2306      	movs	r3, #6
 80026d2:	6063      	str	r3, [r4, #4]
 80026d4:	2200      	movs	r2, #0
 80026d6:	9206      	str	r2, [sp, #24]
 80026d8:	aa0e      	add	r2, sp, #56	; 0x38
 80026da:	e9cd 9204 	strd	r9, r2, [sp, #16]
 80026de:	aa0d      	add	r2, sp, #52	; 0x34
 80026e0:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 80026e4:	9203      	str	r2, [sp, #12]
 80026e6:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80026ea:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80026ee:	6023      	str	r3, [r4, #0]
 80026f0:	6863      	ldr	r3, [r4, #4]
 80026f2:	4642      	mov	r2, r8
 80026f4:	9300      	str	r3, [sp, #0]
 80026f6:	4628      	mov	r0, r5
 80026f8:	4653      	mov	r3, sl
 80026fa:	910b      	str	r1, [sp, #44]	; 0x2c
 80026fc:	f7ff fed4 	bl	80024a8 <__cvt>
 8002700:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002702:	4680      	mov	r8, r0
 8002704:	2947      	cmp	r1, #71	; 0x47
 8002706:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002708:	d108      	bne.n	800271c <_printf_float+0x138>
 800270a:	1cc8      	adds	r0, r1, #3
 800270c:	db02      	blt.n	8002714 <_printf_float+0x130>
 800270e:	6863      	ldr	r3, [r4, #4]
 8002710:	4299      	cmp	r1, r3
 8002712:	dd40      	ble.n	8002796 <_printf_float+0x1b2>
 8002714:	f1a9 0902 	sub.w	r9, r9, #2
 8002718:	fa5f f989 	uxtb.w	r9, r9
 800271c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8002720:	d81f      	bhi.n	8002762 <_printf_float+0x17e>
 8002722:	464a      	mov	r2, r9
 8002724:	3901      	subs	r1, #1
 8002726:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800272a:	910d      	str	r1, [sp, #52]	; 0x34
 800272c:	f7ff ff1b 	bl	8002566 <__exponent>
 8002730:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002732:	4682      	mov	sl, r0
 8002734:	1813      	adds	r3, r2, r0
 8002736:	2a01      	cmp	r2, #1
 8002738:	6123      	str	r3, [r4, #16]
 800273a:	dc02      	bgt.n	8002742 <_printf_float+0x15e>
 800273c:	6822      	ldr	r2, [r4, #0]
 800273e:	07d2      	lsls	r2, r2, #31
 8002740:	d501      	bpl.n	8002746 <_printf_float+0x162>
 8002742:	3301      	adds	r3, #1
 8002744:	6123      	str	r3, [r4, #16]
 8002746:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800274a:	2b00      	cmp	r3, #0
 800274c:	d09b      	beq.n	8002686 <_printf_float+0xa2>
 800274e:	232d      	movs	r3, #45	; 0x2d
 8002750:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002754:	e797      	b.n	8002686 <_printf_float+0xa2>
 8002756:	2947      	cmp	r1, #71	; 0x47
 8002758:	d1bc      	bne.n	80026d4 <_printf_float+0xf0>
 800275a:	2b00      	cmp	r3, #0
 800275c:	d1ba      	bne.n	80026d4 <_printf_float+0xf0>
 800275e:	2301      	movs	r3, #1
 8002760:	e7b7      	b.n	80026d2 <_printf_float+0xee>
 8002762:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8002766:	d118      	bne.n	800279a <_printf_float+0x1b6>
 8002768:	2900      	cmp	r1, #0
 800276a:	6863      	ldr	r3, [r4, #4]
 800276c:	dd0b      	ble.n	8002786 <_printf_float+0x1a2>
 800276e:	6121      	str	r1, [r4, #16]
 8002770:	b913      	cbnz	r3, 8002778 <_printf_float+0x194>
 8002772:	6822      	ldr	r2, [r4, #0]
 8002774:	07d0      	lsls	r0, r2, #31
 8002776:	d502      	bpl.n	800277e <_printf_float+0x19a>
 8002778:	3301      	adds	r3, #1
 800277a:	440b      	add	r3, r1
 800277c:	6123      	str	r3, [r4, #16]
 800277e:	f04f 0a00 	mov.w	sl, #0
 8002782:	65a1      	str	r1, [r4, #88]	; 0x58
 8002784:	e7df      	b.n	8002746 <_printf_float+0x162>
 8002786:	b913      	cbnz	r3, 800278e <_printf_float+0x1aa>
 8002788:	6822      	ldr	r2, [r4, #0]
 800278a:	07d2      	lsls	r2, r2, #31
 800278c:	d501      	bpl.n	8002792 <_printf_float+0x1ae>
 800278e:	3302      	adds	r3, #2
 8002790:	e7f4      	b.n	800277c <_printf_float+0x198>
 8002792:	2301      	movs	r3, #1
 8002794:	e7f2      	b.n	800277c <_printf_float+0x198>
 8002796:	f04f 0967 	mov.w	r9, #103	; 0x67
 800279a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800279c:	4299      	cmp	r1, r3
 800279e:	db05      	blt.n	80027ac <_printf_float+0x1c8>
 80027a0:	6823      	ldr	r3, [r4, #0]
 80027a2:	6121      	str	r1, [r4, #16]
 80027a4:	07d8      	lsls	r0, r3, #31
 80027a6:	d5ea      	bpl.n	800277e <_printf_float+0x19a>
 80027a8:	1c4b      	adds	r3, r1, #1
 80027aa:	e7e7      	b.n	800277c <_printf_float+0x198>
 80027ac:	2900      	cmp	r1, #0
 80027ae:	bfcc      	ite	gt
 80027b0:	2201      	movgt	r2, #1
 80027b2:	f1c1 0202 	rsble	r2, r1, #2
 80027b6:	4413      	add	r3, r2
 80027b8:	e7e0      	b.n	800277c <_printf_float+0x198>
 80027ba:	6823      	ldr	r3, [r4, #0]
 80027bc:	055a      	lsls	r2, r3, #21
 80027be:	d407      	bmi.n	80027d0 <_printf_float+0x1ec>
 80027c0:	6923      	ldr	r3, [r4, #16]
 80027c2:	4642      	mov	r2, r8
 80027c4:	4631      	mov	r1, r6
 80027c6:	4628      	mov	r0, r5
 80027c8:	47b8      	blx	r7
 80027ca:	3001      	adds	r0, #1
 80027cc:	d12b      	bne.n	8002826 <_printf_float+0x242>
 80027ce:	e764      	b.n	800269a <_printf_float+0xb6>
 80027d0:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80027d4:	f240 80dd 	bls.w	8002992 <_printf_float+0x3ae>
 80027d8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80027dc:	2200      	movs	r2, #0
 80027de:	2300      	movs	r3, #0
 80027e0:	f7fe f94e 	bl	8000a80 <__aeabi_dcmpeq>
 80027e4:	2800      	cmp	r0, #0
 80027e6:	d033      	beq.n	8002850 <_printf_float+0x26c>
 80027e8:	2301      	movs	r3, #1
 80027ea:	4631      	mov	r1, r6
 80027ec:	4628      	mov	r0, r5
 80027ee:	4a35      	ldr	r2, [pc, #212]	; (80028c4 <_printf_float+0x2e0>)
 80027f0:	47b8      	blx	r7
 80027f2:	3001      	adds	r0, #1
 80027f4:	f43f af51 	beq.w	800269a <_printf_float+0xb6>
 80027f8:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80027fc:	429a      	cmp	r2, r3
 80027fe:	db02      	blt.n	8002806 <_printf_float+0x222>
 8002800:	6823      	ldr	r3, [r4, #0]
 8002802:	07d8      	lsls	r0, r3, #31
 8002804:	d50f      	bpl.n	8002826 <_printf_float+0x242>
 8002806:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800280a:	4631      	mov	r1, r6
 800280c:	4628      	mov	r0, r5
 800280e:	47b8      	blx	r7
 8002810:	3001      	adds	r0, #1
 8002812:	f43f af42 	beq.w	800269a <_printf_float+0xb6>
 8002816:	f04f 0800 	mov.w	r8, #0
 800281a:	f104 091a 	add.w	r9, r4, #26
 800281e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002820:	3b01      	subs	r3, #1
 8002822:	4543      	cmp	r3, r8
 8002824:	dc09      	bgt.n	800283a <_printf_float+0x256>
 8002826:	6823      	ldr	r3, [r4, #0]
 8002828:	079b      	lsls	r3, r3, #30
 800282a:	f100 8102 	bmi.w	8002a32 <_printf_float+0x44e>
 800282e:	68e0      	ldr	r0, [r4, #12]
 8002830:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002832:	4298      	cmp	r0, r3
 8002834:	bfb8      	it	lt
 8002836:	4618      	movlt	r0, r3
 8002838:	e731      	b.n	800269e <_printf_float+0xba>
 800283a:	2301      	movs	r3, #1
 800283c:	464a      	mov	r2, r9
 800283e:	4631      	mov	r1, r6
 8002840:	4628      	mov	r0, r5
 8002842:	47b8      	blx	r7
 8002844:	3001      	adds	r0, #1
 8002846:	f43f af28 	beq.w	800269a <_printf_float+0xb6>
 800284a:	f108 0801 	add.w	r8, r8, #1
 800284e:	e7e6      	b.n	800281e <_printf_float+0x23a>
 8002850:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002852:	2b00      	cmp	r3, #0
 8002854:	dc38      	bgt.n	80028c8 <_printf_float+0x2e4>
 8002856:	2301      	movs	r3, #1
 8002858:	4631      	mov	r1, r6
 800285a:	4628      	mov	r0, r5
 800285c:	4a19      	ldr	r2, [pc, #100]	; (80028c4 <_printf_float+0x2e0>)
 800285e:	47b8      	blx	r7
 8002860:	3001      	adds	r0, #1
 8002862:	f43f af1a 	beq.w	800269a <_printf_float+0xb6>
 8002866:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800286a:	4313      	orrs	r3, r2
 800286c:	d102      	bne.n	8002874 <_printf_float+0x290>
 800286e:	6823      	ldr	r3, [r4, #0]
 8002870:	07d9      	lsls	r1, r3, #31
 8002872:	d5d8      	bpl.n	8002826 <_printf_float+0x242>
 8002874:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002878:	4631      	mov	r1, r6
 800287a:	4628      	mov	r0, r5
 800287c:	47b8      	blx	r7
 800287e:	3001      	adds	r0, #1
 8002880:	f43f af0b 	beq.w	800269a <_printf_float+0xb6>
 8002884:	f04f 0900 	mov.w	r9, #0
 8002888:	f104 0a1a 	add.w	sl, r4, #26
 800288c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800288e:	425b      	negs	r3, r3
 8002890:	454b      	cmp	r3, r9
 8002892:	dc01      	bgt.n	8002898 <_printf_float+0x2b4>
 8002894:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002896:	e794      	b.n	80027c2 <_printf_float+0x1de>
 8002898:	2301      	movs	r3, #1
 800289a:	4652      	mov	r2, sl
 800289c:	4631      	mov	r1, r6
 800289e:	4628      	mov	r0, r5
 80028a0:	47b8      	blx	r7
 80028a2:	3001      	adds	r0, #1
 80028a4:	f43f aef9 	beq.w	800269a <_printf_float+0xb6>
 80028a8:	f109 0901 	add.w	r9, r9, #1
 80028ac:	e7ee      	b.n	800288c <_printf_float+0x2a8>
 80028ae:	bf00      	nop
 80028b0:	7fefffff 	.word	0x7fefffff
 80028b4:	08007b38 	.word	0x08007b38
 80028b8:	08007b3c 	.word	0x08007b3c
 80028bc:	08007b44 	.word	0x08007b44
 80028c0:	08007b40 	.word	0x08007b40
 80028c4:	08007fa1 	.word	0x08007fa1
 80028c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80028ca:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80028cc:	429a      	cmp	r2, r3
 80028ce:	bfa8      	it	ge
 80028d0:	461a      	movge	r2, r3
 80028d2:	2a00      	cmp	r2, #0
 80028d4:	4691      	mov	r9, r2
 80028d6:	dc37      	bgt.n	8002948 <_printf_float+0x364>
 80028d8:	f04f 0b00 	mov.w	fp, #0
 80028dc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80028e0:	f104 021a 	add.w	r2, r4, #26
 80028e4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80028e8:	ebaa 0309 	sub.w	r3, sl, r9
 80028ec:	455b      	cmp	r3, fp
 80028ee:	dc33      	bgt.n	8002958 <_printf_float+0x374>
 80028f0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80028f4:	429a      	cmp	r2, r3
 80028f6:	db3b      	blt.n	8002970 <_printf_float+0x38c>
 80028f8:	6823      	ldr	r3, [r4, #0]
 80028fa:	07da      	lsls	r2, r3, #31
 80028fc:	d438      	bmi.n	8002970 <_printf_float+0x38c>
 80028fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002900:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002902:	eba3 020a 	sub.w	r2, r3, sl
 8002906:	eba3 0901 	sub.w	r9, r3, r1
 800290a:	4591      	cmp	r9, r2
 800290c:	bfa8      	it	ge
 800290e:	4691      	movge	r9, r2
 8002910:	f1b9 0f00 	cmp.w	r9, #0
 8002914:	dc34      	bgt.n	8002980 <_printf_float+0x39c>
 8002916:	f04f 0800 	mov.w	r8, #0
 800291a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800291e:	f104 0a1a 	add.w	sl, r4, #26
 8002922:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002926:	1a9b      	subs	r3, r3, r2
 8002928:	eba3 0309 	sub.w	r3, r3, r9
 800292c:	4543      	cmp	r3, r8
 800292e:	f77f af7a 	ble.w	8002826 <_printf_float+0x242>
 8002932:	2301      	movs	r3, #1
 8002934:	4652      	mov	r2, sl
 8002936:	4631      	mov	r1, r6
 8002938:	4628      	mov	r0, r5
 800293a:	47b8      	blx	r7
 800293c:	3001      	adds	r0, #1
 800293e:	f43f aeac 	beq.w	800269a <_printf_float+0xb6>
 8002942:	f108 0801 	add.w	r8, r8, #1
 8002946:	e7ec      	b.n	8002922 <_printf_float+0x33e>
 8002948:	4613      	mov	r3, r2
 800294a:	4631      	mov	r1, r6
 800294c:	4642      	mov	r2, r8
 800294e:	4628      	mov	r0, r5
 8002950:	47b8      	blx	r7
 8002952:	3001      	adds	r0, #1
 8002954:	d1c0      	bne.n	80028d8 <_printf_float+0x2f4>
 8002956:	e6a0      	b.n	800269a <_printf_float+0xb6>
 8002958:	2301      	movs	r3, #1
 800295a:	4631      	mov	r1, r6
 800295c:	4628      	mov	r0, r5
 800295e:	920b      	str	r2, [sp, #44]	; 0x2c
 8002960:	47b8      	blx	r7
 8002962:	3001      	adds	r0, #1
 8002964:	f43f ae99 	beq.w	800269a <_printf_float+0xb6>
 8002968:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800296a:	f10b 0b01 	add.w	fp, fp, #1
 800296e:	e7b9      	b.n	80028e4 <_printf_float+0x300>
 8002970:	4631      	mov	r1, r6
 8002972:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002976:	4628      	mov	r0, r5
 8002978:	47b8      	blx	r7
 800297a:	3001      	adds	r0, #1
 800297c:	d1bf      	bne.n	80028fe <_printf_float+0x31a>
 800297e:	e68c      	b.n	800269a <_printf_float+0xb6>
 8002980:	464b      	mov	r3, r9
 8002982:	4631      	mov	r1, r6
 8002984:	4628      	mov	r0, r5
 8002986:	eb08 020a 	add.w	r2, r8, sl
 800298a:	47b8      	blx	r7
 800298c:	3001      	adds	r0, #1
 800298e:	d1c2      	bne.n	8002916 <_printf_float+0x332>
 8002990:	e683      	b.n	800269a <_printf_float+0xb6>
 8002992:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002994:	2a01      	cmp	r2, #1
 8002996:	dc01      	bgt.n	800299c <_printf_float+0x3b8>
 8002998:	07db      	lsls	r3, r3, #31
 800299a:	d537      	bpl.n	8002a0c <_printf_float+0x428>
 800299c:	2301      	movs	r3, #1
 800299e:	4642      	mov	r2, r8
 80029a0:	4631      	mov	r1, r6
 80029a2:	4628      	mov	r0, r5
 80029a4:	47b8      	blx	r7
 80029a6:	3001      	adds	r0, #1
 80029a8:	f43f ae77 	beq.w	800269a <_printf_float+0xb6>
 80029ac:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80029b0:	4631      	mov	r1, r6
 80029b2:	4628      	mov	r0, r5
 80029b4:	47b8      	blx	r7
 80029b6:	3001      	adds	r0, #1
 80029b8:	f43f ae6f 	beq.w	800269a <_printf_float+0xb6>
 80029bc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80029c0:	2200      	movs	r2, #0
 80029c2:	2300      	movs	r3, #0
 80029c4:	f7fe f85c 	bl	8000a80 <__aeabi_dcmpeq>
 80029c8:	b9d8      	cbnz	r0, 8002a02 <_printf_float+0x41e>
 80029ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80029cc:	f108 0201 	add.w	r2, r8, #1
 80029d0:	3b01      	subs	r3, #1
 80029d2:	4631      	mov	r1, r6
 80029d4:	4628      	mov	r0, r5
 80029d6:	47b8      	blx	r7
 80029d8:	3001      	adds	r0, #1
 80029da:	d10e      	bne.n	80029fa <_printf_float+0x416>
 80029dc:	e65d      	b.n	800269a <_printf_float+0xb6>
 80029de:	2301      	movs	r3, #1
 80029e0:	464a      	mov	r2, r9
 80029e2:	4631      	mov	r1, r6
 80029e4:	4628      	mov	r0, r5
 80029e6:	47b8      	blx	r7
 80029e8:	3001      	adds	r0, #1
 80029ea:	f43f ae56 	beq.w	800269a <_printf_float+0xb6>
 80029ee:	f108 0801 	add.w	r8, r8, #1
 80029f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80029f4:	3b01      	subs	r3, #1
 80029f6:	4543      	cmp	r3, r8
 80029f8:	dcf1      	bgt.n	80029de <_printf_float+0x3fa>
 80029fa:	4653      	mov	r3, sl
 80029fc:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002a00:	e6e0      	b.n	80027c4 <_printf_float+0x1e0>
 8002a02:	f04f 0800 	mov.w	r8, #0
 8002a06:	f104 091a 	add.w	r9, r4, #26
 8002a0a:	e7f2      	b.n	80029f2 <_printf_float+0x40e>
 8002a0c:	2301      	movs	r3, #1
 8002a0e:	4642      	mov	r2, r8
 8002a10:	e7df      	b.n	80029d2 <_printf_float+0x3ee>
 8002a12:	2301      	movs	r3, #1
 8002a14:	464a      	mov	r2, r9
 8002a16:	4631      	mov	r1, r6
 8002a18:	4628      	mov	r0, r5
 8002a1a:	47b8      	blx	r7
 8002a1c:	3001      	adds	r0, #1
 8002a1e:	f43f ae3c 	beq.w	800269a <_printf_float+0xb6>
 8002a22:	f108 0801 	add.w	r8, r8, #1
 8002a26:	68e3      	ldr	r3, [r4, #12]
 8002a28:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002a2a:	1a5b      	subs	r3, r3, r1
 8002a2c:	4543      	cmp	r3, r8
 8002a2e:	dcf0      	bgt.n	8002a12 <_printf_float+0x42e>
 8002a30:	e6fd      	b.n	800282e <_printf_float+0x24a>
 8002a32:	f04f 0800 	mov.w	r8, #0
 8002a36:	f104 0919 	add.w	r9, r4, #25
 8002a3a:	e7f4      	b.n	8002a26 <_printf_float+0x442>

08002a3c <_printf_common>:
 8002a3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a40:	4616      	mov	r6, r2
 8002a42:	4699      	mov	r9, r3
 8002a44:	688a      	ldr	r2, [r1, #8]
 8002a46:	690b      	ldr	r3, [r1, #16]
 8002a48:	4607      	mov	r7, r0
 8002a4a:	4293      	cmp	r3, r2
 8002a4c:	bfb8      	it	lt
 8002a4e:	4613      	movlt	r3, r2
 8002a50:	6033      	str	r3, [r6, #0]
 8002a52:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002a56:	460c      	mov	r4, r1
 8002a58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002a5c:	b10a      	cbz	r2, 8002a62 <_printf_common+0x26>
 8002a5e:	3301      	adds	r3, #1
 8002a60:	6033      	str	r3, [r6, #0]
 8002a62:	6823      	ldr	r3, [r4, #0]
 8002a64:	0699      	lsls	r1, r3, #26
 8002a66:	bf42      	ittt	mi
 8002a68:	6833      	ldrmi	r3, [r6, #0]
 8002a6a:	3302      	addmi	r3, #2
 8002a6c:	6033      	strmi	r3, [r6, #0]
 8002a6e:	6825      	ldr	r5, [r4, #0]
 8002a70:	f015 0506 	ands.w	r5, r5, #6
 8002a74:	d106      	bne.n	8002a84 <_printf_common+0x48>
 8002a76:	f104 0a19 	add.w	sl, r4, #25
 8002a7a:	68e3      	ldr	r3, [r4, #12]
 8002a7c:	6832      	ldr	r2, [r6, #0]
 8002a7e:	1a9b      	subs	r3, r3, r2
 8002a80:	42ab      	cmp	r3, r5
 8002a82:	dc28      	bgt.n	8002ad6 <_printf_common+0x9a>
 8002a84:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002a88:	1e13      	subs	r3, r2, #0
 8002a8a:	6822      	ldr	r2, [r4, #0]
 8002a8c:	bf18      	it	ne
 8002a8e:	2301      	movne	r3, #1
 8002a90:	0692      	lsls	r2, r2, #26
 8002a92:	d42d      	bmi.n	8002af0 <_printf_common+0xb4>
 8002a94:	4649      	mov	r1, r9
 8002a96:	4638      	mov	r0, r7
 8002a98:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002a9c:	47c0      	blx	r8
 8002a9e:	3001      	adds	r0, #1
 8002aa0:	d020      	beq.n	8002ae4 <_printf_common+0xa8>
 8002aa2:	6823      	ldr	r3, [r4, #0]
 8002aa4:	68e5      	ldr	r5, [r4, #12]
 8002aa6:	f003 0306 	and.w	r3, r3, #6
 8002aaa:	2b04      	cmp	r3, #4
 8002aac:	bf18      	it	ne
 8002aae:	2500      	movne	r5, #0
 8002ab0:	6832      	ldr	r2, [r6, #0]
 8002ab2:	f04f 0600 	mov.w	r6, #0
 8002ab6:	68a3      	ldr	r3, [r4, #8]
 8002ab8:	bf08      	it	eq
 8002aba:	1aad      	subeq	r5, r5, r2
 8002abc:	6922      	ldr	r2, [r4, #16]
 8002abe:	bf08      	it	eq
 8002ac0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002ac4:	4293      	cmp	r3, r2
 8002ac6:	bfc4      	itt	gt
 8002ac8:	1a9b      	subgt	r3, r3, r2
 8002aca:	18ed      	addgt	r5, r5, r3
 8002acc:	341a      	adds	r4, #26
 8002ace:	42b5      	cmp	r5, r6
 8002ad0:	d11a      	bne.n	8002b08 <_printf_common+0xcc>
 8002ad2:	2000      	movs	r0, #0
 8002ad4:	e008      	b.n	8002ae8 <_printf_common+0xac>
 8002ad6:	2301      	movs	r3, #1
 8002ad8:	4652      	mov	r2, sl
 8002ada:	4649      	mov	r1, r9
 8002adc:	4638      	mov	r0, r7
 8002ade:	47c0      	blx	r8
 8002ae0:	3001      	adds	r0, #1
 8002ae2:	d103      	bne.n	8002aec <_printf_common+0xb0>
 8002ae4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002aec:	3501      	adds	r5, #1
 8002aee:	e7c4      	b.n	8002a7a <_printf_common+0x3e>
 8002af0:	2030      	movs	r0, #48	; 0x30
 8002af2:	18e1      	adds	r1, r4, r3
 8002af4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002af8:	1c5a      	adds	r2, r3, #1
 8002afa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002afe:	4422      	add	r2, r4
 8002b00:	3302      	adds	r3, #2
 8002b02:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002b06:	e7c5      	b.n	8002a94 <_printf_common+0x58>
 8002b08:	2301      	movs	r3, #1
 8002b0a:	4622      	mov	r2, r4
 8002b0c:	4649      	mov	r1, r9
 8002b0e:	4638      	mov	r0, r7
 8002b10:	47c0      	blx	r8
 8002b12:	3001      	adds	r0, #1
 8002b14:	d0e6      	beq.n	8002ae4 <_printf_common+0xa8>
 8002b16:	3601      	adds	r6, #1
 8002b18:	e7d9      	b.n	8002ace <_printf_common+0x92>
	...

08002b1c <_printf_i>:
 8002b1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002b20:	7e0f      	ldrb	r7, [r1, #24]
 8002b22:	4691      	mov	r9, r2
 8002b24:	2f78      	cmp	r7, #120	; 0x78
 8002b26:	4680      	mov	r8, r0
 8002b28:	460c      	mov	r4, r1
 8002b2a:	469a      	mov	sl, r3
 8002b2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002b2e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002b32:	d807      	bhi.n	8002b44 <_printf_i+0x28>
 8002b34:	2f62      	cmp	r7, #98	; 0x62
 8002b36:	d80a      	bhi.n	8002b4e <_printf_i+0x32>
 8002b38:	2f00      	cmp	r7, #0
 8002b3a:	f000 80d9 	beq.w	8002cf0 <_printf_i+0x1d4>
 8002b3e:	2f58      	cmp	r7, #88	; 0x58
 8002b40:	f000 80a4 	beq.w	8002c8c <_printf_i+0x170>
 8002b44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002b48:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002b4c:	e03a      	b.n	8002bc4 <_printf_i+0xa8>
 8002b4e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002b52:	2b15      	cmp	r3, #21
 8002b54:	d8f6      	bhi.n	8002b44 <_printf_i+0x28>
 8002b56:	a101      	add	r1, pc, #4	; (adr r1, 8002b5c <_printf_i+0x40>)
 8002b58:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002b5c:	08002bb5 	.word	0x08002bb5
 8002b60:	08002bc9 	.word	0x08002bc9
 8002b64:	08002b45 	.word	0x08002b45
 8002b68:	08002b45 	.word	0x08002b45
 8002b6c:	08002b45 	.word	0x08002b45
 8002b70:	08002b45 	.word	0x08002b45
 8002b74:	08002bc9 	.word	0x08002bc9
 8002b78:	08002b45 	.word	0x08002b45
 8002b7c:	08002b45 	.word	0x08002b45
 8002b80:	08002b45 	.word	0x08002b45
 8002b84:	08002b45 	.word	0x08002b45
 8002b88:	08002cd7 	.word	0x08002cd7
 8002b8c:	08002bf9 	.word	0x08002bf9
 8002b90:	08002cb9 	.word	0x08002cb9
 8002b94:	08002b45 	.word	0x08002b45
 8002b98:	08002b45 	.word	0x08002b45
 8002b9c:	08002cf9 	.word	0x08002cf9
 8002ba0:	08002b45 	.word	0x08002b45
 8002ba4:	08002bf9 	.word	0x08002bf9
 8002ba8:	08002b45 	.word	0x08002b45
 8002bac:	08002b45 	.word	0x08002b45
 8002bb0:	08002cc1 	.word	0x08002cc1
 8002bb4:	682b      	ldr	r3, [r5, #0]
 8002bb6:	1d1a      	adds	r2, r3, #4
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	602a      	str	r2, [r5, #0]
 8002bbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002bc0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002bc4:	2301      	movs	r3, #1
 8002bc6:	e0a4      	b.n	8002d12 <_printf_i+0x1f6>
 8002bc8:	6820      	ldr	r0, [r4, #0]
 8002bca:	6829      	ldr	r1, [r5, #0]
 8002bcc:	0606      	lsls	r6, r0, #24
 8002bce:	f101 0304 	add.w	r3, r1, #4
 8002bd2:	d50a      	bpl.n	8002bea <_printf_i+0xce>
 8002bd4:	680e      	ldr	r6, [r1, #0]
 8002bd6:	602b      	str	r3, [r5, #0]
 8002bd8:	2e00      	cmp	r6, #0
 8002bda:	da03      	bge.n	8002be4 <_printf_i+0xc8>
 8002bdc:	232d      	movs	r3, #45	; 0x2d
 8002bde:	4276      	negs	r6, r6
 8002be0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002be4:	230a      	movs	r3, #10
 8002be6:	485e      	ldr	r0, [pc, #376]	; (8002d60 <_printf_i+0x244>)
 8002be8:	e019      	b.n	8002c1e <_printf_i+0x102>
 8002bea:	680e      	ldr	r6, [r1, #0]
 8002bec:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002bf0:	602b      	str	r3, [r5, #0]
 8002bf2:	bf18      	it	ne
 8002bf4:	b236      	sxthne	r6, r6
 8002bf6:	e7ef      	b.n	8002bd8 <_printf_i+0xbc>
 8002bf8:	682b      	ldr	r3, [r5, #0]
 8002bfa:	6820      	ldr	r0, [r4, #0]
 8002bfc:	1d19      	adds	r1, r3, #4
 8002bfe:	6029      	str	r1, [r5, #0]
 8002c00:	0601      	lsls	r1, r0, #24
 8002c02:	d501      	bpl.n	8002c08 <_printf_i+0xec>
 8002c04:	681e      	ldr	r6, [r3, #0]
 8002c06:	e002      	b.n	8002c0e <_printf_i+0xf2>
 8002c08:	0646      	lsls	r6, r0, #25
 8002c0a:	d5fb      	bpl.n	8002c04 <_printf_i+0xe8>
 8002c0c:	881e      	ldrh	r6, [r3, #0]
 8002c0e:	2f6f      	cmp	r7, #111	; 0x6f
 8002c10:	bf0c      	ite	eq
 8002c12:	2308      	moveq	r3, #8
 8002c14:	230a      	movne	r3, #10
 8002c16:	4852      	ldr	r0, [pc, #328]	; (8002d60 <_printf_i+0x244>)
 8002c18:	2100      	movs	r1, #0
 8002c1a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002c1e:	6865      	ldr	r5, [r4, #4]
 8002c20:	2d00      	cmp	r5, #0
 8002c22:	bfa8      	it	ge
 8002c24:	6821      	ldrge	r1, [r4, #0]
 8002c26:	60a5      	str	r5, [r4, #8]
 8002c28:	bfa4      	itt	ge
 8002c2a:	f021 0104 	bicge.w	r1, r1, #4
 8002c2e:	6021      	strge	r1, [r4, #0]
 8002c30:	b90e      	cbnz	r6, 8002c36 <_printf_i+0x11a>
 8002c32:	2d00      	cmp	r5, #0
 8002c34:	d04d      	beq.n	8002cd2 <_printf_i+0x1b6>
 8002c36:	4615      	mov	r5, r2
 8002c38:	fbb6 f1f3 	udiv	r1, r6, r3
 8002c3c:	fb03 6711 	mls	r7, r3, r1, r6
 8002c40:	5dc7      	ldrb	r7, [r0, r7]
 8002c42:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002c46:	4637      	mov	r7, r6
 8002c48:	42bb      	cmp	r3, r7
 8002c4a:	460e      	mov	r6, r1
 8002c4c:	d9f4      	bls.n	8002c38 <_printf_i+0x11c>
 8002c4e:	2b08      	cmp	r3, #8
 8002c50:	d10b      	bne.n	8002c6a <_printf_i+0x14e>
 8002c52:	6823      	ldr	r3, [r4, #0]
 8002c54:	07de      	lsls	r6, r3, #31
 8002c56:	d508      	bpl.n	8002c6a <_printf_i+0x14e>
 8002c58:	6923      	ldr	r3, [r4, #16]
 8002c5a:	6861      	ldr	r1, [r4, #4]
 8002c5c:	4299      	cmp	r1, r3
 8002c5e:	bfde      	ittt	le
 8002c60:	2330      	movle	r3, #48	; 0x30
 8002c62:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002c66:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002c6a:	1b52      	subs	r2, r2, r5
 8002c6c:	6122      	str	r2, [r4, #16]
 8002c6e:	464b      	mov	r3, r9
 8002c70:	4621      	mov	r1, r4
 8002c72:	4640      	mov	r0, r8
 8002c74:	f8cd a000 	str.w	sl, [sp]
 8002c78:	aa03      	add	r2, sp, #12
 8002c7a:	f7ff fedf 	bl	8002a3c <_printf_common>
 8002c7e:	3001      	adds	r0, #1
 8002c80:	d14c      	bne.n	8002d1c <_printf_i+0x200>
 8002c82:	f04f 30ff 	mov.w	r0, #4294967295
 8002c86:	b004      	add	sp, #16
 8002c88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002c8c:	4834      	ldr	r0, [pc, #208]	; (8002d60 <_printf_i+0x244>)
 8002c8e:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002c92:	6829      	ldr	r1, [r5, #0]
 8002c94:	6823      	ldr	r3, [r4, #0]
 8002c96:	f851 6b04 	ldr.w	r6, [r1], #4
 8002c9a:	6029      	str	r1, [r5, #0]
 8002c9c:	061d      	lsls	r5, r3, #24
 8002c9e:	d514      	bpl.n	8002cca <_printf_i+0x1ae>
 8002ca0:	07df      	lsls	r7, r3, #31
 8002ca2:	bf44      	itt	mi
 8002ca4:	f043 0320 	orrmi.w	r3, r3, #32
 8002ca8:	6023      	strmi	r3, [r4, #0]
 8002caa:	b91e      	cbnz	r6, 8002cb4 <_printf_i+0x198>
 8002cac:	6823      	ldr	r3, [r4, #0]
 8002cae:	f023 0320 	bic.w	r3, r3, #32
 8002cb2:	6023      	str	r3, [r4, #0]
 8002cb4:	2310      	movs	r3, #16
 8002cb6:	e7af      	b.n	8002c18 <_printf_i+0xfc>
 8002cb8:	6823      	ldr	r3, [r4, #0]
 8002cba:	f043 0320 	orr.w	r3, r3, #32
 8002cbe:	6023      	str	r3, [r4, #0]
 8002cc0:	2378      	movs	r3, #120	; 0x78
 8002cc2:	4828      	ldr	r0, [pc, #160]	; (8002d64 <_printf_i+0x248>)
 8002cc4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002cc8:	e7e3      	b.n	8002c92 <_printf_i+0x176>
 8002cca:	0659      	lsls	r1, r3, #25
 8002ccc:	bf48      	it	mi
 8002cce:	b2b6      	uxthmi	r6, r6
 8002cd0:	e7e6      	b.n	8002ca0 <_printf_i+0x184>
 8002cd2:	4615      	mov	r5, r2
 8002cd4:	e7bb      	b.n	8002c4e <_printf_i+0x132>
 8002cd6:	682b      	ldr	r3, [r5, #0]
 8002cd8:	6826      	ldr	r6, [r4, #0]
 8002cda:	1d18      	adds	r0, r3, #4
 8002cdc:	6961      	ldr	r1, [r4, #20]
 8002cde:	6028      	str	r0, [r5, #0]
 8002ce0:	0635      	lsls	r5, r6, #24
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	d501      	bpl.n	8002cea <_printf_i+0x1ce>
 8002ce6:	6019      	str	r1, [r3, #0]
 8002ce8:	e002      	b.n	8002cf0 <_printf_i+0x1d4>
 8002cea:	0670      	lsls	r0, r6, #25
 8002cec:	d5fb      	bpl.n	8002ce6 <_printf_i+0x1ca>
 8002cee:	8019      	strh	r1, [r3, #0]
 8002cf0:	2300      	movs	r3, #0
 8002cf2:	4615      	mov	r5, r2
 8002cf4:	6123      	str	r3, [r4, #16]
 8002cf6:	e7ba      	b.n	8002c6e <_printf_i+0x152>
 8002cf8:	682b      	ldr	r3, [r5, #0]
 8002cfa:	2100      	movs	r1, #0
 8002cfc:	1d1a      	adds	r2, r3, #4
 8002cfe:	602a      	str	r2, [r5, #0]
 8002d00:	681d      	ldr	r5, [r3, #0]
 8002d02:	6862      	ldr	r2, [r4, #4]
 8002d04:	4628      	mov	r0, r5
 8002d06:	f002 ff63 	bl	8005bd0 <memchr>
 8002d0a:	b108      	cbz	r0, 8002d10 <_printf_i+0x1f4>
 8002d0c:	1b40      	subs	r0, r0, r5
 8002d0e:	6060      	str	r0, [r4, #4]
 8002d10:	6863      	ldr	r3, [r4, #4]
 8002d12:	6123      	str	r3, [r4, #16]
 8002d14:	2300      	movs	r3, #0
 8002d16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002d1a:	e7a8      	b.n	8002c6e <_printf_i+0x152>
 8002d1c:	462a      	mov	r2, r5
 8002d1e:	4649      	mov	r1, r9
 8002d20:	4640      	mov	r0, r8
 8002d22:	6923      	ldr	r3, [r4, #16]
 8002d24:	47d0      	blx	sl
 8002d26:	3001      	adds	r0, #1
 8002d28:	d0ab      	beq.n	8002c82 <_printf_i+0x166>
 8002d2a:	6823      	ldr	r3, [r4, #0]
 8002d2c:	079b      	lsls	r3, r3, #30
 8002d2e:	d413      	bmi.n	8002d58 <_printf_i+0x23c>
 8002d30:	68e0      	ldr	r0, [r4, #12]
 8002d32:	9b03      	ldr	r3, [sp, #12]
 8002d34:	4298      	cmp	r0, r3
 8002d36:	bfb8      	it	lt
 8002d38:	4618      	movlt	r0, r3
 8002d3a:	e7a4      	b.n	8002c86 <_printf_i+0x16a>
 8002d3c:	2301      	movs	r3, #1
 8002d3e:	4632      	mov	r2, r6
 8002d40:	4649      	mov	r1, r9
 8002d42:	4640      	mov	r0, r8
 8002d44:	47d0      	blx	sl
 8002d46:	3001      	adds	r0, #1
 8002d48:	d09b      	beq.n	8002c82 <_printf_i+0x166>
 8002d4a:	3501      	adds	r5, #1
 8002d4c:	68e3      	ldr	r3, [r4, #12]
 8002d4e:	9903      	ldr	r1, [sp, #12]
 8002d50:	1a5b      	subs	r3, r3, r1
 8002d52:	42ab      	cmp	r3, r5
 8002d54:	dcf2      	bgt.n	8002d3c <_printf_i+0x220>
 8002d56:	e7eb      	b.n	8002d30 <_printf_i+0x214>
 8002d58:	2500      	movs	r5, #0
 8002d5a:	f104 0619 	add.w	r6, r4, #25
 8002d5e:	e7f5      	b.n	8002d4c <_printf_i+0x230>
 8002d60:	08007b48 	.word	0x08007b48
 8002d64:	08007b59 	.word	0x08007b59

08002d68 <_scanf_float>:
 8002d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d6c:	b087      	sub	sp, #28
 8002d6e:	9303      	str	r3, [sp, #12]
 8002d70:	688b      	ldr	r3, [r1, #8]
 8002d72:	4617      	mov	r7, r2
 8002d74:	1e5a      	subs	r2, r3, #1
 8002d76:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002d7a:	bf85      	ittet	hi
 8002d7c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002d80:	195b      	addhi	r3, r3, r5
 8002d82:	2300      	movls	r3, #0
 8002d84:	9302      	strhi	r3, [sp, #8]
 8002d86:	bf88      	it	hi
 8002d88:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002d8c:	468b      	mov	fp, r1
 8002d8e:	f04f 0500 	mov.w	r5, #0
 8002d92:	bf8c      	ite	hi
 8002d94:	608b      	strhi	r3, [r1, #8]
 8002d96:	9302      	strls	r3, [sp, #8]
 8002d98:	680b      	ldr	r3, [r1, #0]
 8002d9a:	4680      	mov	r8, r0
 8002d9c:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002da0:	f84b 3b1c 	str.w	r3, [fp], #28
 8002da4:	460c      	mov	r4, r1
 8002da6:	465e      	mov	r6, fp
 8002da8:	46aa      	mov	sl, r5
 8002daa:	46a9      	mov	r9, r5
 8002dac:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002db0:	9501      	str	r5, [sp, #4]
 8002db2:	68a2      	ldr	r2, [r4, #8]
 8002db4:	b152      	cbz	r2, 8002dcc <_scanf_float+0x64>
 8002db6:	683b      	ldr	r3, [r7, #0]
 8002db8:	781b      	ldrb	r3, [r3, #0]
 8002dba:	2b4e      	cmp	r3, #78	; 0x4e
 8002dbc:	d864      	bhi.n	8002e88 <_scanf_float+0x120>
 8002dbe:	2b40      	cmp	r3, #64	; 0x40
 8002dc0:	d83c      	bhi.n	8002e3c <_scanf_float+0xd4>
 8002dc2:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002dc6:	b2c8      	uxtb	r0, r1
 8002dc8:	280e      	cmp	r0, #14
 8002dca:	d93a      	bls.n	8002e42 <_scanf_float+0xda>
 8002dcc:	f1b9 0f00 	cmp.w	r9, #0
 8002dd0:	d003      	beq.n	8002dda <_scanf_float+0x72>
 8002dd2:	6823      	ldr	r3, [r4, #0]
 8002dd4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002dd8:	6023      	str	r3, [r4, #0]
 8002dda:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002dde:	f1ba 0f01 	cmp.w	sl, #1
 8002de2:	f200 8113 	bhi.w	800300c <_scanf_float+0x2a4>
 8002de6:	455e      	cmp	r6, fp
 8002de8:	f200 8105 	bhi.w	8002ff6 <_scanf_float+0x28e>
 8002dec:	2501      	movs	r5, #1
 8002dee:	4628      	mov	r0, r5
 8002df0:	b007      	add	sp, #28
 8002df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002df6:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002dfa:	2a0d      	cmp	r2, #13
 8002dfc:	d8e6      	bhi.n	8002dcc <_scanf_float+0x64>
 8002dfe:	a101      	add	r1, pc, #4	; (adr r1, 8002e04 <_scanf_float+0x9c>)
 8002e00:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002e04:	08002f43 	.word	0x08002f43
 8002e08:	08002dcd 	.word	0x08002dcd
 8002e0c:	08002dcd 	.word	0x08002dcd
 8002e10:	08002dcd 	.word	0x08002dcd
 8002e14:	08002fa3 	.word	0x08002fa3
 8002e18:	08002f7b 	.word	0x08002f7b
 8002e1c:	08002dcd 	.word	0x08002dcd
 8002e20:	08002dcd 	.word	0x08002dcd
 8002e24:	08002f51 	.word	0x08002f51
 8002e28:	08002dcd 	.word	0x08002dcd
 8002e2c:	08002dcd 	.word	0x08002dcd
 8002e30:	08002dcd 	.word	0x08002dcd
 8002e34:	08002dcd 	.word	0x08002dcd
 8002e38:	08002f09 	.word	0x08002f09
 8002e3c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002e40:	e7db      	b.n	8002dfa <_scanf_float+0x92>
 8002e42:	290e      	cmp	r1, #14
 8002e44:	d8c2      	bhi.n	8002dcc <_scanf_float+0x64>
 8002e46:	a001      	add	r0, pc, #4	; (adr r0, 8002e4c <_scanf_float+0xe4>)
 8002e48:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002e4c:	08002efb 	.word	0x08002efb
 8002e50:	08002dcd 	.word	0x08002dcd
 8002e54:	08002efb 	.word	0x08002efb
 8002e58:	08002f8f 	.word	0x08002f8f
 8002e5c:	08002dcd 	.word	0x08002dcd
 8002e60:	08002ea9 	.word	0x08002ea9
 8002e64:	08002ee5 	.word	0x08002ee5
 8002e68:	08002ee5 	.word	0x08002ee5
 8002e6c:	08002ee5 	.word	0x08002ee5
 8002e70:	08002ee5 	.word	0x08002ee5
 8002e74:	08002ee5 	.word	0x08002ee5
 8002e78:	08002ee5 	.word	0x08002ee5
 8002e7c:	08002ee5 	.word	0x08002ee5
 8002e80:	08002ee5 	.word	0x08002ee5
 8002e84:	08002ee5 	.word	0x08002ee5
 8002e88:	2b6e      	cmp	r3, #110	; 0x6e
 8002e8a:	d809      	bhi.n	8002ea0 <_scanf_float+0x138>
 8002e8c:	2b60      	cmp	r3, #96	; 0x60
 8002e8e:	d8b2      	bhi.n	8002df6 <_scanf_float+0x8e>
 8002e90:	2b54      	cmp	r3, #84	; 0x54
 8002e92:	d077      	beq.n	8002f84 <_scanf_float+0x21c>
 8002e94:	2b59      	cmp	r3, #89	; 0x59
 8002e96:	d199      	bne.n	8002dcc <_scanf_float+0x64>
 8002e98:	2d07      	cmp	r5, #7
 8002e9a:	d197      	bne.n	8002dcc <_scanf_float+0x64>
 8002e9c:	2508      	movs	r5, #8
 8002e9e:	e029      	b.n	8002ef4 <_scanf_float+0x18c>
 8002ea0:	2b74      	cmp	r3, #116	; 0x74
 8002ea2:	d06f      	beq.n	8002f84 <_scanf_float+0x21c>
 8002ea4:	2b79      	cmp	r3, #121	; 0x79
 8002ea6:	e7f6      	b.n	8002e96 <_scanf_float+0x12e>
 8002ea8:	6821      	ldr	r1, [r4, #0]
 8002eaa:	05c8      	lsls	r0, r1, #23
 8002eac:	d51a      	bpl.n	8002ee4 <_scanf_float+0x17c>
 8002eae:	9b02      	ldr	r3, [sp, #8]
 8002eb0:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002eb4:	6021      	str	r1, [r4, #0]
 8002eb6:	f109 0901 	add.w	r9, r9, #1
 8002eba:	b11b      	cbz	r3, 8002ec4 <_scanf_float+0x15c>
 8002ebc:	3b01      	subs	r3, #1
 8002ebe:	3201      	adds	r2, #1
 8002ec0:	9302      	str	r3, [sp, #8]
 8002ec2:	60a2      	str	r2, [r4, #8]
 8002ec4:	68a3      	ldr	r3, [r4, #8]
 8002ec6:	3b01      	subs	r3, #1
 8002ec8:	60a3      	str	r3, [r4, #8]
 8002eca:	6923      	ldr	r3, [r4, #16]
 8002ecc:	3301      	adds	r3, #1
 8002ece:	6123      	str	r3, [r4, #16]
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	3b01      	subs	r3, #1
 8002ed4:	2b00      	cmp	r3, #0
 8002ed6:	607b      	str	r3, [r7, #4]
 8002ed8:	f340 8084 	ble.w	8002fe4 <_scanf_float+0x27c>
 8002edc:	683b      	ldr	r3, [r7, #0]
 8002ede:	3301      	adds	r3, #1
 8002ee0:	603b      	str	r3, [r7, #0]
 8002ee2:	e766      	b.n	8002db2 <_scanf_float+0x4a>
 8002ee4:	eb1a 0f05 	cmn.w	sl, r5
 8002ee8:	f47f af70 	bne.w	8002dcc <_scanf_float+0x64>
 8002eec:	6822      	ldr	r2, [r4, #0]
 8002eee:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8002ef2:	6022      	str	r2, [r4, #0]
 8002ef4:	f806 3b01 	strb.w	r3, [r6], #1
 8002ef8:	e7e4      	b.n	8002ec4 <_scanf_float+0x15c>
 8002efa:	6822      	ldr	r2, [r4, #0]
 8002efc:	0610      	lsls	r0, r2, #24
 8002efe:	f57f af65 	bpl.w	8002dcc <_scanf_float+0x64>
 8002f02:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002f06:	e7f4      	b.n	8002ef2 <_scanf_float+0x18a>
 8002f08:	f1ba 0f00 	cmp.w	sl, #0
 8002f0c:	d10e      	bne.n	8002f2c <_scanf_float+0x1c4>
 8002f0e:	f1b9 0f00 	cmp.w	r9, #0
 8002f12:	d10e      	bne.n	8002f32 <_scanf_float+0x1ca>
 8002f14:	6822      	ldr	r2, [r4, #0]
 8002f16:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002f1a:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002f1e:	d108      	bne.n	8002f32 <_scanf_float+0x1ca>
 8002f20:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002f24:	f04f 0a01 	mov.w	sl, #1
 8002f28:	6022      	str	r2, [r4, #0]
 8002f2a:	e7e3      	b.n	8002ef4 <_scanf_float+0x18c>
 8002f2c:	f1ba 0f02 	cmp.w	sl, #2
 8002f30:	d055      	beq.n	8002fde <_scanf_float+0x276>
 8002f32:	2d01      	cmp	r5, #1
 8002f34:	d002      	beq.n	8002f3c <_scanf_float+0x1d4>
 8002f36:	2d04      	cmp	r5, #4
 8002f38:	f47f af48 	bne.w	8002dcc <_scanf_float+0x64>
 8002f3c:	3501      	adds	r5, #1
 8002f3e:	b2ed      	uxtb	r5, r5
 8002f40:	e7d8      	b.n	8002ef4 <_scanf_float+0x18c>
 8002f42:	f1ba 0f01 	cmp.w	sl, #1
 8002f46:	f47f af41 	bne.w	8002dcc <_scanf_float+0x64>
 8002f4a:	f04f 0a02 	mov.w	sl, #2
 8002f4e:	e7d1      	b.n	8002ef4 <_scanf_float+0x18c>
 8002f50:	b97d      	cbnz	r5, 8002f72 <_scanf_float+0x20a>
 8002f52:	f1b9 0f00 	cmp.w	r9, #0
 8002f56:	f47f af3c 	bne.w	8002dd2 <_scanf_float+0x6a>
 8002f5a:	6822      	ldr	r2, [r4, #0]
 8002f5c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002f60:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002f64:	f47f af39 	bne.w	8002dda <_scanf_float+0x72>
 8002f68:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002f6c:	2501      	movs	r5, #1
 8002f6e:	6022      	str	r2, [r4, #0]
 8002f70:	e7c0      	b.n	8002ef4 <_scanf_float+0x18c>
 8002f72:	2d03      	cmp	r5, #3
 8002f74:	d0e2      	beq.n	8002f3c <_scanf_float+0x1d4>
 8002f76:	2d05      	cmp	r5, #5
 8002f78:	e7de      	b.n	8002f38 <_scanf_float+0x1d0>
 8002f7a:	2d02      	cmp	r5, #2
 8002f7c:	f47f af26 	bne.w	8002dcc <_scanf_float+0x64>
 8002f80:	2503      	movs	r5, #3
 8002f82:	e7b7      	b.n	8002ef4 <_scanf_float+0x18c>
 8002f84:	2d06      	cmp	r5, #6
 8002f86:	f47f af21 	bne.w	8002dcc <_scanf_float+0x64>
 8002f8a:	2507      	movs	r5, #7
 8002f8c:	e7b2      	b.n	8002ef4 <_scanf_float+0x18c>
 8002f8e:	6822      	ldr	r2, [r4, #0]
 8002f90:	0591      	lsls	r1, r2, #22
 8002f92:	f57f af1b 	bpl.w	8002dcc <_scanf_float+0x64>
 8002f96:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002f9a:	6022      	str	r2, [r4, #0]
 8002f9c:	f8cd 9004 	str.w	r9, [sp, #4]
 8002fa0:	e7a8      	b.n	8002ef4 <_scanf_float+0x18c>
 8002fa2:	6822      	ldr	r2, [r4, #0]
 8002fa4:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002fa8:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002fac:	d006      	beq.n	8002fbc <_scanf_float+0x254>
 8002fae:	0550      	lsls	r0, r2, #21
 8002fb0:	f57f af0c 	bpl.w	8002dcc <_scanf_float+0x64>
 8002fb4:	f1b9 0f00 	cmp.w	r9, #0
 8002fb8:	f43f af0f 	beq.w	8002dda <_scanf_float+0x72>
 8002fbc:	0591      	lsls	r1, r2, #22
 8002fbe:	bf58      	it	pl
 8002fc0:	9901      	ldrpl	r1, [sp, #4]
 8002fc2:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002fc6:	bf58      	it	pl
 8002fc8:	eba9 0101 	subpl.w	r1, r9, r1
 8002fcc:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8002fd0:	f04f 0900 	mov.w	r9, #0
 8002fd4:	bf58      	it	pl
 8002fd6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002fda:	6022      	str	r2, [r4, #0]
 8002fdc:	e78a      	b.n	8002ef4 <_scanf_float+0x18c>
 8002fde:	f04f 0a03 	mov.w	sl, #3
 8002fe2:	e787      	b.n	8002ef4 <_scanf_float+0x18c>
 8002fe4:	4639      	mov	r1, r7
 8002fe6:	4640      	mov	r0, r8
 8002fe8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002fec:	4798      	blx	r3
 8002fee:	2800      	cmp	r0, #0
 8002ff0:	f43f aedf 	beq.w	8002db2 <_scanf_float+0x4a>
 8002ff4:	e6ea      	b.n	8002dcc <_scanf_float+0x64>
 8002ff6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ffa:	463a      	mov	r2, r7
 8002ffc:	4640      	mov	r0, r8
 8002ffe:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003002:	4798      	blx	r3
 8003004:	6923      	ldr	r3, [r4, #16]
 8003006:	3b01      	subs	r3, #1
 8003008:	6123      	str	r3, [r4, #16]
 800300a:	e6ec      	b.n	8002de6 <_scanf_float+0x7e>
 800300c:	1e6b      	subs	r3, r5, #1
 800300e:	2b06      	cmp	r3, #6
 8003010:	d825      	bhi.n	800305e <_scanf_float+0x2f6>
 8003012:	2d02      	cmp	r5, #2
 8003014:	d836      	bhi.n	8003084 <_scanf_float+0x31c>
 8003016:	455e      	cmp	r6, fp
 8003018:	f67f aee8 	bls.w	8002dec <_scanf_float+0x84>
 800301c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003020:	463a      	mov	r2, r7
 8003022:	4640      	mov	r0, r8
 8003024:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003028:	4798      	blx	r3
 800302a:	6923      	ldr	r3, [r4, #16]
 800302c:	3b01      	subs	r3, #1
 800302e:	6123      	str	r3, [r4, #16]
 8003030:	e7f1      	b.n	8003016 <_scanf_float+0x2ae>
 8003032:	9802      	ldr	r0, [sp, #8]
 8003034:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003038:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800303c:	463a      	mov	r2, r7
 800303e:	9002      	str	r0, [sp, #8]
 8003040:	4640      	mov	r0, r8
 8003042:	4798      	blx	r3
 8003044:	6923      	ldr	r3, [r4, #16]
 8003046:	3b01      	subs	r3, #1
 8003048:	6123      	str	r3, [r4, #16]
 800304a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800304e:	fa5f fa8a 	uxtb.w	sl, sl
 8003052:	f1ba 0f02 	cmp.w	sl, #2
 8003056:	d1ec      	bne.n	8003032 <_scanf_float+0x2ca>
 8003058:	3d03      	subs	r5, #3
 800305a:	b2ed      	uxtb	r5, r5
 800305c:	1b76      	subs	r6, r6, r5
 800305e:	6823      	ldr	r3, [r4, #0]
 8003060:	05da      	lsls	r2, r3, #23
 8003062:	d52f      	bpl.n	80030c4 <_scanf_float+0x35c>
 8003064:	055b      	lsls	r3, r3, #21
 8003066:	d510      	bpl.n	800308a <_scanf_float+0x322>
 8003068:	455e      	cmp	r6, fp
 800306a:	f67f aebf 	bls.w	8002dec <_scanf_float+0x84>
 800306e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003072:	463a      	mov	r2, r7
 8003074:	4640      	mov	r0, r8
 8003076:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800307a:	4798      	blx	r3
 800307c:	6923      	ldr	r3, [r4, #16]
 800307e:	3b01      	subs	r3, #1
 8003080:	6123      	str	r3, [r4, #16]
 8003082:	e7f1      	b.n	8003068 <_scanf_float+0x300>
 8003084:	46aa      	mov	sl, r5
 8003086:	9602      	str	r6, [sp, #8]
 8003088:	e7df      	b.n	800304a <_scanf_float+0x2e2>
 800308a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800308e:	6923      	ldr	r3, [r4, #16]
 8003090:	2965      	cmp	r1, #101	; 0x65
 8003092:	f103 33ff 	add.w	r3, r3, #4294967295
 8003096:	f106 35ff 	add.w	r5, r6, #4294967295
 800309a:	6123      	str	r3, [r4, #16]
 800309c:	d00c      	beq.n	80030b8 <_scanf_float+0x350>
 800309e:	2945      	cmp	r1, #69	; 0x45
 80030a0:	d00a      	beq.n	80030b8 <_scanf_float+0x350>
 80030a2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80030a6:	463a      	mov	r2, r7
 80030a8:	4640      	mov	r0, r8
 80030aa:	4798      	blx	r3
 80030ac:	6923      	ldr	r3, [r4, #16]
 80030ae:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80030b2:	3b01      	subs	r3, #1
 80030b4:	1eb5      	subs	r5, r6, #2
 80030b6:	6123      	str	r3, [r4, #16]
 80030b8:	463a      	mov	r2, r7
 80030ba:	4640      	mov	r0, r8
 80030bc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80030c0:	4798      	blx	r3
 80030c2:	462e      	mov	r6, r5
 80030c4:	6825      	ldr	r5, [r4, #0]
 80030c6:	f015 0510 	ands.w	r5, r5, #16
 80030ca:	d155      	bne.n	8003178 <_scanf_float+0x410>
 80030cc:	7035      	strb	r5, [r6, #0]
 80030ce:	6823      	ldr	r3, [r4, #0]
 80030d0:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80030d4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80030d8:	d11b      	bne.n	8003112 <_scanf_float+0x3aa>
 80030da:	9b01      	ldr	r3, [sp, #4]
 80030dc:	454b      	cmp	r3, r9
 80030de:	eba3 0209 	sub.w	r2, r3, r9
 80030e2:	d123      	bne.n	800312c <_scanf_float+0x3c4>
 80030e4:	2200      	movs	r2, #0
 80030e6:	4659      	mov	r1, fp
 80030e8:	4640      	mov	r0, r8
 80030ea:	f000 ffe5 	bl	80040b8 <_strtod_r>
 80030ee:	6822      	ldr	r2, [r4, #0]
 80030f0:	9b03      	ldr	r3, [sp, #12]
 80030f2:	f012 0f02 	tst.w	r2, #2
 80030f6:	4606      	mov	r6, r0
 80030f8:	460f      	mov	r7, r1
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	d021      	beq.n	8003142 <_scanf_float+0x3da>
 80030fe:	1d1a      	adds	r2, r3, #4
 8003100:	9903      	ldr	r1, [sp, #12]
 8003102:	600a      	str	r2, [r1, #0]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	e9c3 6700 	strd	r6, r7, [r3]
 800310a:	68e3      	ldr	r3, [r4, #12]
 800310c:	3301      	adds	r3, #1
 800310e:	60e3      	str	r3, [r4, #12]
 8003110:	e66d      	b.n	8002dee <_scanf_float+0x86>
 8003112:	9b04      	ldr	r3, [sp, #16]
 8003114:	2b00      	cmp	r3, #0
 8003116:	d0e5      	beq.n	80030e4 <_scanf_float+0x37c>
 8003118:	9905      	ldr	r1, [sp, #20]
 800311a:	230a      	movs	r3, #10
 800311c:	462a      	mov	r2, r5
 800311e:	4640      	mov	r0, r8
 8003120:	3101      	adds	r1, #1
 8003122:	f001 f84b 	bl	80041bc <_strtol_r>
 8003126:	9b04      	ldr	r3, [sp, #16]
 8003128:	9e05      	ldr	r6, [sp, #20]
 800312a:	1ac2      	subs	r2, r0, r3
 800312c:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8003130:	429e      	cmp	r6, r3
 8003132:	bf28      	it	cs
 8003134:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8003138:	4630      	mov	r0, r6
 800313a:	4910      	ldr	r1, [pc, #64]	; (800317c <_scanf_float+0x414>)
 800313c:	f000 f992 	bl	8003464 <siprintf>
 8003140:	e7d0      	b.n	80030e4 <_scanf_float+0x37c>
 8003142:	f012 0f04 	tst.w	r2, #4
 8003146:	f103 0204 	add.w	r2, r3, #4
 800314a:	d1d9      	bne.n	8003100 <_scanf_float+0x398>
 800314c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8003150:	f8cc 2000 	str.w	r2, [ip]
 8003154:	f8d3 8000 	ldr.w	r8, [r3]
 8003158:	4602      	mov	r2, r0
 800315a:	460b      	mov	r3, r1
 800315c:	f7fd fcc2 	bl	8000ae4 <__aeabi_dcmpun>
 8003160:	b128      	cbz	r0, 800316e <_scanf_float+0x406>
 8003162:	4807      	ldr	r0, [pc, #28]	; (8003180 <_scanf_float+0x418>)
 8003164:	f000 f97a 	bl	800345c <nanf>
 8003168:	f8c8 0000 	str.w	r0, [r8]
 800316c:	e7cd      	b.n	800310a <_scanf_float+0x3a2>
 800316e:	4630      	mov	r0, r6
 8003170:	4639      	mov	r1, r7
 8003172:	f7fd fd15 	bl	8000ba0 <__aeabi_d2f>
 8003176:	e7f7      	b.n	8003168 <_scanf_float+0x400>
 8003178:	2500      	movs	r5, #0
 800317a:	e638      	b.n	8002dee <_scanf_float+0x86>
 800317c:	08007b6a 	.word	0x08007b6a
 8003180:	08007ff3 	.word	0x08007ff3

08003184 <iprintf>:
 8003184:	b40f      	push	{r0, r1, r2, r3}
 8003186:	4b0a      	ldr	r3, [pc, #40]	; (80031b0 <iprintf+0x2c>)
 8003188:	b513      	push	{r0, r1, r4, lr}
 800318a:	681c      	ldr	r4, [r3, #0]
 800318c:	b124      	cbz	r4, 8003198 <iprintf+0x14>
 800318e:	69a3      	ldr	r3, [r4, #24]
 8003190:	b913      	cbnz	r3, 8003198 <iprintf+0x14>
 8003192:	4620      	mov	r0, r4
 8003194:	f002 f876 	bl	8005284 <__sinit>
 8003198:	ab05      	add	r3, sp, #20
 800319a:	4620      	mov	r0, r4
 800319c:	9a04      	ldr	r2, [sp, #16]
 800319e:	68a1      	ldr	r1, [r4, #8]
 80031a0:	9301      	str	r3, [sp, #4]
 80031a2:	f003 fc5d 	bl	8006a60 <_vfiprintf_r>
 80031a6:	b002      	add	sp, #8
 80031a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80031ac:	b004      	add	sp, #16
 80031ae:	4770      	bx	lr
 80031b0:	2000000c 	.word	0x2000000c

080031b4 <_puts_r>:
 80031b4:	b570      	push	{r4, r5, r6, lr}
 80031b6:	460e      	mov	r6, r1
 80031b8:	4605      	mov	r5, r0
 80031ba:	b118      	cbz	r0, 80031c4 <_puts_r+0x10>
 80031bc:	6983      	ldr	r3, [r0, #24]
 80031be:	b90b      	cbnz	r3, 80031c4 <_puts_r+0x10>
 80031c0:	f002 f860 	bl	8005284 <__sinit>
 80031c4:	69ab      	ldr	r3, [r5, #24]
 80031c6:	68ac      	ldr	r4, [r5, #8]
 80031c8:	b913      	cbnz	r3, 80031d0 <_puts_r+0x1c>
 80031ca:	4628      	mov	r0, r5
 80031cc:	f002 f85a 	bl	8005284 <__sinit>
 80031d0:	4b2c      	ldr	r3, [pc, #176]	; (8003284 <_puts_r+0xd0>)
 80031d2:	429c      	cmp	r4, r3
 80031d4:	d120      	bne.n	8003218 <_puts_r+0x64>
 80031d6:	686c      	ldr	r4, [r5, #4]
 80031d8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80031da:	07db      	lsls	r3, r3, #31
 80031dc:	d405      	bmi.n	80031ea <_puts_r+0x36>
 80031de:	89a3      	ldrh	r3, [r4, #12]
 80031e0:	0598      	lsls	r0, r3, #22
 80031e2:	d402      	bmi.n	80031ea <_puts_r+0x36>
 80031e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80031e6:	f002 fc72 	bl	8005ace <__retarget_lock_acquire_recursive>
 80031ea:	89a3      	ldrh	r3, [r4, #12]
 80031ec:	0719      	lsls	r1, r3, #28
 80031ee:	d51d      	bpl.n	800322c <_puts_r+0x78>
 80031f0:	6923      	ldr	r3, [r4, #16]
 80031f2:	b1db      	cbz	r3, 800322c <_puts_r+0x78>
 80031f4:	3e01      	subs	r6, #1
 80031f6:	68a3      	ldr	r3, [r4, #8]
 80031f8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80031fc:	3b01      	subs	r3, #1
 80031fe:	60a3      	str	r3, [r4, #8]
 8003200:	bb39      	cbnz	r1, 8003252 <_puts_r+0x9e>
 8003202:	2b00      	cmp	r3, #0
 8003204:	da38      	bge.n	8003278 <_puts_r+0xc4>
 8003206:	4622      	mov	r2, r4
 8003208:	210a      	movs	r1, #10
 800320a:	4628      	mov	r0, r5
 800320c:	f000 ffd8 	bl	80041c0 <__swbuf_r>
 8003210:	3001      	adds	r0, #1
 8003212:	d011      	beq.n	8003238 <_puts_r+0x84>
 8003214:	250a      	movs	r5, #10
 8003216:	e011      	b.n	800323c <_puts_r+0x88>
 8003218:	4b1b      	ldr	r3, [pc, #108]	; (8003288 <_puts_r+0xd4>)
 800321a:	429c      	cmp	r4, r3
 800321c:	d101      	bne.n	8003222 <_puts_r+0x6e>
 800321e:	68ac      	ldr	r4, [r5, #8]
 8003220:	e7da      	b.n	80031d8 <_puts_r+0x24>
 8003222:	4b1a      	ldr	r3, [pc, #104]	; (800328c <_puts_r+0xd8>)
 8003224:	429c      	cmp	r4, r3
 8003226:	bf08      	it	eq
 8003228:	68ec      	ldreq	r4, [r5, #12]
 800322a:	e7d5      	b.n	80031d8 <_puts_r+0x24>
 800322c:	4621      	mov	r1, r4
 800322e:	4628      	mov	r0, r5
 8003230:	f001 f818 	bl	8004264 <__swsetup_r>
 8003234:	2800      	cmp	r0, #0
 8003236:	d0dd      	beq.n	80031f4 <_puts_r+0x40>
 8003238:	f04f 35ff 	mov.w	r5, #4294967295
 800323c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800323e:	07da      	lsls	r2, r3, #31
 8003240:	d405      	bmi.n	800324e <_puts_r+0x9a>
 8003242:	89a3      	ldrh	r3, [r4, #12]
 8003244:	059b      	lsls	r3, r3, #22
 8003246:	d402      	bmi.n	800324e <_puts_r+0x9a>
 8003248:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800324a:	f002 fc41 	bl	8005ad0 <__retarget_lock_release_recursive>
 800324e:	4628      	mov	r0, r5
 8003250:	bd70      	pop	{r4, r5, r6, pc}
 8003252:	2b00      	cmp	r3, #0
 8003254:	da04      	bge.n	8003260 <_puts_r+0xac>
 8003256:	69a2      	ldr	r2, [r4, #24]
 8003258:	429a      	cmp	r2, r3
 800325a:	dc06      	bgt.n	800326a <_puts_r+0xb6>
 800325c:	290a      	cmp	r1, #10
 800325e:	d004      	beq.n	800326a <_puts_r+0xb6>
 8003260:	6823      	ldr	r3, [r4, #0]
 8003262:	1c5a      	adds	r2, r3, #1
 8003264:	6022      	str	r2, [r4, #0]
 8003266:	7019      	strb	r1, [r3, #0]
 8003268:	e7c5      	b.n	80031f6 <_puts_r+0x42>
 800326a:	4622      	mov	r2, r4
 800326c:	4628      	mov	r0, r5
 800326e:	f000 ffa7 	bl	80041c0 <__swbuf_r>
 8003272:	3001      	adds	r0, #1
 8003274:	d1bf      	bne.n	80031f6 <_puts_r+0x42>
 8003276:	e7df      	b.n	8003238 <_puts_r+0x84>
 8003278:	250a      	movs	r5, #10
 800327a:	6823      	ldr	r3, [r4, #0]
 800327c:	1c5a      	adds	r2, r3, #1
 800327e:	6022      	str	r2, [r4, #0]
 8003280:	701d      	strb	r5, [r3, #0]
 8003282:	e7db      	b.n	800323c <_puts_r+0x88>
 8003284:	08007d74 	.word	0x08007d74
 8003288:	08007d94 	.word	0x08007d94
 800328c:	08007d54 	.word	0x08007d54

08003290 <puts>:
 8003290:	4b02      	ldr	r3, [pc, #8]	; (800329c <puts+0xc>)
 8003292:	4601      	mov	r1, r0
 8003294:	6818      	ldr	r0, [r3, #0]
 8003296:	f7ff bf8d 	b.w	80031b4 <_puts_r>
 800329a:	bf00      	nop
 800329c:	2000000c 	.word	0x2000000c

080032a0 <iscanf>:
 80032a0:	b40f      	push	{r0, r1, r2, r3}
 80032a2:	4b0a      	ldr	r3, [pc, #40]	; (80032cc <iscanf+0x2c>)
 80032a4:	b513      	push	{r0, r1, r4, lr}
 80032a6:	681c      	ldr	r4, [r3, #0]
 80032a8:	b124      	cbz	r4, 80032b4 <iscanf+0x14>
 80032aa:	69a3      	ldr	r3, [r4, #24]
 80032ac:	b913      	cbnz	r3, 80032b4 <iscanf+0x14>
 80032ae:	4620      	mov	r0, r4
 80032b0:	f001 ffe8 	bl	8005284 <__sinit>
 80032b4:	ab05      	add	r3, sp, #20
 80032b6:	4620      	mov	r0, r4
 80032b8:	9a04      	ldr	r2, [sp, #16]
 80032ba:	6861      	ldr	r1, [r4, #4]
 80032bc:	9301      	str	r3, [sp, #4]
 80032be:	f003 fea5 	bl	800700c <_vfiscanf_r>
 80032c2:	b002      	add	sp, #8
 80032c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80032c8:	b004      	add	sp, #16
 80032ca:	4770      	bx	lr
 80032cc:	2000000c 	.word	0x2000000c

080032d0 <setvbuf>:
 80032d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80032d4:	461d      	mov	r5, r3
 80032d6:	4b5d      	ldr	r3, [pc, #372]	; (800344c <setvbuf+0x17c>)
 80032d8:	4604      	mov	r4, r0
 80032da:	681f      	ldr	r7, [r3, #0]
 80032dc:	460e      	mov	r6, r1
 80032de:	4690      	mov	r8, r2
 80032e0:	b127      	cbz	r7, 80032ec <setvbuf+0x1c>
 80032e2:	69bb      	ldr	r3, [r7, #24]
 80032e4:	b913      	cbnz	r3, 80032ec <setvbuf+0x1c>
 80032e6:	4638      	mov	r0, r7
 80032e8:	f001 ffcc 	bl	8005284 <__sinit>
 80032ec:	4b58      	ldr	r3, [pc, #352]	; (8003450 <setvbuf+0x180>)
 80032ee:	429c      	cmp	r4, r3
 80032f0:	d167      	bne.n	80033c2 <setvbuf+0xf2>
 80032f2:	687c      	ldr	r4, [r7, #4]
 80032f4:	f1b8 0f02 	cmp.w	r8, #2
 80032f8:	d006      	beq.n	8003308 <setvbuf+0x38>
 80032fa:	f1b8 0f01 	cmp.w	r8, #1
 80032fe:	f200 809f 	bhi.w	8003440 <setvbuf+0x170>
 8003302:	2d00      	cmp	r5, #0
 8003304:	f2c0 809c 	blt.w	8003440 <setvbuf+0x170>
 8003308:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800330a:	07db      	lsls	r3, r3, #31
 800330c:	d405      	bmi.n	800331a <setvbuf+0x4a>
 800330e:	89a3      	ldrh	r3, [r4, #12]
 8003310:	0598      	lsls	r0, r3, #22
 8003312:	d402      	bmi.n	800331a <setvbuf+0x4a>
 8003314:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003316:	f002 fbda 	bl	8005ace <__retarget_lock_acquire_recursive>
 800331a:	4621      	mov	r1, r4
 800331c:	4638      	mov	r0, r7
 800331e:	f001 ff0b 	bl	8005138 <_fflush_r>
 8003322:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003324:	b141      	cbz	r1, 8003338 <setvbuf+0x68>
 8003326:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800332a:	4299      	cmp	r1, r3
 800332c:	d002      	beq.n	8003334 <setvbuf+0x64>
 800332e:	4638      	mov	r0, r7
 8003330:	f003 f936 	bl	80065a0 <_free_r>
 8003334:	2300      	movs	r3, #0
 8003336:	6363      	str	r3, [r4, #52]	; 0x34
 8003338:	2300      	movs	r3, #0
 800333a:	61a3      	str	r3, [r4, #24]
 800333c:	6063      	str	r3, [r4, #4]
 800333e:	89a3      	ldrh	r3, [r4, #12]
 8003340:	0619      	lsls	r1, r3, #24
 8003342:	d503      	bpl.n	800334c <setvbuf+0x7c>
 8003344:	4638      	mov	r0, r7
 8003346:	6921      	ldr	r1, [r4, #16]
 8003348:	f003 f92a 	bl	80065a0 <_free_r>
 800334c:	89a3      	ldrh	r3, [r4, #12]
 800334e:	f1b8 0f02 	cmp.w	r8, #2
 8003352:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 8003356:	f023 0303 	bic.w	r3, r3, #3
 800335a:	81a3      	strh	r3, [r4, #12]
 800335c:	d06c      	beq.n	8003438 <setvbuf+0x168>
 800335e:	ab01      	add	r3, sp, #4
 8003360:	466a      	mov	r2, sp
 8003362:	4621      	mov	r1, r4
 8003364:	4638      	mov	r0, r7
 8003366:	f002 fbb4 	bl	8005ad2 <__swhatbuf_r>
 800336a:	89a3      	ldrh	r3, [r4, #12]
 800336c:	4318      	orrs	r0, r3
 800336e:	81a0      	strh	r0, [r4, #12]
 8003370:	2d00      	cmp	r5, #0
 8003372:	d130      	bne.n	80033d6 <setvbuf+0x106>
 8003374:	9d00      	ldr	r5, [sp, #0]
 8003376:	4628      	mov	r0, r5
 8003378:	f002 fc10 	bl	8005b9c <malloc>
 800337c:	4606      	mov	r6, r0
 800337e:	2800      	cmp	r0, #0
 8003380:	d155      	bne.n	800342e <setvbuf+0x15e>
 8003382:	f8dd 9000 	ldr.w	r9, [sp]
 8003386:	45a9      	cmp	r9, r5
 8003388:	d14a      	bne.n	8003420 <setvbuf+0x150>
 800338a:	f04f 35ff 	mov.w	r5, #4294967295
 800338e:	2200      	movs	r2, #0
 8003390:	60a2      	str	r2, [r4, #8]
 8003392:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8003396:	6022      	str	r2, [r4, #0]
 8003398:	6122      	str	r2, [r4, #16]
 800339a:	2201      	movs	r2, #1
 800339c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80033a0:	6162      	str	r2, [r4, #20]
 80033a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80033a4:	f043 0302 	orr.w	r3, r3, #2
 80033a8:	07d2      	lsls	r2, r2, #31
 80033aa:	81a3      	strh	r3, [r4, #12]
 80033ac:	d405      	bmi.n	80033ba <setvbuf+0xea>
 80033ae:	f413 7f00 	tst.w	r3, #512	; 0x200
 80033b2:	d102      	bne.n	80033ba <setvbuf+0xea>
 80033b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80033b6:	f002 fb8b 	bl	8005ad0 <__retarget_lock_release_recursive>
 80033ba:	4628      	mov	r0, r5
 80033bc:	b003      	add	sp, #12
 80033be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80033c2:	4b24      	ldr	r3, [pc, #144]	; (8003454 <setvbuf+0x184>)
 80033c4:	429c      	cmp	r4, r3
 80033c6:	d101      	bne.n	80033cc <setvbuf+0xfc>
 80033c8:	68bc      	ldr	r4, [r7, #8]
 80033ca:	e793      	b.n	80032f4 <setvbuf+0x24>
 80033cc:	4b22      	ldr	r3, [pc, #136]	; (8003458 <setvbuf+0x188>)
 80033ce:	429c      	cmp	r4, r3
 80033d0:	bf08      	it	eq
 80033d2:	68fc      	ldreq	r4, [r7, #12]
 80033d4:	e78e      	b.n	80032f4 <setvbuf+0x24>
 80033d6:	2e00      	cmp	r6, #0
 80033d8:	d0cd      	beq.n	8003376 <setvbuf+0xa6>
 80033da:	69bb      	ldr	r3, [r7, #24]
 80033dc:	b913      	cbnz	r3, 80033e4 <setvbuf+0x114>
 80033de:	4638      	mov	r0, r7
 80033e0:	f001 ff50 	bl	8005284 <__sinit>
 80033e4:	f1b8 0f01 	cmp.w	r8, #1
 80033e8:	bf08      	it	eq
 80033ea:	89a3      	ldrheq	r3, [r4, #12]
 80033ec:	e9c4 6504 	strd	r6, r5, [r4, #16]
 80033f0:	bf04      	itt	eq
 80033f2:	f043 0301 	orreq.w	r3, r3, #1
 80033f6:	81a3      	strheq	r3, [r4, #12]
 80033f8:	89a2      	ldrh	r2, [r4, #12]
 80033fa:	6026      	str	r6, [r4, #0]
 80033fc:	f012 0308 	ands.w	r3, r2, #8
 8003400:	d01c      	beq.n	800343c <setvbuf+0x16c>
 8003402:	07d3      	lsls	r3, r2, #31
 8003404:	bf41      	itttt	mi
 8003406:	2300      	movmi	r3, #0
 8003408:	426d      	negmi	r5, r5
 800340a:	60a3      	strmi	r3, [r4, #8]
 800340c:	61a5      	strmi	r5, [r4, #24]
 800340e:	bf58      	it	pl
 8003410:	60a5      	strpl	r5, [r4, #8]
 8003412:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8003414:	f015 0501 	ands.w	r5, r5, #1
 8003418:	d115      	bne.n	8003446 <setvbuf+0x176>
 800341a:	f412 7f00 	tst.w	r2, #512	; 0x200
 800341e:	e7c8      	b.n	80033b2 <setvbuf+0xe2>
 8003420:	4648      	mov	r0, r9
 8003422:	f002 fbbb 	bl	8005b9c <malloc>
 8003426:	4606      	mov	r6, r0
 8003428:	2800      	cmp	r0, #0
 800342a:	d0ae      	beq.n	800338a <setvbuf+0xba>
 800342c:	464d      	mov	r5, r9
 800342e:	89a3      	ldrh	r3, [r4, #12]
 8003430:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003434:	81a3      	strh	r3, [r4, #12]
 8003436:	e7d0      	b.n	80033da <setvbuf+0x10a>
 8003438:	2500      	movs	r5, #0
 800343a:	e7a8      	b.n	800338e <setvbuf+0xbe>
 800343c:	60a3      	str	r3, [r4, #8]
 800343e:	e7e8      	b.n	8003412 <setvbuf+0x142>
 8003440:	f04f 35ff 	mov.w	r5, #4294967295
 8003444:	e7b9      	b.n	80033ba <setvbuf+0xea>
 8003446:	2500      	movs	r5, #0
 8003448:	e7b7      	b.n	80033ba <setvbuf+0xea>
 800344a:	bf00      	nop
 800344c:	2000000c 	.word	0x2000000c
 8003450:	08007d74 	.word	0x08007d74
 8003454:	08007d94 	.word	0x08007d94
 8003458:	08007d54 	.word	0x08007d54

0800345c <nanf>:
 800345c:	4800      	ldr	r0, [pc, #0]	; (8003460 <nanf+0x4>)
 800345e:	4770      	bx	lr
 8003460:	7fc00000 	.word	0x7fc00000

08003464 <siprintf>:
 8003464:	b40e      	push	{r1, r2, r3}
 8003466:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800346a:	b500      	push	{lr}
 800346c:	b09c      	sub	sp, #112	; 0x70
 800346e:	ab1d      	add	r3, sp, #116	; 0x74
 8003470:	9002      	str	r0, [sp, #8]
 8003472:	9006      	str	r0, [sp, #24]
 8003474:	9107      	str	r1, [sp, #28]
 8003476:	9104      	str	r1, [sp, #16]
 8003478:	4808      	ldr	r0, [pc, #32]	; (800349c <siprintf+0x38>)
 800347a:	4909      	ldr	r1, [pc, #36]	; (80034a0 <siprintf+0x3c>)
 800347c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003480:	9105      	str	r1, [sp, #20]
 8003482:	6800      	ldr	r0, [r0, #0]
 8003484:	a902      	add	r1, sp, #8
 8003486:	9301      	str	r3, [sp, #4]
 8003488:	f003 f9c2 	bl	8006810 <_svfiprintf_r>
 800348c:	2200      	movs	r2, #0
 800348e:	9b02      	ldr	r3, [sp, #8]
 8003490:	701a      	strb	r2, [r3, #0]
 8003492:	b01c      	add	sp, #112	; 0x70
 8003494:	f85d eb04 	ldr.w	lr, [sp], #4
 8003498:	b003      	add	sp, #12
 800349a:	4770      	bx	lr
 800349c:	2000000c 	.word	0x2000000c
 80034a0:	ffff0208 	.word	0xffff0208

080034a4 <sulp>:
 80034a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034a8:	460f      	mov	r7, r1
 80034aa:	4690      	mov	r8, r2
 80034ac:	f002 ff1c 	bl	80062e8 <__ulp>
 80034b0:	4604      	mov	r4, r0
 80034b2:	460d      	mov	r5, r1
 80034b4:	f1b8 0f00 	cmp.w	r8, #0
 80034b8:	d011      	beq.n	80034de <sulp+0x3a>
 80034ba:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80034be:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80034c2:	2b00      	cmp	r3, #0
 80034c4:	dd0b      	ble.n	80034de <sulp+0x3a>
 80034c6:	2400      	movs	r4, #0
 80034c8:	051b      	lsls	r3, r3, #20
 80034ca:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80034ce:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80034d2:	4622      	mov	r2, r4
 80034d4:	462b      	mov	r3, r5
 80034d6:	f7fd f86b 	bl	80005b0 <__aeabi_dmul>
 80034da:	4604      	mov	r4, r0
 80034dc:	460d      	mov	r5, r1
 80034de:	4620      	mov	r0, r4
 80034e0:	4629      	mov	r1, r5
 80034e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080034e8 <_strtod_l>:
 80034e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034ec:	469b      	mov	fp, r3
 80034ee:	2300      	movs	r3, #0
 80034f0:	b09f      	sub	sp, #124	; 0x7c
 80034f2:	931a      	str	r3, [sp, #104]	; 0x68
 80034f4:	4b9e      	ldr	r3, [pc, #632]	; (8003770 <_strtod_l+0x288>)
 80034f6:	4682      	mov	sl, r0
 80034f8:	681f      	ldr	r7, [r3, #0]
 80034fa:	460e      	mov	r6, r1
 80034fc:	4638      	mov	r0, r7
 80034fe:	9215      	str	r2, [sp, #84]	; 0x54
 8003500:	f7fc fe92 	bl	8000228 <strlen>
 8003504:	f04f 0800 	mov.w	r8, #0
 8003508:	4604      	mov	r4, r0
 800350a:	f04f 0900 	mov.w	r9, #0
 800350e:	9619      	str	r6, [sp, #100]	; 0x64
 8003510:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003512:	781a      	ldrb	r2, [r3, #0]
 8003514:	2a2b      	cmp	r2, #43	; 0x2b
 8003516:	d04c      	beq.n	80035b2 <_strtod_l+0xca>
 8003518:	d83a      	bhi.n	8003590 <_strtod_l+0xa8>
 800351a:	2a0d      	cmp	r2, #13
 800351c:	d833      	bhi.n	8003586 <_strtod_l+0x9e>
 800351e:	2a08      	cmp	r2, #8
 8003520:	d833      	bhi.n	800358a <_strtod_l+0xa2>
 8003522:	2a00      	cmp	r2, #0
 8003524:	d03d      	beq.n	80035a2 <_strtod_l+0xba>
 8003526:	2300      	movs	r3, #0
 8003528:	930a      	str	r3, [sp, #40]	; 0x28
 800352a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800352c:	782b      	ldrb	r3, [r5, #0]
 800352e:	2b30      	cmp	r3, #48	; 0x30
 8003530:	f040 80aa 	bne.w	8003688 <_strtod_l+0x1a0>
 8003534:	786b      	ldrb	r3, [r5, #1]
 8003536:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800353a:	2b58      	cmp	r3, #88	; 0x58
 800353c:	d166      	bne.n	800360c <_strtod_l+0x124>
 800353e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003540:	4650      	mov	r0, sl
 8003542:	9301      	str	r3, [sp, #4]
 8003544:	ab1a      	add	r3, sp, #104	; 0x68
 8003546:	9300      	str	r3, [sp, #0]
 8003548:	4a8a      	ldr	r2, [pc, #552]	; (8003774 <_strtod_l+0x28c>)
 800354a:	f8cd b008 	str.w	fp, [sp, #8]
 800354e:	ab1b      	add	r3, sp, #108	; 0x6c
 8003550:	a919      	add	r1, sp, #100	; 0x64
 8003552:	f001 ffb9 	bl	80054c8 <__gethex>
 8003556:	f010 0607 	ands.w	r6, r0, #7
 800355a:	4604      	mov	r4, r0
 800355c:	d005      	beq.n	800356a <_strtod_l+0x82>
 800355e:	2e06      	cmp	r6, #6
 8003560:	d129      	bne.n	80035b6 <_strtod_l+0xce>
 8003562:	2300      	movs	r3, #0
 8003564:	3501      	adds	r5, #1
 8003566:	9519      	str	r5, [sp, #100]	; 0x64
 8003568:	930a      	str	r3, [sp, #40]	; 0x28
 800356a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800356c:	2b00      	cmp	r3, #0
 800356e:	f040 858a 	bne.w	8004086 <_strtod_l+0xb9e>
 8003572:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003574:	b1d3      	cbz	r3, 80035ac <_strtod_l+0xc4>
 8003576:	4642      	mov	r2, r8
 8003578:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800357c:	4610      	mov	r0, r2
 800357e:	4619      	mov	r1, r3
 8003580:	b01f      	add	sp, #124	; 0x7c
 8003582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003586:	2a20      	cmp	r2, #32
 8003588:	d1cd      	bne.n	8003526 <_strtod_l+0x3e>
 800358a:	3301      	adds	r3, #1
 800358c:	9319      	str	r3, [sp, #100]	; 0x64
 800358e:	e7bf      	b.n	8003510 <_strtod_l+0x28>
 8003590:	2a2d      	cmp	r2, #45	; 0x2d
 8003592:	d1c8      	bne.n	8003526 <_strtod_l+0x3e>
 8003594:	2201      	movs	r2, #1
 8003596:	920a      	str	r2, [sp, #40]	; 0x28
 8003598:	1c5a      	adds	r2, r3, #1
 800359a:	9219      	str	r2, [sp, #100]	; 0x64
 800359c:	785b      	ldrb	r3, [r3, #1]
 800359e:	2b00      	cmp	r3, #0
 80035a0:	d1c3      	bne.n	800352a <_strtod_l+0x42>
 80035a2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80035a4:	9619      	str	r6, [sp, #100]	; 0x64
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	f040 856b 	bne.w	8004082 <_strtod_l+0xb9a>
 80035ac:	4642      	mov	r2, r8
 80035ae:	464b      	mov	r3, r9
 80035b0:	e7e4      	b.n	800357c <_strtod_l+0x94>
 80035b2:	2200      	movs	r2, #0
 80035b4:	e7ef      	b.n	8003596 <_strtod_l+0xae>
 80035b6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80035b8:	b13a      	cbz	r2, 80035ca <_strtod_l+0xe2>
 80035ba:	2135      	movs	r1, #53	; 0x35
 80035bc:	a81c      	add	r0, sp, #112	; 0x70
 80035be:	f002 ff97 	bl	80064f0 <__copybits>
 80035c2:	4650      	mov	r0, sl
 80035c4:	991a      	ldr	r1, [sp, #104]	; 0x68
 80035c6:	f002 fb5f 	bl	8005c88 <_Bfree>
 80035ca:	3e01      	subs	r6, #1
 80035cc:	2e04      	cmp	r6, #4
 80035ce:	d806      	bhi.n	80035de <_strtod_l+0xf6>
 80035d0:	e8df f006 	tbb	[pc, r6]
 80035d4:	1714030a 	.word	0x1714030a
 80035d8:	0a          	.byte	0x0a
 80035d9:	00          	.byte	0x00
 80035da:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 80035de:	0721      	lsls	r1, r4, #28
 80035e0:	d5c3      	bpl.n	800356a <_strtod_l+0x82>
 80035e2:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 80035e6:	e7c0      	b.n	800356a <_strtod_l+0x82>
 80035e8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80035ea:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 80035ee:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80035f2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80035f6:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 80035fa:	e7f0      	b.n	80035de <_strtod_l+0xf6>
 80035fc:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8003778 <_strtod_l+0x290>
 8003600:	e7ed      	b.n	80035de <_strtod_l+0xf6>
 8003602:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8003606:	f04f 38ff 	mov.w	r8, #4294967295
 800360a:	e7e8      	b.n	80035de <_strtod_l+0xf6>
 800360c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800360e:	1c5a      	adds	r2, r3, #1
 8003610:	9219      	str	r2, [sp, #100]	; 0x64
 8003612:	785b      	ldrb	r3, [r3, #1]
 8003614:	2b30      	cmp	r3, #48	; 0x30
 8003616:	d0f9      	beq.n	800360c <_strtod_l+0x124>
 8003618:	2b00      	cmp	r3, #0
 800361a:	d0a6      	beq.n	800356a <_strtod_l+0x82>
 800361c:	2301      	movs	r3, #1
 800361e:	9307      	str	r3, [sp, #28]
 8003620:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003622:	220a      	movs	r2, #10
 8003624:	9308      	str	r3, [sp, #32]
 8003626:	2300      	movs	r3, #0
 8003628:	469b      	mov	fp, r3
 800362a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800362e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003630:	7805      	ldrb	r5, [r0, #0]
 8003632:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8003636:	b2d9      	uxtb	r1, r3
 8003638:	2909      	cmp	r1, #9
 800363a:	d927      	bls.n	800368c <_strtod_l+0x1a4>
 800363c:	4622      	mov	r2, r4
 800363e:	4639      	mov	r1, r7
 8003640:	f003 ff85 	bl	800754e <strncmp>
 8003644:	2800      	cmp	r0, #0
 8003646:	d033      	beq.n	80036b0 <_strtod_l+0x1c8>
 8003648:	2000      	movs	r0, #0
 800364a:	462a      	mov	r2, r5
 800364c:	465c      	mov	r4, fp
 800364e:	4603      	mov	r3, r0
 8003650:	9004      	str	r0, [sp, #16]
 8003652:	2a65      	cmp	r2, #101	; 0x65
 8003654:	d001      	beq.n	800365a <_strtod_l+0x172>
 8003656:	2a45      	cmp	r2, #69	; 0x45
 8003658:	d114      	bne.n	8003684 <_strtod_l+0x19c>
 800365a:	b91c      	cbnz	r4, 8003664 <_strtod_l+0x17c>
 800365c:	9a07      	ldr	r2, [sp, #28]
 800365e:	4302      	orrs	r2, r0
 8003660:	d09f      	beq.n	80035a2 <_strtod_l+0xba>
 8003662:	2400      	movs	r4, #0
 8003664:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8003666:	1c72      	adds	r2, r6, #1
 8003668:	9219      	str	r2, [sp, #100]	; 0x64
 800366a:	7872      	ldrb	r2, [r6, #1]
 800366c:	2a2b      	cmp	r2, #43	; 0x2b
 800366e:	d079      	beq.n	8003764 <_strtod_l+0x27c>
 8003670:	2a2d      	cmp	r2, #45	; 0x2d
 8003672:	f000 8083 	beq.w	800377c <_strtod_l+0x294>
 8003676:	2700      	movs	r7, #0
 8003678:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800367c:	2909      	cmp	r1, #9
 800367e:	f240 8083 	bls.w	8003788 <_strtod_l+0x2a0>
 8003682:	9619      	str	r6, [sp, #100]	; 0x64
 8003684:	2500      	movs	r5, #0
 8003686:	e09f      	b.n	80037c8 <_strtod_l+0x2e0>
 8003688:	2300      	movs	r3, #0
 800368a:	e7c8      	b.n	800361e <_strtod_l+0x136>
 800368c:	f1bb 0f08 	cmp.w	fp, #8
 8003690:	bfd5      	itete	le
 8003692:	9906      	ldrle	r1, [sp, #24]
 8003694:	9905      	ldrgt	r1, [sp, #20]
 8003696:	fb02 3301 	mlale	r3, r2, r1, r3
 800369a:	fb02 3301 	mlagt	r3, r2, r1, r3
 800369e:	f100 0001 	add.w	r0, r0, #1
 80036a2:	bfd4      	ite	le
 80036a4:	9306      	strle	r3, [sp, #24]
 80036a6:	9305      	strgt	r3, [sp, #20]
 80036a8:	f10b 0b01 	add.w	fp, fp, #1
 80036ac:	9019      	str	r0, [sp, #100]	; 0x64
 80036ae:	e7be      	b.n	800362e <_strtod_l+0x146>
 80036b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80036b2:	191a      	adds	r2, r3, r4
 80036b4:	9219      	str	r2, [sp, #100]	; 0x64
 80036b6:	5d1a      	ldrb	r2, [r3, r4]
 80036b8:	f1bb 0f00 	cmp.w	fp, #0
 80036bc:	d036      	beq.n	800372c <_strtod_l+0x244>
 80036be:	465c      	mov	r4, fp
 80036c0:	9004      	str	r0, [sp, #16]
 80036c2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80036c6:	2b09      	cmp	r3, #9
 80036c8:	d912      	bls.n	80036f0 <_strtod_l+0x208>
 80036ca:	2301      	movs	r3, #1
 80036cc:	e7c1      	b.n	8003652 <_strtod_l+0x16a>
 80036ce:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80036d0:	3001      	adds	r0, #1
 80036d2:	1c5a      	adds	r2, r3, #1
 80036d4:	9219      	str	r2, [sp, #100]	; 0x64
 80036d6:	785a      	ldrb	r2, [r3, #1]
 80036d8:	2a30      	cmp	r2, #48	; 0x30
 80036da:	d0f8      	beq.n	80036ce <_strtod_l+0x1e6>
 80036dc:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 80036e0:	2b08      	cmp	r3, #8
 80036e2:	f200 84d5 	bhi.w	8004090 <_strtod_l+0xba8>
 80036e6:	9004      	str	r0, [sp, #16]
 80036e8:	2000      	movs	r0, #0
 80036ea:	4604      	mov	r4, r0
 80036ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80036ee:	9308      	str	r3, [sp, #32]
 80036f0:	3a30      	subs	r2, #48	; 0x30
 80036f2:	f100 0301 	add.w	r3, r0, #1
 80036f6:	d013      	beq.n	8003720 <_strtod_l+0x238>
 80036f8:	9904      	ldr	r1, [sp, #16]
 80036fa:	1905      	adds	r5, r0, r4
 80036fc:	4419      	add	r1, r3
 80036fe:	9104      	str	r1, [sp, #16]
 8003700:	4623      	mov	r3, r4
 8003702:	210a      	movs	r1, #10
 8003704:	42ab      	cmp	r3, r5
 8003706:	d113      	bne.n	8003730 <_strtod_l+0x248>
 8003708:	1823      	adds	r3, r4, r0
 800370a:	2b08      	cmp	r3, #8
 800370c:	f104 0401 	add.w	r4, r4, #1
 8003710:	4404      	add	r4, r0
 8003712:	dc1b      	bgt.n	800374c <_strtod_l+0x264>
 8003714:	230a      	movs	r3, #10
 8003716:	9906      	ldr	r1, [sp, #24]
 8003718:	fb03 2301 	mla	r3, r3, r1, r2
 800371c:	9306      	str	r3, [sp, #24]
 800371e:	2300      	movs	r3, #0
 8003720:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003722:	4618      	mov	r0, r3
 8003724:	1c51      	adds	r1, r2, #1
 8003726:	9119      	str	r1, [sp, #100]	; 0x64
 8003728:	7852      	ldrb	r2, [r2, #1]
 800372a:	e7ca      	b.n	80036c2 <_strtod_l+0x1da>
 800372c:	4658      	mov	r0, fp
 800372e:	e7d3      	b.n	80036d8 <_strtod_l+0x1f0>
 8003730:	2b08      	cmp	r3, #8
 8003732:	dc04      	bgt.n	800373e <_strtod_l+0x256>
 8003734:	9f06      	ldr	r7, [sp, #24]
 8003736:	434f      	muls	r7, r1
 8003738:	9706      	str	r7, [sp, #24]
 800373a:	3301      	adds	r3, #1
 800373c:	e7e2      	b.n	8003704 <_strtod_l+0x21c>
 800373e:	1c5f      	adds	r7, r3, #1
 8003740:	2f10      	cmp	r7, #16
 8003742:	bfde      	ittt	le
 8003744:	9f05      	ldrle	r7, [sp, #20]
 8003746:	434f      	mulle	r7, r1
 8003748:	9705      	strle	r7, [sp, #20]
 800374a:	e7f6      	b.n	800373a <_strtod_l+0x252>
 800374c:	2c10      	cmp	r4, #16
 800374e:	bfdf      	itttt	le
 8003750:	230a      	movle	r3, #10
 8003752:	9905      	ldrle	r1, [sp, #20]
 8003754:	fb03 2301 	mlale	r3, r3, r1, r2
 8003758:	9305      	strle	r3, [sp, #20]
 800375a:	e7e0      	b.n	800371e <_strtod_l+0x236>
 800375c:	2300      	movs	r3, #0
 800375e:	9304      	str	r3, [sp, #16]
 8003760:	2301      	movs	r3, #1
 8003762:	e77b      	b.n	800365c <_strtod_l+0x174>
 8003764:	2700      	movs	r7, #0
 8003766:	1cb2      	adds	r2, r6, #2
 8003768:	9219      	str	r2, [sp, #100]	; 0x64
 800376a:	78b2      	ldrb	r2, [r6, #2]
 800376c:	e784      	b.n	8003678 <_strtod_l+0x190>
 800376e:	bf00      	nop
 8003770:	08007e1c 	.word	0x08007e1c
 8003774:	08007b70 	.word	0x08007b70
 8003778:	7ff00000 	.word	0x7ff00000
 800377c:	2701      	movs	r7, #1
 800377e:	e7f2      	b.n	8003766 <_strtod_l+0x27e>
 8003780:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003782:	1c51      	adds	r1, r2, #1
 8003784:	9119      	str	r1, [sp, #100]	; 0x64
 8003786:	7852      	ldrb	r2, [r2, #1]
 8003788:	2a30      	cmp	r2, #48	; 0x30
 800378a:	d0f9      	beq.n	8003780 <_strtod_l+0x298>
 800378c:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8003790:	2908      	cmp	r1, #8
 8003792:	f63f af77 	bhi.w	8003684 <_strtod_l+0x19c>
 8003796:	f04f 0e0a 	mov.w	lr, #10
 800379a:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 800379e:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80037a0:	9209      	str	r2, [sp, #36]	; 0x24
 80037a2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80037a4:	1c51      	adds	r1, r2, #1
 80037a6:	9119      	str	r1, [sp, #100]	; 0x64
 80037a8:	7852      	ldrb	r2, [r2, #1]
 80037aa:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 80037ae:	2d09      	cmp	r5, #9
 80037b0:	d935      	bls.n	800381e <_strtod_l+0x336>
 80037b2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80037b4:	1b49      	subs	r1, r1, r5
 80037b6:	2908      	cmp	r1, #8
 80037b8:	f644 651f 	movw	r5, #19999	; 0x4e1f
 80037bc:	dc02      	bgt.n	80037c4 <_strtod_l+0x2dc>
 80037be:	4565      	cmp	r5, ip
 80037c0:	bfa8      	it	ge
 80037c2:	4665      	movge	r5, ip
 80037c4:	b107      	cbz	r7, 80037c8 <_strtod_l+0x2e0>
 80037c6:	426d      	negs	r5, r5
 80037c8:	2c00      	cmp	r4, #0
 80037ca:	d14c      	bne.n	8003866 <_strtod_l+0x37e>
 80037cc:	9907      	ldr	r1, [sp, #28]
 80037ce:	4301      	orrs	r1, r0
 80037d0:	f47f aecb 	bne.w	800356a <_strtod_l+0x82>
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	f47f aee4 	bne.w	80035a2 <_strtod_l+0xba>
 80037da:	2a69      	cmp	r2, #105	; 0x69
 80037dc:	d026      	beq.n	800382c <_strtod_l+0x344>
 80037de:	dc23      	bgt.n	8003828 <_strtod_l+0x340>
 80037e0:	2a49      	cmp	r2, #73	; 0x49
 80037e2:	d023      	beq.n	800382c <_strtod_l+0x344>
 80037e4:	2a4e      	cmp	r2, #78	; 0x4e
 80037e6:	f47f aedc 	bne.w	80035a2 <_strtod_l+0xba>
 80037ea:	499d      	ldr	r1, [pc, #628]	; (8003a60 <_strtod_l+0x578>)
 80037ec:	a819      	add	r0, sp, #100	; 0x64
 80037ee:	f002 f8b9 	bl	8005964 <__match>
 80037f2:	2800      	cmp	r0, #0
 80037f4:	f43f aed5 	beq.w	80035a2 <_strtod_l+0xba>
 80037f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80037fa:	781b      	ldrb	r3, [r3, #0]
 80037fc:	2b28      	cmp	r3, #40	; 0x28
 80037fe:	d12c      	bne.n	800385a <_strtod_l+0x372>
 8003800:	4998      	ldr	r1, [pc, #608]	; (8003a64 <_strtod_l+0x57c>)
 8003802:	aa1c      	add	r2, sp, #112	; 0x70
 8003804:	a819      	add	r0, sp, #100	; 0x64
 8003806:	f002 f8c1 	bl	800598c <__hexnan>
 800380a:	2805      	cmp	r0, #5
 800380c:	d125      	bne.n	800385a <_strtod_l+0x372>
 800380e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003810:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8003814:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8003818:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800381c:	e6a5      	b.n	800356a <_strtod_l+0x82>
 800381e:	fb0e 2c0c 	mla	ip, lr, ip, r2
 8003822:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 8003826:	e7bc      	b.n	80037a2 <_strtod_l+0x2ba>
 8003828:	2a6e      	cmp	r2, #110	; 0x6e
 800382a:	e7dc      	b.n	80037e6 <_strtod_l+0x2fe>
 800382c:	498e      	ldr	r1, [pc, #568]	; (8003a68 <_strtod_l+0x580>)
 800382e:	a819      	add	r0, sp, #100	; 0x64
 8003830:	f002 f898 	bl	8005964 <__match>
 8003834:	2800      	cmp	r0, #0
 8003836:	f43f aeb4 	beq.w	80035a2 <_strtod_l+0xba>
 800383a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800383c:	498b      	ldr	r1, [pc, #556]	; (8003a6c <_strtod_l+0x584>)
 800383e:	3b01      	subs	r3, #1
 8003840:	a819      	add	r0, sp, #100	; 0x64
 8003842:	9319      	str	r3, [sp, #100]	; 0x64
 8003844:	f002 f88e 	bl	8005964 <__match>
 8003848:	b910      	cbnz	r0, 8003850 <_strtod_l+0x368>
 800384a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800384c:	3301      	adds	r3, #1
 800384e:	9319      	str	r3, [sp, #100]	; 0x64
 8003850:	f04f 0800 	mov.w	r8, #0
 8003854:	f8df 9218 	ldr.w	r9, [pc, #536]	; 8003a70 <_strtod_l+0x588>
 8003858:	e687      	b.n	800356a <_strtod_l+0x82>
 800385a:	4886      	ldr	r0, [pc, #536]	; (8003a74 <_strtod_l+0x58c>)
 800385c:	f003 fde6 	bl	800742c <nan>
 8003860:	4680      	mov	r8, r0
 8003862:	4689      	mov	r9, r1
 8003864:	e681      	b.n	800356a <_strtod_l+0x82>
 8003866:	9b04      	ldr	r3, [sp, #16]
 8003868:	f1bb 0f00 	cmp.w	fp, #0
 800386c:	bf08      	it	eq
 800386e:	46a3      	moveq	fp, r4
 8003870:	1aeb      	subs	r3, r5, r3
 8003872:	2c10      	cmp	r4, #16
 8003874:	9806      	ldr	r0, [sp, #24]
 8003876:	4626      	mov	r6, r4
 8003878:	9307      	str	r3, [sp, #28]
 800387a:	bfa8      	it	ge
 800387c:	2610      	movge	r6, #16
 800387e:	f7fc fe1d 	bl	80004bc <__aeabi_ui2d>
 8003882:	2c09      	cmp	r4, #9
 8003884:	4680      	mov	r8, r0
 8003886:	4689      	mov	r9, r1
 8003888:	dd13      	ble.n	80038b2 <_strtod_l+0x3ca>
 800388a:	4b7b      	ldr	r3, [pc, #492]	; (8003a78 <_strtod_l+0x590>)
 800388c:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003890:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8003894:	f7fc fe8c 	bl	80005b0 <__aeabi_dmul>
 8003898:	4680      	mov	r8, r0
 800389a:	9805      	ldr	r0, [sp, #20]
 800389c:	4689      	mov	r9, r1
 800389e:	f7fc fe0d 	bl	80004bc <__aeabi_ui2d>
 80038a2:	4602      	mov	r2, r0
 80038a4:	460b      	mov	r3, r1
 80038a6:	4640      	mov	r0, r8
 80038a8:	4649      	mov	r1, r9
 80038aa:	f7fc fccb 	bl	8000244 <__adddf3>
 80038ae:	4680      	mov	r8, r0
 80038b0:	4689      	mov	r9, r1
 80038b2:	2c0f      	cmp	r4, #15
 80038b4:	dc36      	bgt.n	8003924 <_strtod_l+0x43c>
 80038b6:	9b07      	ldr	r3, [sp, #28]
 80038b8:	2b00      	cmp	r3, #0
 80038ba:	f43f ae56 	beq.w	800356a <_strtod_l+0x82>
 80038be:	dd22      	ble.n	8003906 <_strtod_l+0x41e>
 80038c0:	2b16      	cmp	r3, #22
 80038c2:	dc09      	bgt.n	80038d8 <_strtod_l+0x3f0>
 80038c4:	496c      	ldr	r1, [pc, #432]	; (8003a78 <_strtod_l+0x590>)
 80038c6:	4642      	mov	r2, r8
 80038c8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80038cc:	464b      	mov	r3, r9
 80038ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 80038d2:	f7fc fe6d 	bl	80005b0 <__aeabi_dmul>
 80038d6:	e7c3      	b.n	8003860 <_strtod_l+0x378>
 80038d8:	9a07      	ldr	r2, [sp, #28]
 80038da:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 80038de:	4293      	cmp	r3, r2
 80038e0:	db20      	blt.n	8003924 <_strtod_l+0x43c>
 80038e2:	4d65      	ldr	r5, [pc, #404]	; (8003a78 <_strtod_l+0x590>)
 80038e4:	f1c4 040f 	rsb	r4, r4, #15
 80038e8:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 80038ec:	4642      	mov	r2, r8
 80038ee:	e9d1 0100 	ldrd	r0, r1, [r1]
 80038f2:	464b      	mov	r3, r9
 80038f4:	f7fc fe5c 	bl	80005b0 <__aeabi_dmul>
 80038f8:	9b07      	ldr	r3, [sp, #28]
 80038fa:	1b1c      	subs	r4, r3, r4
 80038fc:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8003900:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003904:	e7e5      	b.n	80038d2 <_strtod_l+0x3ea>
 8003906:	9b07      	ldr	r3, [sp, #28]
 8003908:	3316      	adds	r3, #22
 800390a:	db0b      	blt.n	8003924 <_strtod_l+0x43c>
 800390c:	9b04      	ldr	r3, [sp, #16]
 800390e:	4640      	mov	r0, r8
 8003910:	1b5d      	subs	r5, r3, r5
 8003912:	4b59      	ldr	r3, [pc, #356]	; (8003a78 <_strtod_l+0x590>)
 8003914:	4649      	mov	r1, r9
 8003916:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 800391a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800391e:	f7fc ff71 	bl	8000804 <__aeabi_ddiv>
 8003922:	e79d      	b.n	8003860 <_strtod_l+0x378>
 8003924:	9b07      	ldr	r3, [sp, #28]
 8003926:	1ba6      	subs	r6, r4, r6
 8003928:	441e      	add	r6, r3
 800392a:	2e00      	cmp	r6, #0
 800392c:	dd74      	ble.n	8003a18 <_strtod_l+0x530>
 800392e:	f016 030f 	ands.w	r3, r6, #15
 8003932:	d00a      	beq.n	800394a <_strtod_l+0x462>
 8003934:	4950      	ldr	r1, [pc, #320]	; (8003a78 <_strtod_l+0x590>)
 8003936:	4642      	mov	r2, r8
 8003938:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800393c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003940:	464b      	mov	r3, r9
 8003942:	f7fc fe35 	bl	80005b0 <__aeabi_dmul>
 8003946:	4680      	mov	r8, r0
 8003948:	4689      	mov	r9, r1
 800394a:	f036 060f 	bics.w	r6, r6, #15
 800394e:	d052      	beq.n	80039f6 <_strtod_l+0x50e>
 8003950:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 8003954:	dd27      	ble.n	80039a6 <_strtod_l+0x4be>
 8003956:	f04f 0b00 	mov.w	fp, #0
 800395a:	f8cd b010 	str.w	fp, [sp, #16]
 800395e:	f8cd b020 	str.w	fp, [sp, #32]
 8003962:	f8cd b018 	str.w	fp, [sp, #24]
 8003966:	2322      	movs	r3, #34	; 0x22
 8003968:	f04f 0800 	mov.w	r8, #0
 800396c:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8003a70 <_strtod_l+0x588>
 8003970:	f8ca 3000 	str.w	r3, [sl]
 8003974:	9b08      	ldr	r3, [sp, #32]
 8003976:	2b00      	cmp	r3, #0
 8003978:	f43f adf7 	beq.w	800356a <_strtod_l+0x82>
 800397c:	4650      	mov	r0, sl
 800397e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003980:	f002 f982 	bl	8005c88 <_Bfree>
 8003984:	4650      	mov	r0, sl
 8003986:	9906      	ldr	r1, [sp, #24]
 8003988:	f002 f97e 	bl	8005c88 <_Bfree>
 800398c:	4650      	mov	r0, sl
 800398e:	9904      	ldr	r1, [sp, #16]
 8003990:	f002 f97a 	bl	8005c88 <_Bfree>
 8003994:	4650      	mov	r0, sl
 8003996:	9908      	ldr	r1, [sp, #32]
 8003998:	f002 f976 	bl	8005c88 <_Bfree>
 800399c:	4659      	mov	r1, fp
 800399e:	4650      	mov	r0, sl
 80039a0:	f002 f972 	bl	8005c88 <_Bfree>
 80039a4:	e5e1      	b.n	800356a <_strtod_l+0x82>
 80039a6:	4b35      	ldr	r3, [pc, #212]	; (8003a7c <_strtod_l+0x594>)
 80039a8:	4640      	mov	r0, r8
 80039aa:	9305      	str	r3, [sp, #20]
 80039ac:	2300      	movs	r3, #0
 80039ae:	4649      	mov	r1, r9
 80039b0:	461f      	mov	r7, r3
 80039b2:	1136      	asrs	r6, r6, #4
 80039b4:	2e01      	cmp	r6, #1
 80039b6:	dc21      	bgt.n	80039fc <_strtod_l+0x514>
 80039b8:	b10b      	cbz	r3, 80039be <_strtod_l+0x4d6>
 80039ba:	4680      	mov	r8, r0
 80039bc:	4689      	mov	r9, r1
 80039be:	4b2f      	ldr	r3, [pc, #188]	; (8003a7c <_strtod_l+0x594>)
 80039c0:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 80039c4:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80039c8:	4642      	mov	r2, r8
 80039ca:	e9d7 0100 	ldrd	r0, r1, [r7]
 80039ce:	464b      	mov	r3, r9
 80039d0:	f7fc fdee 	bl	80005b0 <__aeabi_dmul>
 80039d4:	4b26      	ldr	r3, [pc, #152]	; (8003a70 <_strtod_l+0x588>)
 80039d6:	460a      	mov	r2, r1
 80039d8:	400b      	ands	r3, r1
 80039da:	4929      	ldr	r1, [pc, #164]	; (8003a80 <_strtod_l+0x598>)
 80039dc:	4680      	mov	r8, r0
 80039de:	428b      	cmp	r3, r1
 80039e0:	d8b9      	bhi.n	8003956 <_strtod_l+0x46e>
 80039e2:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80039e6:	428b      	cmp	r3, r1
 80039e8:	bf86      	itte	hi
 80039ea:	f04f 38ff 	movhi.w	r8, #4294967295
 80039ee:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 8003a84 <_strtod_l+0x59c>
 80039f2:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 80039f6:	2300      	movs	r3, #0
 80039f8:	9305      	str	r3, [sp, #20]
 80039fa:	e07f      	b.n	8003afc <_strtod_l+0x614>
 80039fc:	07f2      	lsls	r2, r6, #31
 80039fe:	d505      	bpl.n	8003a0c <_strtod_l+0x524>
 8003a00:	9b05      	ldr	r3, [sp, #20]
 8003a02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a06:	f7fc fdd3 	bl	80005b0 <__aeabi_dmul>
 8003a0a:	2301      	movs	r3, #1
 8003a0c:	9a05      	ldr	r2, [sp, #20]
 8003a0e:	3701      	adds	r7, #1
 8003a10:	3208      	adds	r2, #8
 8003a12:	1076      	asrs	r6, r6, #1
 8003a14:	9205      	str	r2, [sp, #20]
 8003a16:	e7cd      	b.n	80039b4 <_strtod_l+0x4cc>
 8003a18:	d0ed      	beq.n	80039f6 <_strtod_l+0x50e>
 8003a1a:	4276      	negs	r6, r6
 8003a1c:	f016 020f 	ands.w	r2, r6, #15
 8003a20:	d00a      	beq.n	8003a38 <_strtod_l+0x550>
 8003a22:	4b15      	ldr	r3, [pc, #84]	; (8003a78 <_strtod_l+0x590>)
 8003a24:	4640      	mov	r0, r8
 8003a26:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003a2a:	4649      	mov	r1, r9
 8003a2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a30:	f7fc fee8 	bl	8000804 <__aeabi_ddiv>
 8003a34:	4680      	mov	r8, r0
 8003a36:	4689      	mov	r9, r1
 8003a38:	1136      	asrs	r6, r6, #4
 8003a3a:	d0dc      	beq.n	80039f6 <_strtod_l+0x50e>
 8003a3c:	2e1f      	cmp	r6, #31
 8003a3e:	dd23      	ble.n	8003a88 <_strtod_l+0x5a0>
 8003a40:	f04f 0b00 	mov.w	fp, #0
 8003a44:	f8cd b010 	str.w	fp, [sp, #16]
 8003a48:	f8cd b020 	str.w	fp, [sp, #32]
 8003a4c:	f8cd b018 	str.w	fp, [sp, #24]
 8003a50:	2322      	movs	r3, #34	; 0x22
 8003a52:	f04f 0800 	mov.w	r8, #0
 8003a56:	f04f 0900 	mov.w	r9, #0
 8003a5a:	f8ca 3000 	str.w	r3, [sl]
 8003a5e:	e789      	b.n	8003974 <_strtod_l+0x48c>
 8003a60:	08007b45 	.word	0x08007b45
 8003a64:	08007b84 	.word	0x08007b84
 8003a68:	08007b3d 	.word	0x08007b3d
 8003a6c:	08007cc4 	.word	0x08007cc4
 8003a70:	7ff00000 	.word	0x7ff00000
 8003a74:	08007ff3 	.word	0x08007ff3
 8003a78:	08007eb8 	.word	0x08007eb8
 8003a7c:	08007e90 	.word	0x08007e90
 8003a80:	7ca00000 	.word	0x7ca00000
 8003a84:	7fefffff 	.word	0x7fefffff
 8003a88:	f016 0310 	ands.w	r3, r6, #16
 8003a8c:	bf18      	it	ne
 8003a8e:	236a      	movne	r3, #106	; 0x6a
 8003a90:	4640      	mov	r0, r8
 8003a92:	9305      	str	r3, [sp, #20]
 8003a94:	4649      	mov	r1, r9
 8003a96:	2300      	movs	r3, #0
 8003a98:	4fb0      	ldr	r7, [pc, #704]	; (8003d5c <_strtod_l+0x874>)
 8003a9a:	07f2      	lsls	r2, r6, #31
 8003a9c:	d504      	bpl.n	8003aa8 <_strtod_l+0x5c0>
 8003a9e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003aa2:	f7fc fd85 	bl	80005b0 <__aeabi_dmul>
 8003aa6:	2301      	movs	r3, #1
 8003aa8:	1076      	asrs	r6, r6, #1
 8003aaa:	f107 0708 	add.w	r7, r7, #8
 8003aae:	d1f4      	bne.n	8003a9a <_strtod_l+0x5b2>
 8003ab0:	b10b      	cbz	r3, 8003ab6 <_strtod_l+0x5ce>
 8003ab2:	4680      	mov	r8, r0
 8003ab4:	4689      	mov	r9, r1
 8003ab6:	9b05      	ldr	r3, [sp, #20]
 8003ab8:	b1c3      	cbz	r3, 8003aec <_strtod_l+0x604>
 8003aba:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8003abe:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	4649      	mov	r1, r9
 8003ac6:	dd11      	ble.n	8003aec <_strtod_l+0x604>
 8003ac8:	2b1f      	cmp	r3, #31
 8003aca:	f340 8127 	ble.w	8003d1c <_strtod_l+0x834>
 8003ace:	2b34      	cmp	r3, #52	; 0x34
 8003ad0:	bfd8      	it	le
 8003ad2:	f04f 33ff 	movle.w	r3, #4294967295
 8003ad6:	f04f 0800 	mov.w	r8, #0
 8003ada:	bfcf      	iteee	gt
 8003adc:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8003ae0:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8003ae4:	fa03 f202 	lslle.w	r2, r3, r2
 8003ae8:	ea02 0901 	andle.w	r9, r2, r1
 8003aec:	2200      	movs	r2, #0
 8003aee:	2300      	movs	r3, #0
 8003af0:	4640      	mov	r0, r8
 8003af2:	4649      	mov	r1, r9
 8003af4:	f7fc ffc4 	bl	8000a80 <__aeabi_dcmpeq>
 8003af8:	2800      	cmp	r0, #0
 8003afa:	d1a1      	bne.n	8003a40 <_strtod_l+0x558>
 8003afc:	9b06      	ldr	r3, [sp, #24]
 8003afe:	465a      	mov	r2, fp
 8003b00:	9300      	str	r3, [sp, #0]
 8003b02:	4650      	mov	r0, sl
 8003b04:	4623      	mov	r3, r4
 8003b06:	9908      	ldr	r1, [sp, #32]
 8003b08:	f002 f926 	bl	8005d58 <__s2b>
 8003b0c:	9008      	str	r0, [sp, #32]
 8003b0e:	2800      	cmp	r0, #0
 8003b10:	f43f af21 	beq.w	8003956 <_strtod_l+0x46e>
 8003b14:	9b04      	ldr	r3, [sp, #16]
 8003b16:	f04f 0b00 	mov.w	fp, #0
 8003b1a:	1b5d      	subs	r5, r3, r5
 8003b1c:	9b07      	ldr	r3, [sp, #28]
 8003b1e:	f8cd b010 	str.w	fp, [sp, #16]
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	bfb4      	ite	lt
 8003b26:	462b      	movlt	r3, r5
 8003b28:	2300      	movge	r3, #0
 8003b2a:	930e      	str	r3, [sp, #56]	; 0x38
 8003b2c:	9b07      	ldr	r3, [sp, #28]
 8003b2e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003b32:	9314      	str	r3, [sp, #80]	; 0x50
 8003b34:	9b08      	ldr	r3, [sp, #32]
 8003b36:	4650      	mov	r0, sl
 8003b38:	6859      	ldr	r1, [r3, #4]
 8003b3a:	f002 f865 	bl	8005c08 <_Balloc>
 8003b3e:	9006      	str	r0, [sp, #24]
 8003b40:	2800      	cmp	r0, #0
 8003b42:	f43f af10 	beq.w	8003966 <_strtod_l+0x47e>
 8003b46:	9b08      	ldr	r3, [sp, #32]
 8003b48:	300c      	adds	r0, #12
 8003b4a:	691a      	ldr	r2, [r3, #16]
 8003b4c:	f103 010c 	add.w	r1, r3, #12
 8003b50:	3202      	adds	r2, #2
 8003b52:	0092      	lsls	r2, r2, #2
 8003b54:	f002 f84a 	bl	8005bec <memcpy>
 8003b58:	ab1c      	add	r3, sp, #112	; 0x70
 8003b5a:	9301      	str	r3, [sp, #4]
 8003b5c:	ab1b      	add	r3, sp, #108	; 0x6c
 8003b5e:	9300      	str	r3, [sp, #0]
 8003b60:	4642      	mov	r2, r8
 8003b62:	464b      	mov	r3, r9
 8003b64:	4650      	mov	r0, sl
 8003b66:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 8003b6a:	f002 fc37 	bl	80063dc <__d2b>
 8003b6e:	901a      	str	r0, [sp, #104]	; 0x68
 8003b70:	2800      	cmp	r0, #0
 8003b72:	f43f aef8 	beq.w	8003966 <_strtod_l+0x47e>
 8003b76:	2101      	movs	r1, #1
 8003b78:	4650      	mov	r0, sl
 8003b7a:	f002 f985 	bl	8005e88 <__i2b>
 8003b7e:	4603      	mov	r3, r0
 8003b80:	9004      	str	r0, [sp, #16]
 8003b82:	2800      	cmp	r0, #0
 8003b84:	f43f aeef 	beq.w	8003966 <_strtod_l+0x47e>
 8003b88:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8003b8a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003b8c:	2d00      	cmp	r5, #0
 8003b8e:	bfab      	itete	ge
 8003b90:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003b92:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 8003b94:	18ee      	addge	r6, r5, r3
 8003b96:	1b5c      	sublt	r4, r3, r5
 8003b98:	9b05      	ldr	r3, [sp, #20]
 8003b9a:	bfa8      	it	ge
 8003b9c:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 8003b9e:	eba5 0503 	sub.w	r5, r5, r3
 8003ba2:	4415      	add	r5, r2
 8003ba4:	4b6e      	ldr	r3, [pc, #440]	; (8003d60 <_strtod_l+0x878>)
 8003ba6:	f105 35ff 	add.w	r5, r5, #4294967295
 8003baa:	bfb8      	it	lt
 8003bac:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8003bae:	429d      	cmp	r5, r3
 8003bb0:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8003bb4:	f280 80c4 	bge.w	8003d40 <_strtod_l+0x858>
 8003bb8:	1b5b      	subs	r3, r3, r5
 8003bba:	2b1f      	cmp	r3, #31
 8003bbc:	f04f 0701 	mov.w	r7, #1
 8003bc0:	eba2 0203 	sub.w	r2, r2, r3
 8003bc4:	f300 80b1 	bgt.w	8003d2a <_strtod_l+0x842>
 8003bc8:	2500      	movs	r5, #0
 8003bca:	fa07 f303 	lsl.w	r3, r7, r3
 8003bce:	930f      	str	r3, [sp, #60]	; 0x3c
 8003bd0:	18b7      	adds	r7, r6, r2
 8003bd2:	9b05      	ldr	r3, [sp, #20]
 8003bd4:	42be      	cmp	r6, r7
 8003bd6:	4414      	add	r4, r2
 8003bd8:	441c      	add	r4, r3
 8003bda:	4633      	mov	r3, r6
 8003bdc:	bfa8      	it	ge
 8003bde:	463b      	movge	r3, r7
 8003be0:	42a3      	cmp	r3, r4
 8003be2:	bfa8      	it	ge
 8003be4:	4623      	movge	r3, r4
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	bfc2      	ittt	gt
 8003bea:	1aff      	subgt	r7, r7, r3
 8003bec:	1ae4      	subgt	r4, r4, r3
 8003bee:	1af6      	subgt	r6, r6, r3
 8003bf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003bf2:	2b00      	cmp	r3, #0
 8003bf4:	dd17      	ble.n	8003c26 <_strtod_l+0x73e>
 8003bf6:	461a      	mov	r2, r3
 8003bf8:	4650      	mov	r0, sl
 8003bfa:	9904      	ldr	r1, [sp, #16]
 8003bfc:	f002 fa02 	bl	8006004 <__pow5mult>
 8003c00:	9004      	str	r0, [sp, #16]
 8003c02:	2800      	cmp	r0, #0
 8003c04:	f43f aeaf 	beq.w	8003966 <_strtod_l+0x47e>
 8003c08:	4601      	mov	r1, r0
 8003c0a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8003c0c:	4650      	mov	r0, sl
 8003c0e:	f002 f951 	bl	8005eb4 <__multiply>
 8003c12:	9009      	str	r0, [sp, #36]	; 0x24
 8003c14:	2800      	cmp	r0, #0
 8003c16:	f43f aea6 	beq.w	8003966 <_strtod_l+0x47e>
 8003c1a:	4650      	mov	r0, sl
 8003c1c:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003c1e:	f002 f833 	bl	8005c88 <_Bfree>
 8003c22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c24:	931a      	str	r3, [sp, #104]	; 0x68
 8003c26:	2f00      	cmp	r7, #0
 8003c28:	f300 808e 	bgt.w	8003d48 <_strtod_l+0x860>
 8003c2c:	9b07      	ldr	r3, [sp, #28]
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	dd08      	ble.n	8003c44 <_strtod_l+0x75c>
 8003c32:	4650      	mov	r0, sl
 8003c34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8003c36:	9906      	ldr	r1, [sp, #24]
 8003c38:	f002 f9e4 	bl	8006004 <__pow5mult>
 8003c3c:	9006      	str	r0, [sp, #24]
 8003c3e:	2800      	cmp	r0, #0
 8003c40:	f43f ae91 	beq.w	8003966 <_strtod_l+0x47e>
 8003c44:	2c00      	cmp	r4, #0
 8003c46:	dd08      	ble.n	8003c5a <_strtod_l+0x772>
 8003c48:	4622      	mov	r2, r4
 8003c4a:	4650      	mov	r0, sl
 8003c4c:	9906      	ldr	r1, [sp, #24]
 8003c4e:	f002 fa33 	bl	80060b8 <__lshift>
 8003c52:	9006      	str	r0, [sp, #24]
 8003c54:	2800      	cmp	r0, #0
 8003c56:	f43f ae86 	beq.w	8003966 <_strtod_l+0x47e>
 8003c5a:	2e00      	cmp	r6, #0
 8003c5c:	dd08      	ble.n	8003c70 <_strtod_l+0x788>
 8003c5e:	4632      	mov	r2, r6
 8003c60:	4650      	mov	r0, sl
 8003c62:	9904      	ldr	r1, [sp, #16]
 8003c64:	f002 fa28 	bl	80060b8 <__lshift>
 8003c68:	9004      	str	r0, [sp, #16]
 8003c6a:	2800      	cmp	r0, #0
 8003c6c:	f43f ae7b 	beq.w	8003966 <_strtod_l+0x47e>
 8003c70:	4650      	mov	r0, sl
 8003c72:	9a06      	ldr	r2, [sp, #24]
 8003c74:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003c76:	f002 faab 	bl	80061d0 <__mdiff>
 8003c7a:	4683      	mov	fp, r0
 8003c7c:	2800      	cmp	r0, #0
 8003c7e:	f43f ae72 	beq.w	8003966 <_strtod_l+0x47e>
 8003c82:	2400      	movs	r4, #0
 8003c84:	68c3      	ldr	r3, [r0, #12]
 8003c86:	9904      	ldr	r1, [sp, #16]
 8003c88:	60c4      	str	r4, [r0, #12]
 8003c8a:	930b      	str	r3, [sp, #44]	; 0x2c
 8003c8c:	f002 fa84 	bl	8006198 <__mcmp>
 8003c90:	42a0      	cmp	r0, r4
 8003c92:	da6b      	bge.n	8003d6c <_strtod_l+0x884>
 8003c94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003c96:	ea53 0308 	orrs.w	r3, r3, r8
 8003c9a:	f040 8091 	bne.w	8003dc0 <_strtod_l+0x8d8>
 8003c9e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	f040 808c 	bne.w	8003dc0 <_strtod_l+0x8d8>
 8003ca8:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003cac:	0d1b      	lsrs	r3, r3, #20
 8003cae:	051b      	lsls	r3, r3, #20
 8003cb0:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8003cb4:	f240 8084 	bls.w	8003dc0 <_strtod_l+0x8d8>
 8003cb8:	f8db 3014 	ldr.w	r3, [fp, #20]
 8003cbc:	b91b      	cbnz	r3, 8003cc6 <_strtod_l+0x7de>
 8003cbe:	f8db 3010 	ldr.w	r3, [fp, #16]
 8003cc2:	2b01      	cmp	r3, #1
 8003cc4:	dd7c      	ble.n	8003dc0 <_strtod_l+0x8d8>
 8003cc6:	4659      	mov	r1, fp
 8003cc8:	2201      	movs	r2, #1
 8003cca:	4650      	mov	r0, sl
 8003ccc:	f002 f9f4 	bl	80060b8 <__lshift>
 8003cd0:	9904      	ldr	r1, [sp, #16]
 8003cd2:	4683      	mov	fp, r0
 8003cd4:	f002 fa60 	bl	8006198 <__mcmp>
 8003cd8:	2800      	cmp	r0, #0
 8003cda:	dd71      	ble.n	8003dc0 <_strtod_l+0x8d8>
 8003cdc:	9905      	ldr	r1, [sp, #20]
 8003cde:	464b      	mov	r3, r9
 8003ce0:	4a20      	ldr	r2, [pc, #128]	; (8003d64 <_strtod_l+0x87c>)
 8003ce2:	2900      	cmp	r1, #0
 8003ce4:	f000 808c 	beq.w	8003e00 <_strtod_l+0x918>
 8003ce8:	ea02 0109 	and.w	r1, r2, r9
 8003cec:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003cf0:	f300 8086 	bgt.w	8003e00 <_strtod_l+0x918>
 8003cf4:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003cf8:	f77f aeaa 	ble.w	8003a50 <_strtod_l+0x568>
 8003cfc:	4640      	mov	r0, r8
 8003cfe:	4649      	mov	r1, r9
 8003d00:	4b19      	ldr	r3, [pc, #100]	; (8003d68 <_strtod_l+0x880>)
 8003d02:	2200      	movs	r2, #0
 8003d04:	f7fc fc54 	bl	80005b0 <__aeabi_dmul>
 8003d08:	460b      	mov	r3, r1
 8003d0a:	4303      	orrs	r3, r0
 8003d0c:	bf08      	it	eq
 8003d0e:	2322      	moveq	r3, #34	; 0x22
 8003d10:	4680      	mov	r8, r0
 8003d12:	4689      	mov	r9, r1
 8003d14:	bf08      	it	eq
 8003d16:	f8ca 3000 	streq.w	r3, [sl]
 8003d1a:	e62f      	b.n	800397c <_strtod_l+0x494>
 8003d1c:	f04f 32ff 	mov.w	r2, #4294967295
 8003d20:	fa02 f303 	lsl.w	r3, r2, r3
 8003d24:	ea03 0808 	and.w	r8, r3, r8
 8003d28:	e6e0      	b.n	8003aec <_strtod_l+0x604>
 8003d2a:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8003d2e:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8003d32:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8003d36:	35e2      	adds	r5, #226	; 0xe2
 8003d38:	fa07 f505 	lsl.w	r5, r7, r5
 8003d3c:	970f      	str	r7, [sp, #60]	; 0x3c
 8003d3e:	e747      	b.n	8003bd0 <_strtod_l+0x6e8>
 8003d40:	2301      	movs	r3, #1
 8003d42:	2500      	movs	r5, #0
 8003d44:	930f      	str	r3, [sp, #60]	; 0x3c
 8003d46:	e743      	b.n	8003bd0 <_strtod_l+0x6e8>
 8003d48:	463a      	mov	r2, r7
 8003d4a:	4650      	mov	r0, sl
 8003d4c:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003d4e:	f002 f9b3 	bl	80060b8 <__lshift>
 8003d52:	901a      	str	r0, [sp, #104]	; 0x68
 8003d54:	2800      	cmp	r0, #0
 8003d56:	f47f af69 	bne.w	8003c2c <_strtod_l+0x744>
 8003d5a:	e604      	b.n	8003966 <_strtod_l+0x47e>
 8003d5c:	08007b98 	.word	0x08007b98
 8003d60:	fffffc02 	.word	0xfffffc02
 8003d64:	7ff00000 	.word	0x7ff00000
 8003d68:	39500000 	.word	0x39500000
 8003d6c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8003d70:	d165      	bne.n	8003e3e <_strtod_l+0x956>
 8003d72:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003d74:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003d78:	b35a      	cbz	r2, 8003dd2 <_strtod_l+0x8ea>
 8003d7a:	4a99      	ldr	r2, [pc, #612]	; (8003fe0 <_strtod_l+0xaf8>)
 8003d7c:	4293      	cmp	r3, r2
 8003d7e:	d12b      	bne.n	8003dd8 <_strtod_l+0x8f0>
 8003d80:	9b05      	ldr	r3, [sp, #20]
 8003d82:	4641      	mov	r1, r8
 8003d84:	b303      	cbz	r3, 8003dc8 <_strtod_l+0x8e0>
 8003d86:	464a      	mov	r2, r9
 8003d88:	4b96      	ldr	r3, [pc, #600]	; (8003fe4 <_strtod_l+0xafc>)
 8003d8a:	4013      	ands	r3, r2
 8003d8c:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003d90:	f04f 32ff 	mov.w	r2, #4294967295
 8003d94:	d81b      	bhi.n	8003dce <_strtod_l+0x8e6>
 8003d96:	0d1b      	lsrs	r3, r3, #20
 8003d98:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003d9c:	fa02 f303 	lsl.w	r3, r2, r3
 8003da0:	4299      	cmp	r1, r3
 8003da2:	d119      	bne.n	8003dd8 <_strtod_l+0x8f0>
 8003da4:	4b90      	ldr	r3, [pc, #576]	; (8003fe8 <_strtod_l+0xb00>)
 8003da6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003da8:	429a      	cmp	r2, r3
 8003daa:	d102      	bne.n	8003db2 <_strtod_l+0x8ca>
 8003dac:	3101      	adds	r1, #1
 8003dae:	f43f adda 	beq.w	8003966 <_strtod_l+0x47e>
 8003db2:	f04f 0800 	mov.w	r8, #0
 8003db6:	4b8b      	ldr	r3, [pc, #556]	; (8003fe4 <_strtod_l+0xafc>)
 8003db8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003dba:	401a      	ands	r2, r3
 8003dbc:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8003dc0:	9b05      	ldr	r3, [sp, #20]
 8003dc2:	2b00      	cmp	r3, #0
 8003dc4:	d19a      	bne.n	8003cfc <_strtod_l+0x814>
 8003dc6:	e5d9      	b.n	800397c <_strtod_l+0x494>
 8003dc8:	f04f 33ff 	mov.w	r3, #4294967295
 8003dcc:	e7e8      	b.n	8003da0 <_strtod_l+0x8b8>
 8003dce:	4613      	mov	r3, r2
 8003dd0:	e7e6      	b.n	8003da0 <_strtod_l+0x8b8>
 8003dd2:	ea53 0308 	orrs.w	r3, r3, r8
 8003dd6:	d081      	beq.n	8003cdc <_strtod_l+0x7f4>
 8003dd8:	b1e5      	cbz	r5, 8003e14 <_strtod_l+0x92c>
 8003dda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ddc:	421d      	tst	r5, r3
 8003dde:	d0ef      	beq.n	8003dc0 <_strtod_l+0x8d8>
 8003de0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003de2:	4640      	mov	r0, r8
 8003de4:	4649      	mov	r1, r9
 8003de6:	9a05      	ldr	r2, [sp, #20]
 8003de8:	b1c3      	cbz	r3, 8003e1c <_strtod_l+0x934>
 8003dea:	f7ff fb5b 	bl	80034a4 <sulp>
 8003dee:	4602      	mov	r2, r0
 8003df0:	460b      	mov	r3, r1
 8003df2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003df6:	f7fc fa25 	bl	8000244 <__adddf3>
 8003dfa:	4680      	mov	r8, r0
 8003dfc:	4689      	mov	r9, r1
 8003dfe:	e7df      	b.n	8003dc0 <_strtod_l+0x8d8>
 8003e00:	4013      	ands	r3, r2
 8003e02:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003e06:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8003e0a:	f04f 38ff 	mov.w	r8, #4294967295
 8003e0e:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8003e12:	e7d5      	b.n	8003dc0 <_strtod_l+0x8d8>
 8003e14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003e16:	ea13 0f08 	tst.w	r3, r8
 8003e1a:	e7e0      	b.n	8003dde <_strtod_l+0x8f6>
 8003e1c:	f7ff fb42 	bl	80034a4 <sulp>
 8003e20:	4602      	mov	r2, r0
 8003e22:	460b      	mov	r3, r1
 8003e24:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003e28:	f7fc fa0a 	bl	8000240 <__aeabi_dsub>
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	2300      	movs	r3, #0
 8003e30:	4680      	mov	r8, r0
 8003e32:	4689      	mov	r9, r1
 8003e34:	f7fc fe24 	bl	8000a80 <__aeabi_dcmpeq>
 8003e38:	2800      	cmp	r0, #0
 8003e3a:	d0c1      	beq.n	8003dc0 <_strtod_l+0x8d8>
 8003e3c:	e608      	b.n	8003a50 <_strtod_l+0x568>
 8003e3e:	4658      	mov	r0, fp
 8003e40:	9904      	ldr	r1, [sp, #16]
 8003e42:	f002 fb27 	bl	8006494 <__ratio>
 8003e46:	2200      	movs	r2, #0
 8003e48:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003e4c:	4606      	mov	r6, r0
 8003e4e:	460f      	mov	r7, r1
 8003e50:	f7fc fe2a 	bl	8000aa8 <__aeabi_dcmple>
 8003e54:	2800      	cmp	r0, #0
 8003e56:	d070      	beq.n	8003f3a <_strtod_l+0xa52>
 8003e58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	d042      	beq.n	8003ee4 <_strtod_l+0x9fc>
 8003e5e:	2600      	movs	r6, #0
 8003e60:	4f62      	ldr	r7, [pc, #392]	; (8003fec <_strtod_l+0xb04>)
 8003e62:	4d62      	ldr	r5, [pc, #392]	; (8003fec <_strtod_l+0xb04>)
 8003e64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e66:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003e6a:	0d1b      	lsrs	r3, r3, #20
 8003e6c:	051b      	lsls	r3, r3, #20
 8003e6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003e70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003e72:	4b5f      	ldr	r3, [pc, #380]	; (8003ff0 <_strtod_l+0xb08>)
 8003e74:	429a      	cmp	r2, r3
 8003e76:	f040 80c3 	bne.w	8004000 <_strtod_l+0xb18>
 8003e7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e7c:	4640      	mov	r0, r8
 8003e7e:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 8003e82:	4649      	mov	r1, r9
 8003e84:	f002 fa30 	bl	80062e8 <__ulp>
 8003e88:	4602      	mov	r2, r0
 8003e8a:	460b      	mov	r3, r1
 8003e8c:	4630      	mov	r0, r6
 8003e8e:	4639      	mov	r1, r7
 8003e90:	f7fc fb8e 	bl	80005b0 <__aeabi_dmul>
 8003e94:	4642      	mov	r2, r8
 8003e96:	464b      	mov	r3, r9
 8003e98:	f7fc f9d4 	bl	8000244 <__adddf3>
 8003e9c:	460b      	mov	r3, r1
 8003e9e:	4951      	ldr	r1, [pc, #324]	; (8003fe4 <_strtod_l+0xafc>)
 8003ea0:	4a54      	ldr	r2, [pc, #336]	; (8003ff4 <_strtod_l+0xb0c>)
 8003ea2:	4019      	ands	r1, r3
 8003ea4:	4291      	cmp	r1, r2
 8003ea6:	4680      	mov	r8, r0
 8003ea8:	d95d      	bls.n	8003f66 <_strtod_l+0xa7e>
 8003eaa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003eac:	4b4e      	ldr	r3, [pc, #312]	; (8003fe8 <_strtod_l+0xb00>)
 8003eae:	429a      	cmp	r2, r3
 8003eb0:	d103      	bne.n	8003eba <_strtod_l+0x9d2>
 8003eb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003eb4:	3301      	adds	r3, #1
 8003eb6:	f43f ad56 	beq.w	8003966 <_strtod_l+0x47e>
 8003eba:	f04f 38ff 	mov.w	r8, #4294967295
 8003ebe:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8003fe8 <_strtod_l+0xb00>
 8003ec2:	4650      	mov	r0, sl
 8003ec4:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003ec6:	f001 fedf 	bl	8005c88 <_Bfree>
 8003eca:	4650      	mov	r0, sl
 8003ecc:	9906      	ldr	r1, [sp, #24]
 8003ece:	f001 fedb 	bl	8005c88 <_Bfree>
 8003ed2:	4650      	mov	r0, sl
 8003ed4:	9904      	ldr	r1, [sp, #16]
 8003ed6:	f001 fed7 	bl	8005c88 <_Bfree>
 8003eda:	4659      	mov	r1, fp
 8003edc:	4650      	mov	r0, sl
 8003ede:	f001 fed3 	bl	8005c88 <_Bfree>
 8003ee2:	e627      	b.n	8003b34 <_strtod_l+0x64c>
 8003ee4:	f1b8 0f00 	cmp.w	r8, #0
 8003ee8:	d119      	bne.n	8003f1e <_strtod_l+0xa36>
 8003eea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003eec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003ef0:	b9e3      	cbnz	r3, 8003f2c <_strtod_l+0xa44>
 8003ef2:	2200      	movs	r2, #0
 8003ef4:	4630      	mov	r0, r6
 8003ef6:	4639      	mov	r1, r7
 8003ef8:	4b3c      	ldr	r3, [pc, #240]	; (8003fec <_strtod_l+0xb04>)
 8003efa:	f7fc fdcb 	bl	8000a94 <__aeabi_dcmplt>
 8003efe:	b9c8      	cbnz	r0, 8003f34 <_strtod_l+0xa4c>
 8003f00:	2200      	movs	r2, #0
 8003f02:	4630      	mov	r0, r6
 8003f04:	4639      	mov	r1, r7
 8003f06:	4b3c      	ldr	r3, [pc, #240]	; (8003ff8 <_strtod_l+0xb10>)
 8003f08:	f7fc fb52 	bl	80005b0 <__aeabi_dmul>
 8003f0c:	4604      	mov	r4, r0
 8003f0e:	460d      	mov	r5, r1
 8003f10:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003f14:	9416      	str	r4, [sp, #88]	; 0x58
 8003f16:	9317      	str	r3, [sp, #92]	; 0x5c
 8003f18:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 8003f1c:	e7a2      	b.n	8003e64 <_strtod_l+0x97c>
 8003f1e:	f1b8 0f01 	cmp.w	r8, #1
 8003f22:	d103      	bne.n	8003f2c <_strtod_l+0xa44>
 8003f24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	f43f ad92 	beq.w	8003a50 <_strtod_l+0x568>
 8003f2c:	2600      	movs	r6, #0
 8003f2e:	2400      	movs	r4, #0
 8003f30:	4f32      	ldr	r7, [pc, #200]	; (8003ffc <_strtod_l+0xb14>)
 8003f32:	e796      	b.n	8003e62 <_strtod_l+0x97a>
 8003f34:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8003f36:	4d30      	ldr	r5, [pc, #192]	; (8003ff8 <_strtod_l+0xb10>)
 8003f38:	e7ea      	b.n	8003f10 <_strtod_l+0xa28>
 8003f3a:	4b2f      	ldr	r3, [pc, #188]	; (8003ff8 <_strtod_l+0xb10>)
 8003f3c:	2200      	movs	r2, #0
 8003f3e:	4630      	mov	r0, r6
 8003f40:	4639      	mov	r1, r7
 8003f42:	f7fc fb35 	bl	80005b0 <__aeabi_dmul>
 8003f46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003f48:	4604      	mov	r4, r0
 8003f4a:	460d      	mov	r5, r1
 8003f4c:	b933      	cbnz	r3, 8003f5c <_strtod_l+0xa74>
 8003f4e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003f52:	9010      	str	r0, [sp, #64]	; 0x40
 8003f54:	9311      	str	r3, [sp, #68]	; 0x44
 8003f56:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003f5a:	e783      	b.n	8003e64 <_strtod_l+0x97c>
 8003f5c:	4602      	mov	r2, r0
 8003f5e:	460b      	mov	r3, r1
 8003f60:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8003f64:	e7f7      	b.n	8003f56 <_strtod_l+0xa6e>
 8003f66:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8003f6a:	9b05      	ldr	r3, [sp, #20]
 8003f6c:	2b00      	cmp	r3, #0
 8003f6e:	d1a8      	bne.n	8003ec2 <_strtod_l+0x9da>
 8003f70:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003f74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003f76:	0d1b      	lsrs	r3, r3, #20
 8003f78:	051b      	lsls	r3, r3, #20
 8003f7a:	429a      	cmp	r2, r3
 8003f7c:	d1a1      	bne.n	8003ec2 <_strtod_l+0x9da>
 8003f7e:	4620      	mov	r0, r4
 8003f80:	4629      	mov	r1, r5
 8003f82:	f7fc fe5d 	bl	8000c40 <__aeabi_d2lz>
 8003f86:	f7fc fae5 	bl	8000554 <__aeabi_l2d>
 8003f8a:	4602      	mov	r2, r0
 8003f8c:	460b      	mov	r3, r1
 8003f8e:	4620      	mov	r0, r4
 8003f90:	4629      	mov	r1, r5
 8003f92:	f7fc f955 	bl	8000240 <__aeabi_dsub>
 8003f96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003f98:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003f9c:	ea43 0308 	orr.w	r3, r3, r8
 8003fa0:	4313      	orrs	r3, r2
 8003fa2:	4604      	mov	r4, r0
 8003fa4:	460d      	mov	r5, r1
 8003fa6:	d066      	beq.n	8004076 <_strtod_l+0xb8e>
 8003fa8:	a309      	add	r3, pc, #36	; (adr r3, 8003fd0 <_strtod_l+0xae8>)
 8003faa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fae:	f7fc fd71 	bl	8000a94 <__aeabi_dcmplt>
 8003fb2:	2800      	cmp	r0, #0
 8003fb4:	f47f ace2 	bne.w	800397c <_strtod_l+0x494>
 8003fb8:	a307      	add	r3, pc, #28	; (adr r3, 8003fd8 <_strtod_l+0xaf0>)
 8003fba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fbe:	4620      	mov	r0, r4
 8003fc0:	4629      	mov	r1, r5
 8003fc2:	f7fc fd85 	bl	8000ad0 <__aeabi_dcmpgt>
 8003fc6:	2800      	cmp	r0, #0
 8003fc8:	f43f af7b 	beq.w	8003ec2 <_strtod_l+0x9da>
 8003fcc:	e4d6      	b.n	800397c <_strtod_l+0x494>
 8003fce:	bf00      	nop
 8003fd0:	94a03595 	.word	0x94a03595
 8003fd4:	3fdfffff 	.word	0x3fdfffff
 8003fd8:	35afe535 	.word	0x35afe535
 8003fdc:	3fe00000 	.word	0x3fe00000
 8003fe0:	000fffff 	.word	0x000fffff
 8003fe4:	7ff00000 	.word	0x7ff00000
 8003fe8:	7fefffff 	.word	0x7fefffff
 8003fec:	3ff00000 	.word	0x3ff00000
 8003ff0:	7fe00000 	.word	0x7fe00000
 8003ff4:	7c9fffff 	.word	0x7c9fffff
 8003ff8:	3fe00000 	.word	0x3fe00000
 8003ffc:	bff00000 	.word	0xbff00000
 8004000:	9b05      	ldr	r3, [sp, #20]
 8004002:	b313      	cbz	r3, 800404a <_strtod_l+0xb62>
 8004004:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004006:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800400a:	d81e      	bhi.n	800404a <_strtod_l+0xb62>
 800400c:	a326      	add	r3, pc, #152	; (adr r3, 80040a8 <_strtod_l+0xbc0>)
 800400e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004012:	4620      	mov	r0, r4
 8004014:	4629      	mov	r1, r5
 8004016:	f7fc fd47 	bl	8000aa8 <__aeabi_dcmple>
 800401a:	b190      	cbz	r0, 8004042 <_strtod_l+0xb5a>
 800401c:	4629      	mov	r1, r5
 800401e:	4620      	mov	r0, r4
 8004020:	f7fc fd9e 	bl	8000b60 <__aeabi_d2uiz>
 8004024:	2801      	cmp	r0, #1
 8004026:	bf38      	it	cc
 8004028:	2001      	movcc	r0, #1
 800402a:	f7fc fa47 	bl	80004bc <__aeabi_ui2d>
 800402e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004030:	4604      	mov	r4, r0
 8004032:	460d      	mov	r5, r1
 8004034:	b9d3      	cbnz	r3, 800406c <_strtod_l+0xb84>
 8004036:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800403a:	9012      	str	r0, [sp, #72]	; 0x48
 800403c:	9313      	str	r3, [sp, #76]	; 0x4c
 800403e:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8004042:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004044:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8004048:	1a9f      	subs	r7, r3, r2
 800404a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800404e:	f002 f94b 	bl	80062e8 <__ulp>
 8004052:	4602      	mov	r2, r0
 8004054:	460b      	mov	r3, r1
 8004056:	4630      	mov	r0, r6
 8004058:	4639      	mov	r1, r7
 800405a:	f7fc faa9 	bl	80005b0 <__aeabi_dmul>
 800405e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8004062:	f7fc f8ef 	bl	8000244 <__adddf3>
 8004066:	4680      	mov	r8, r0
 8004068:	4689      	mov	r9, r1
 800406a:	e77e      	b.n	8003f6a <_strtod_l+0xa82>
 800406c:	4602      	mov	r2, r0
 800406e:	460b      	mov	r3, r1
 8004070:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8004074:	e7e3      	b.n	800403e <_strtod_l+0xb56>
 8004076:	a30e      	add	r3, pc, #56	; (adr r3, 80040b0 <_strtod_l+0xbc8>)
 8004078:	e9d3 2300 	ldrd	r2, r3, [r3]
 800407c:	f7fc fd0a 	bl	8000a94 <__aeabi_dcmplt>
 8004080:	e7a1      	b.n	8003fc6 <_strtod_l+0xade>
 8004082:	2300      	movs	r3, #0
 8004084:	930a      	str	r3, [sp, #40]	; 0x28
 8004086:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004088:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800408a:	6013      	str	r3, [r2, #0]
 800408c:	f7ff ba71 	b.w	8003572 <_strtod_l+0x8a>
 8004090:	2a65      	cmp	r2, #101	; 0x65
 8004092:	f43f ab63 	beq.w	800375c <_strtod_l+0x274>
 8004096:	2a45      	cmp	r2, #69	; 0x45
 8004098:	f43f ab60 	beq.w	800375c <_strtod_l+0x274>
 800409c:	2301      	movs	r3, #1
 800409e:	f7ff bb95 	b.w	80037cc <_strtod_l+0x2e4>
 80040a2:	bf00      	nop
 80040a4:	f3af 8000 	nop.w
 80040a8:	ffc00000 	.word	0xffc00000
 80040ac:	41dfffff 	.word	0x41dfffff
 80040b0:	94a03595 	.word	0x94a03595
 80040b4:	3fcfffff 	.word	0x3fcfffff

080040b8 <_strtod_r>:
 80040b8:	4b01      	ldr	r3, [pc, #4]	; (80040c0 <_strtod_r+0x8>)
 80040ba:	f7ff ba15 	b.w	80034e8 <_strtod_l>
 80040be:	bf00      	nop
 80040c0:	20000074 	.word	0x20000074

080040c4 <_strtol_l.constprop.0>:
 80040c4:	2b01      	cmp	r3, #1
 80040c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040ca:	4680      	mov	r8, r0
 80040cc:	d001      	beq.n	80040d2 <_strtol_l.constprop.0+0xe>
 80040ce:	2b24      	cmp	r3, #36	; 0x24
 80040d0:	d906      	bls.n	80040e0 <_strtol_l.constprop.0+0x1c>
 80040d2:	f7fe f9b7 	bl	8002444 <__errno>
 80040d6:	2316      	movs	r3, #22
 80040d8:	6003      	str	r3, [r0, #0]
 80040da:	2000      	movs	r0, #0
 80040dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80040e0:	460d      	mov	r5, r1
 80040e2:	4f35      	ldr	r7, [pc, #212]	; (80041b8 <_strtol_l.constprop.0+0xf4>)
 80040e4:	4628      	mov	r0, r5
 80040e6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80040ea:	5de6      	ldrb	r6, [r4, r7]
 80040ec:	f016 0608 	ands.w	r6, r6, #8
 80040f0:	d1f8      	bne.n	80040e4 <_strtol_l.constprop.0+0x20>
 80040f2:	2c2d      	cmp	r4, #45	; 0x2d
 80040f4:	d12f      	bne.n	8004156 <_strtol_l.constprop.0+0x92>
 80040f6:	2601      	movs	r6, #1
 80040f8:	782c      	ldrb	r4, [r5, #0]
 80040fa:	1c85      	adds	r5, r0, #2
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d057      	beq.n	80041b0 <_strtol_l.constprop.0+0xec>
 8004100:	2b10      	cmp	r3, #16
 8004102:	d109      	bne.n	8004118 <_strtol_l.constprop.0+0x54>
 8004104:	2c30      	cmp	r4, #48	; 0x30
 8004106:	d107      	bne.n	8004118 <_strtol_l.constprop.0+0x54>
 8004108:	7828      	ldrb	r0, [r5, #0]
 800410a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800410e:	2858      	cmp	r0, #88	; 0x58
 8004110:	d149      	bne.n	80041a6 <_strtol_l.constprop.0+0xe2>
 8004112:	2310      	movs	r3, #16
 8004114:	786c      	ldrb	r4, [r5, #1]
 8004116:	3502      	adds	r5, #2
 8004118:	2700      	movs	r7, #0
 800411a:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 800411e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8004122:	fbbe f9f3 	udiv	r9, lr, r3
 8004126:	4638      	mov	r0, r7
 8004128:	fb03 ea19 	mls	sl, r3, r9, lr
 800412c:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8004130:	f1bc 0f09 	cmp.w	ip, #9
 8004134:	d814      	bhi.n	8004160 <_strtol_l.constprop.0+0x9c>
 8004136:	4664      	mov	r4, ip
 8004138:	42a3      	cmp	r3, r4
 800413a:	dd22      	ble.n	8004182 <_strtol_l.constprop.0+0xbe>
 800413c:	2f00      	cmp	r7, #0
 800413e:	db1d      	blt.n	800417c <_strtol_l.constprop.0+0xb8>
 8004140:	4581      	cmp	r9, r0
 8004142:	d31b      	bcc.n	800417c <_strtol_l.constprop.0+0xb8>
 8004144:	d101      	bne.n	800414a <_strtol_l.constprop.0+0x86>
 8004146:	45a2      	cmp	sl, r4
 8004148:	db18      	blt.n	800417c <_strtol_l.constprop.0+0xb8>
 800414a:	2701      	movs	r7, #1
 800414c:	fb00 4003 	mla	r0, r0, r3, r4
 8004150:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004154:	e7ea      	b.n	800412c <_strtol_l.constprop.0+0x68>
 8004156:	2c2b      	cmp	r4, #43	; 0x2b
 8004158:	bf04      	itt	eq
 800415a:	782c      	ldrbeq	r4, [r5, #0]
 800415c:	1c85      	addeq	r5, r0, #2
 800415e:	e7cd      	b.n	80040fc <_strtol_l.constprop.0+0x38>
 8004160:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8004164:	f1bc 0f19 	cmp.w	ip, #25
 8004168:	d801      	bhi.n	800416e <_strtol_l.constprop.0+0xaa>
 800416a:	3c37      	subs	r4, #55	; 0x37
 800416c:	e7e4      	b.n	8004138 <_strtol_l.constprop.0+0x74>
 800416e:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8004172:	f1bc 0f19 	cmp.w	ip, #25
 8004176:	d804      	bhi.n	8004182 <_strtol_l.constprop.0+0xbe>
 8004178:	3c57      	subs	r4, #87	; 0x57
 800417a:	e7dd      	b.n	8004138 <_strtol_l.constprop.0+0x74>
 800417c:	f04f 37ff 	mov.w	r7, #4294967295
 8004180:	e7e6      	b.n	8004150 <_strtol_l.constprop.0+0x8c>
 8004182:	2f00      	cmp	r7, #0
 8004184:	da07      	bge.n	8004196 <_strtol_l.constprop.0+0xd2>
 8004186:	2322      	movs	r3, #34	; 0x22
 8004188:	4670      	mov	r0, lr
 800418a:	f8c8 3000 	str.w	r3, [r8]
 800418e:	2a00      	cmp	r2, #0
 8004190:	d0a4      	beq.n	80040dc <_strtol_l.constprop.0+0x18>
 8004192:	1e69      	subs	r1, r5, #1
 8004194:	e005      	b.n	80041a2 <_strtol_l.constprop.0+0xde>
 8004196:	b106      	cbz	r6, 800419a <_strtol_l.constprop.0+0xd6>
 8004198:	4240      	negs	r0, r0
 800419a:	2a00      	cmp	r2, #0
 800419c:	d09e      	beq.n	80040dc <_strtol_l.constprop.0+0x18>
 800419e:	2f00      	cmp	r7, #0
 80041a0:	d1f7      	bne.n	8004192 <_strtol_l.constprop.0+0xce>
 80041a2:	6011      	str	r1, [r2, #0]
 80041a4:	e79a      	b.n	80040dc <_strtol_l.constprop.0+0x18>
 80041a6:	2430      	movs	r4, #48	; 0x30
 80041a8:	2b00      	cmp	r3, #0
 80041aa:	d1b5      	bne.n	8004118 <_strtol_l.constprop.0+0x54>
 80041ac:	2308      	movs	r3, #8
 80041ae:	e7b3      	b.n	8004118 <_strtol_l.constprop.0+0x54>
 80041b0:	2c30      	cmp	r4, #48	; 0x30
 80041b2:	d0a9      	beq.n	8004108 <_strtol_l.constprop.0+0x44>
 80041b4:	230a      	movs	r3, #10
 80041b6:	e7af      	b.n	8004118 <_strtol_l.constprop.0+0x54>
 80041b8:	08007bc1 	.word	0x08007bc1

080041bc <_strtol_r>:
 80041bc:	f7ff bf82 	b.w	80040c4 <_strtol_l.constprop.0>

080041c0 <__swbuf_r>:
 80041c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80041c2:	460e      	mov	r6, r1
 80041c4:	4614      	mov	r4, r2
 80041c6:	4605      	mov	r5, r0
 80041c8:	b118      	cbz	r0, 80041d2 <__swbuf_r+0x12>
 80041ca:	6983      	ldr	r3, [r0, #24]
 80041cc:	b90b      	cbnz	r3, 80041d2 <__swbuf_r+0x12>
 80041ce:	f001 f859 	bl	8005284 <__sinit>
 80041d2:	4b21      	ldr	r3, [pc, #132]	; (8004258 <__swbuf_r+0x98>)
 80041d4:	429c      	cmp	r4, r3
 80041d6:	d12b      	bne.n	8004230 <__swbuf_r+0x70>
 80041d8:	686c      	ldr	r4, [r5, #4]
 80041da:	69a3      	ldr	r3, [r4, #24]
 80041dc:	60a3      	str	r3, [r4, #8]
 80041de:	89a3      	ldrh	r3, [r4, #12]
 80041e0:	071a      	lsls	r2, r3, #28
 80041e2:	d52f      	bpl.n	8004244 <__swbuf_r+0x84>
 80041e4:	6923      	ldr	r3, [r4, #16]
 80041e6:	b36b      	cbz	r3, 8004244 <__swbuf_r+0x84>
 80041e8:	6923      	ldr	r3, [r4, #16]
 80041ea:	6820      	ldr	r0, [r4, #0]
 80041ec:	b2f6      	uxtb	r6, r6
 80041ee:	1ac0      	subs	r0, r0, r3
 80041f0:	6963      	ldr	r3, [r4, #20]
 80041f2:	4637      	mov	r7, r6
 80041f4:	4283      	cmp	r3, r0
 80041f6:	dc04      	bgt.n	8004202 <__swbuf_r+0x42>
 80041f8:	4621      	mov	r1, r4
 80041fa:	4628      	mov	r0, r5
 80041fc:	f000 ff9c 	bl	8005138 <_fflush_r>
 8004200:	bb30      	cbnz	r0, 8004250 <__swbuf_r+0x90>
 8004202:	68a3      	ldr	r3, [r4, #8]
 8004204:	3001      	adds	r0, #1
 8004206:	3b01      	subs	r3, #1
 8004208:	60a3      	str	r3, [r4, #8]
 800420a:	6823      	ldr	r3, [r4, #0]
 800420c:	1c5a      	adds	r2, r3, #1
 800420e:	6022      	str	r2, [r4, #0]
 8004210:	701e      	strb	r6, [r3, #0]
 8004212:	6963      	ldr	r3, [r4, #20]
 8004214:	4283      	cmp	r3, r0
 8004216:	d004      	beq.n	8004222 <__swbuf_r+0x62>
 8004218:	89a3      	ldrh	r3, [r4, #12]
 800421a:	07db      	lsls	r3, r3, #31
 800421c:	d506      	bpl.n	800422c <__swbuf_r+0x6c>
 800421e:	2e0a      	cmp	r6, #10
 8004220:	d104      	bne.n	800422c <__swbuf_r+0x6c>
 8004222:	4621      	mov	r1, r4
 8004224:	4628      	mov	r0, r5
 8004226:	f000 ff87 	bl	8005138 <_fflush_r>
 800422a:	b988      	cbnz	r0, 8004250 <__swbuf_r+0x90>
 800422c:	4638      	mov	r0, r7
 800422e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004230:	4b0a      	ldr	r3, [pc, #40]	; (800425c <__swbuf_r+0x9c>)
 8004232:	429c      	cmp	r4, r3
 8004234:	d101      	bne.n	800423a <__swbuf_r+0x7a>
 8004236:	68ac      	ldr	r4, [r5, #8]
 8004238:	e7cf      	b.n	80041da <__swbuf_r+0x1a>
 800423a:	4b09      	ldr	r3, [pc, #36]	; (8004260 <__swbuf_r+0xa0>)
 800423c:	429c      	cmp	r4, r3
 800423e:	bf08      	it	eq
 8004240:	68ec      	ldreq	r4, [r5, #12]
 8004242:	e7ca      	b.n	80041da <__swbuf_r+0x1a>
 8004244:	4621      	mov	r1, r4
 8004246:	4628      	mov	r0, r5
 8004248:	f000 f80c 	bl	8004264 <__swsetup_r>
 800424c:	2800      	cmp	r0, #0
 800424e:	d0cb      	beq.n	80041e8 <__swbuf_r+0x28>
 8004250:	f04f 37ff 	mov.w	r7, #4294967295
 8004254:	e7ea      	b.n	800422c <__swbuf_r+0x6c>
 8004256:	bf00      	nop
 8004258:	08007d74 	.word	0x08007d74
 800425c:	08007d94 	.word	0x08007d94
 8004260:	08007d54 	.word	0x08007d54

08004264 <__swsetup_r>:
 8004264:	4b32      	ldr	r3, [pc, #200]	; (8004330 <__swsetup_r+0xcc>)
 8004266:	b570      	push	{r4, r5, r6, lr}
 8004268:	681d      	ldr	r5, [r3, #0]
 800426a:	4606      	mov	r6, r0
 800426c:	460c      	mov	r4, r1
 800426e:	b125      	cbz	r5, 800427a <__swsetup_r+0x16>
 8004270:	69ab      	ldr	r3, [r5, #24]
 8004272:	b913      	cbnz	r3, 800427a <__swsetup_r+0x16>
 8004274:	4628      	mov	r0, r5
 8004276:	f001 f805 	bl	8005284 <__sinit>
 800427a:	4b2e      	ldr	r3, [pc, #184]	; (8004334 <__swsetup_r+0xd0>)
 800427c:	429c      	cmp	r4, r3
 800427e:	d10f      	bne.n	80042a0 <__swsetup_r+0x3c>
 8004280:	686c      	ldr	r4, [r5, #4]
 8004282:	89a3      	ldrh	r3, [r4, #12]
 8004284:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004288:	0719      	lsls	r1, r3, #28
 800428a:	d42c      	bmi.n	80042e6 <__swsetup_r+0x82>
 800428c:	06dd      	lsls	r5, r3, #27
 800428e:	d411      	bmi.n	80042b4 <__swsetup_r+0x50>
 8004290:	2309      	movs	r3, #9
 8004292:	6033      	str	r3, [r6, #0]
 8004294:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004298:	f04f 30ff 	mov.w	r0, #4294967295
 800429c:	81a3      	strh	r3, [r4, #12]
 800429e:	e03e      	b.n	800431e <__swsetup_r+0xba>
 80042a0:	4b25      	ldr	r3, [pc, #148]	; (8004338 <__swsetup_r+0xd4>)
 80042a2:	429c      	cmp	r4, r3
 80042a4:	d101      	bne.n	80042aa <__swsetup_r+0x46>
 80042a6:	68ac      	ldr	r4, [r5, #8]
 80042a8:	e7eb      	b.n	8004282 <__swsetup_r+0x1e>
 80042aa:	4b24      	ldr	r3, [pc, #144]	; (800433c <__swsetup_r+0xd8>)
 80042ac:	429c      	cmp	r4, r3
 80042ae:	bf08      	it	eq
 80042b0:	68ec      	ldreq	r4, [r5, #12]
 80042b2:	e7e6      	b.n	8004282 <__swsetup_r+0x1e>
 80042b4:	0758      	lsls	r0, r3, #29
 80042b6:	d512      	bpl.n	80042de <__swsetup_r+0x7a>
 80042b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80042ba:	b141      	cbz	r1, 80042ce <__swsetup_r+0x6a>
 80042bc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80042c0:	4299      	cmp	r1, r3
 80042c2:	d002      	beq.n	80042ca <__swsetup_r+0x66>
 80042c4:	4630      	mov	r0, r6
 80042c6:	f002 f96b 	bl	80065a0 <_free_r>
 80042ca:	2300      	movs	r3, #0
 80042cc:	6363      	str	r3, [r4, #52]	; 0x34
 80042ce:	89a3      	ldrh	r3, [r4, #12]
 80042d0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80042d4:	81a3      	strh	r3, [r4, #12]
 80042d6:	2300      	movs	r3, #0
 80042d8:	6063      	str	r3, [r4, #4]
 80042da:	6923      	ldr	r3, [r4, #16]
 80042dc:	6023      	str	r3, [r4, #0]
 80042de:	89a3      	ldrh	r3, [r4, #12]
 80042e0:	f043 0308 	orr.w	r3, r3, #8
 80042e4:	81a3      	strh	r3, [r4, #12]
 80042e6:	6923      	ldr	r3, [r4, #16]
 80042e8:	b94b      	cbnz	r3, 80042fe <__swsetup_r+0x9a>
 80042ea:	89a3      	ldrh	r3, [r4, #12]
 80042ec:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80042f0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80042f4:	d003      	beq.n	80042fe <__swsetup_r+0x9a>
 80042f6:	4621      	mov	r1, r4
 80042f8:	4630      	mov	r0, r6
 80042fa:	f001 fc0f 	bl	8005b1c <__smakebuf_r>
 80042fe:	89a0      	ldrh	r0, [r4, #12]
 8004300:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004304:	f010 0301 	ands.w	r3, r0, #1
 8004308:	d00a      	beq.n	8004320 <__swsetup_r+0xbc>
 800430a:	2300      	movs	r3, #0
 800430c:	60a3      	str	r3, [r4, #8]
 800430e:	6963      	ldr	r3, [r4, #20]
 8004310:	425b      	negs	r3, r3
 8004312:	61a3      	str	r3, [r4, #24]
 8004314:	6923      	ldr	r3, [r4, #16]
 8004316:	b943      	cbnz	r3, 800432a <__swsetup_r+0xc6>
 8004318:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800431c:	d1ba      	bne.n	8004294 <__swsetup_r+0x30>
 800431e:	bd70      	pop	{r4, r5, r6, pc}
 8004320:	0781      	lsls	r1, r0, #30
 8004322:	bf58      	it	pl
 8004324:	6963      	ldrpl	r3, [r4, #20]
 8004326:	60a3      	str	r3, [r4, #8]
 8004328:	e7f4      	b.n	8004314 <__swsetup_r+0xb0>
 800432a:	2000      	movs	r0, #0
 800432c:	e7f7      	b.n	800431e <__swsetup_r+0xba>
 800432e:	bf00      	nop
 8004330:	2000000c 	.word	0x2000000c
 8004334:	08007d74 	.word	0x08007d74
 8004338:	08007d94 	.word	0x08007d94
 800433c:	08007d54 	.word	0x08007d54

08004340 <quorem>:
 8004340:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004344:	6903      	ldr	r3, [r0, #16]
 8004346:	690c      	ldr	r4, [r1, #16]
 8004348:	4607      	mov	r7, r0
 800434a:	42a3      	cmp	r3, r4
 800434c:	f2c0 8082 	blt.w	8004454 <quorem+0x114>
 8004350:	3c01      	subs	r4, #1
 8004352:	f100 0514 	add.w	r5, r0, #20
 8004356:	f101 0814 	add.w	r8, r1, #20
 800435a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800435e:	9301      	str	r3, [sp, #4]
 8004360:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004364:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004368:	3301      	adds	r3, #1
 800436a:	429a      	cmp	r2, r3
 800436c:	fbb2 f6f3 	udiv	r6, r2, r3
 8004370:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8004374:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004378:	d331      	bcc.n	80043de <quorem+0x9e>
 800437a:	f04f 0e00 	mov.w	lr, #0
 800437e:	4640      	mov	r0, r8
 8004380:	46ac      	mov	ip, r5
 8004382:	46f2      	mov	sl, lr
 8004384:	f850 2b04 	ldr.w	r2, [r0], #4
 8004388:	b293      	uxth	r3, r2
 800438a:	fb06 e303 	mla	r3, r6, r3, lr
 800438e:	0c12      	lsrs	r2, r2, #16
 8004390:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8004394:	b29b      	uxth	r3, r3
 8004396:	fb06 e202 	mla	r2, r6, r2, lr
 800439a:	ebaa 0303 	sub.w	r3, sl, r3
 800439e:	f8dc a000 	ldr.w	sl, [ip]
 80043a2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80043a6:	fa1f fa8a 	uxth.w	sl, sl
 80043aa:	4453      	add	r3, sl
 80043ac:	f8dc a000 	ldr.w	sl, [ip]
 80043b0:	b292      	uxth	r2, r2
 80043b2:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80043b6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80043ba:	b29b      	uxth	r3, r3
 80043bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80043c0:	4581      	cmp	r9, r0
 80043c2:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80043c6:	f84c 3b04 	str.w	r3, [ip], #4
 80043ca:	d2db      	bcs.n	8004384 <quorem+0x44>
 80043cc:	f855 300b 	ldr.w	r3, [r5, fp]
 80043d0:	b92b      	cbnz	r3, 80043de <quorem+0x9e>
 80043d2:	9b01      	ldr	r3, [sp, #4]
 80043d4:	3b04      	subs	r3, #4
 80043d6:	429d      	cmp	r5, r3
 80043d8:	461a      	mov	r2, r3
 80043da:	d32f      	bcc.n	800443c <quorem+0xfc>
 80043dc:	613c      	str	r4, [r7, #16]
 80043de:	4638      	mov	r0, r7
 80043e0:	f001 feda 	bl	8006198 <__mcmp>
 80043e4:	2800      	cmp	r0, #0
 80043e6:	db25      	blt.n	8004434 <quorem+0xf4>
 80043e8:	4628      	mov	r0, r5
 80043ea:	f04f 0c00 	mov.w	ip, #0
 80043ee:	3601      	adds	r6, #1
 80043f0:	f858 1b04 	ldr.w	r1, [r8], #4
 80043f4:	f8d0 e000 	ldr.w	lr, [r0]
 80043f8:	b28b      	uxth	r3, r1
 80043fa:	ebac 0303 	sub.w	r3, ip, r3
 80043fe:	fa1f f28e 	uxth.w	r2, lr
 8004402:	4413      	add	r3, r2
 8004404:	0c0a      	lsrs	r2, r1, #16
 8004406:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800440a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800440e:	b29b      	uxth	r3, r3
 8004410:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004414:	45c1      	cmp	r9, r8
 8004416:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800441a:	f840 3b04 	str.w	r3, [r0], #4
 800441e:	d2e7      	bcs.n	80043f0 <quorem+0xb0>
 8004420:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004424:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004428:	b922      	cbnz	r2, 8004434 <quorem+0xf4>
 800442a:	3b04      	subs	r3, #4
 800442c:	429d      	cmp	r5, r3
 800442e:	461a      	mov	r2, r3
 8004430:	d30a      	bcc.n	8004448 <quorem+0x108>
 8004432:	613c      	str	r4, [r7, #16]
 8004434:	4630      	mov	r0, r6
 8004436:	b003      	add	sp, #12
 8004438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800443c:	6812      	ldr	r2, [r2, #0]
 800443e:	3b04      	subs	r3, #4
 8004440:	2a00      	cmp	r2, #0
 8004442:	d1cb      	bne.n	80043dc <quorem+0x9c>
 8004444:	3c01      	subs	r4, #1
 8004446:	e7c6      	b.n	80043d6 <quorem+0x96>
 8004448:	6812      	ldr	r2, [r2, #0]
 800444a:	3b04      	subs	r3, #4
 800444c:	2a00      	cmp	r2, #0
 800444e:	d1f0      	bne.n	8004432 <quorem+0xf2>
 8004450:	3c01      	subs	r4, #1
 8004452:	e7eb      	b.n	800442c <quorem+0xec>
 8004454:	2000      	movs	r0, #0
 8004456:	e7ee      	b.n	8004436 <quorem+0xf6>

08004458 <_dtoa_r>:
 8004458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800445c:	4616      	mov	r6, r2
 800445e:	461f      	mov	r7, r3
 8004460:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004462:	b099      	sub	sp, #100	; 0x64
 8004464:	4605      	mov	r5, r0
 8004466:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800446a:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800446e:	b974      	cbnz	r4, 800448e <_dtoa_r+0x36>
 8004470:	2010      	movs	r0, #16
 8004472:	f001 fb93 	bl	8005b9c <malloc>
 8004476:	4602      	mov	r2, r0
 8004478:	6268      	str	r0, [r5, #36]	; 0x24
 800447a:	b920      	cbnz	r0, 8004486 <_dtoa_r+0x2e>
 800447c:	21ea      	movs	r1, #234	; 0xea
 800447e:	4ba8      	ldr	r3, [pc, #672]	; (8004720 <_dtoa_r+0x2c8>)
 8004480:	48a8      	ldr	r0, [pc, #672]	; (8004724 <_dtoa_r+0x2cc>)
 8004482:	f003 f9dd 	bl	8007840 <__assert_func>
 8004486:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800448a:	6004      	str	r4, [r0, #0]
 800448c:	60c4      	str	r4, [r0, #12]
 800448e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004490:	6819      	ldr	r1, [r3, #0]
 8004492:	b151      	cbz	r1, 80044aa <_dtoa_r+0x52>
 8004494:	685a      	ldr	r2, [r3, #4]
 8004496:	2301      	movs	r3, #1
 8004498:	4093      	lsls	r3, r2
 800449a:	604a      	str	r2, [r1, #4]
 800449c:	608b      	str	r3, [r1, #8]
 800449e:	4628      	mov	r0, r5
 80044a0:	f001 fbf2 	bl	8005c88 <_Bfree>
 80044a4:	2200      	movs	r2, #0
 80044a6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80044a8:	601a      	str	r2, [r3, #0]
 80044aa:	1e3b      	subs	r3, r7, #0
 80044ac:	bfaf      	iteee	ge
 80044ae:	2300      	movge	r3, #0
 80044b0:	2201      	movlt	r2, #1
 80044b2:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80044b6:	9305      	strlt	r3, [sp, #20]
 80044b8:	bfa8      	it	ge
 80044ba:	f8c8 3000 	strge.w	r3, [r8]
 80044be:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80044c2:	4b99      	ldr	r3, [pc, #612]	; (8004728 <_dtoa_r+0x2d0>)
 80044c4:	bfb8      	it	lt
 80044c6:	f8c8 2000 	strlt.w	r2, [r8]
 80044ca:	ea33 0309 	bics.w	r3, r3, r9
 80044ce:	d119      	bne.n	8004504 <_dtoa_r+0xac>
 80044d0:	f242 730f 	movw	r3, #9999	; 0x270f
 80044d4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80044d6:	6013      	str	r3, [r2, #0]
 80044d8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80044dc:	4333      	orrs	r3, r6
 80044de:	f000 857f 	beq.w	8004fe0 <_dtoa_r+0xb88>
 80044e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80044e4:	b953      	cbnz	r3, 80044fc <_dtoa_r+0xa4>
 80044e6:	4b91      	ldr	r3, [pc, #580]	; (800472c <_dtoa_r+0x2d4>)
 80044e8:	e022      	b.n	8004530 <_dtoa_r+0xd8>
 80044ea:	4b91      	ldr	r3, [pc, #580]	; (8004730 <_dtoa_r+0x2d8>)
 80044ec:	9303      	str	r3, [sp, #12]
 80044ee:	3308      	adds	r3, #8
 80044f0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80044f2:	6013      	str	r3, [r2, #0]
 80044f4:	9803      	ldr	r0, [sp, #12]
 80044f6:	b019      	add	sp, #100	; 0x64
 80044f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044fc:	4b8b      	ldr	r3, [pc, #556]	; (800472c <_dtoa_r+0x2d4>)
 80044fe:	9303      	str	r3, [sp, #12]
 8004500:	3303      	adds	r3, #3
 8004502:	e7f5      	b.n	80044f0 <_dtoa_r+0x98>
 8004504:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8004508:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800450c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004510:	2200      	movs	r2, #0
 8004512:	2300      	movs	r3, #0
 8004514:	f7fc fab4 	bl	8000a80 <__aeabi_dcmpeq>
 8004518:	4680      	mov	r8, r0
 800451a:	b158      	cbz	r0, 8004534 <_dtoa_r+0xdc>
 800451c:	2301      	movs	r3, #1
 800451e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004520:	6013      	str	r3, [r2, #0]
 8004522:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004524:	2b00      	cmp	r3, #0
 8004526:	f000 8558 	beq.w	8004fda <_dtoa_r+0xb82>
 800452a:	4882      	ldr	r0, [pc, #520]	; (8004734 <_dtoa_r+0x2dc>)
 800452c:	6018      	str	r0, [r3, #0]
 800452e:	1e43      	subs	r3, r0, #1
 8004530:	9303      	str	r3, [sp, #12]
 8004532:	e7df      	b.n	80044f4 <_dtoa_r+0x9c>
 8004534:	ab16      	add	r3, sp, #88	; 0x58
 8004536:	9301      	str	r3, [sp, #4]
 8004538:	ab17      	add	r3, sp, #92	; 0x5c
 800453a:	9300      	str	r3, [sp, #0]
 800453c:	4628      	mov	r0, r5
 800453e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8004542:	f001 ff4b 	bl	80063dc <__d2b>
 8004546:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800454a:	4683      	mov	fp, r0
 800454c:	2c00      	cmp	r4, #0
 800454e:	d07f      	beq.n	8004650 <_dtoa_r+0x1f8>
 8004550:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004554:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004556:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800455a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800455e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8004562:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8004566:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800456a:	2200      	movs	r2, #0
 800456c:	4b72      	ldr	r3, [pc, #456]	; (8004738 <_dtoa_r+0x2e0>)
 800456e:	f7fb fe67 	bl	8000240 <__aeabi_dsub>
 8004572:	a365      	add	r3, pc, #404	; (adr r3, 8004708 <_dtoa_r+0x2b0>)
 8004574:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004578:	f7fc f81a 	bl	80005b0 <__aeabi_dmul>
 800457c:	a364      	add	r3, pc, #400	; (adr r3, 8004710 <_dtoa_r+0x2b8>)
 800457e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004582:	f7fb fe5f 	bl	8000244 <__adddf3>
 8004586:	4606      	mov	r6, r0
 8004588:	4620      	mov	r0, r4
 800458a:	460f      	mov	r7, r1
 800458c:	f7fb ffa6 	bl	80004dc <__aeabi_i2d>
 8004590:	a361      	add	r3, pc, #388	; (adr r3, 8004718 <_dtoa_r+0x2c0>)
 8004592:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004596:	f7fc f80b 	bl	80005b0 <__aeabi_dmul>
 800459a:	4602      	mov	r2, r0
 800459c:	460b      	mov	r3, r1
 800459e:	4630      	mov	r0, r6
 80045a0:	4639      	mov	r1, r7
 80045a2:	f7fb fe4f 	bl	8000244 <__adddf3>
 80045a6:	4606      	mov	r6, r0
 80045a8:	460f      	mov	r7, r1
 80045aa:	f7fc fab1 	bl	8000b10 <__aeabi_d2iz>
 80045ae:	2200      	movs	r2, #0
 80045b0:	4682      	mov	sl, r0
 80045b2:	2300      	movs	r3, #0
 80045b4:	4630      	mov	r0, r6
 80045b6:	4639      	mov	r1, r7
 80045b8:	f7fc fa6c 	bl	8000a94 <__aeabi_dcmplt>
 80045bc:	b148      	cbz	r0, 80045d2 <_dtoa_r+0x17a>
 80045be:	4650      	mov	r0, sl
 80045c0:	f7fb ff8c 	bl	80004dc <__aeabi_i2d>
 80045c4:	4632      	mov	r2, r6
 80045c6:	463b      	mov	r3, r7
 80045c8:	f7fc fa5a 	bl	8000a80 <__aeabi_dcmpeq>
 80045cc:	b908      	cbnz	r0, 80045d2 <_dtoa_r+0x17a>
 80045ce:	f10a 3aff 	add.w	sl, sl, #4294967295
 80045d2:	f1ba 0f16 	cmp.w	sl, #22
 80045d6:	d858      	bhi.n	800468a <_dtoa_r+0x232>
 80045d8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80045dc:	4b57      	ldr	r3, [pc, #348]	; (800473c <_dtoa_r+0x2e4>)
 80045de:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80045e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80045e6:	f7fc fa55 	bl	8000a94 <__aeabi_dcmplt>
 80045ea:	2800      	cmp	r0, #0
 80045ec:	d04f      	beq.n	800468e <_dtoa_r+0x236>
 80045ee:	2300      	movs	r3, #0
 80045f0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80045f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80045f6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80045f8:	1b1c      	subs	r4, r3, r4
 80045fa:	1e63      	subs	r3, r4, #1
 80045fc:	9309      	str	r3, [sp, #36]	; 0x24
 80045fe:	bf49      	itett	mi
 8004600:	f1c4 0301 	rsbmi	r3, r4, #1
 8004604:	2300      	movpl	r3, #0
 8004606:	9306      	strmi	r3, [sp, #24]
 8004608:	2300      	movmi	r3, #0
 800460a:	bf54      	ite	pl
 800460c:	9306      	strpl	r3, [sp, #24]
 800460e:	9309      	strmi	r3, [sp, #36]	; 0x24
 8004610:	f1ba 0f00 	cmp.w	sl, #0
 8004614:	db3d      	blt.n	8004692 <_dtoa_r+0x23a>
 8004616:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004618:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800461c:	4453      	add	r3, sl
 800461e:	9309      	str	r3, [sp, #36]	; 0x24
 8004620:	2300      	movs	r3, #0
 8004622:	930a      	str	r3, [sp, #40]	; 0x28
 8004624:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004626:	2b09      	cmp	r3, #9
 8004628:	f200 808c 	bhi.w	8004744 <_dtoa_r+0x2ec>
 800462c:	2b05      	cmp	r3, #5
 800462e:	bfc4      	itt	gt
 8004630:	3b04      	subgt	r3, #4
 8004632:	9322      	strgt	r3, [sp, #136]	; 0x88
 8004634:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004636:	bfc8      	it	gt
 8004638:	2400      	movgt	r4, #0
 800463a:	f1a3 0302 	sub.w	r3, r3, #2
 800463e:	bfd8      	it	le
 8004640:	2401      	movle	r4, #1
 8004642:	2b03      	cmp	r3, #3
 8004644:	f200 808a 	bhi.w	800475c <_dtoa_r+0x304>
 8004648:	e8df f003 	tbb	[pc, r3]
 800464c:	5b4d4f2d 	.word	0x5b4d4f2d
 8004650:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8004654:	441c      	add	r4, r3
 8004656:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800465a:	2b20      	cmp	r3, #32
 800465c:	bfc3      	ittte	gt
 800465e:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8004662:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8004666:	fa09 f303 	lslgt.w	r3, r9, r3
 800466a:	f1c3 0320 	rsble	r3, r3, #32
 800466e:	bfc6      	itte	gt
 8004670:	fa26 f000 	lsrgt.w	r0, r6, r0
 8004674:	4318      	orrgt	r0, r3
 8004676:	fa06 f003 	lslle.w	r0, r6, r3
 800467a:	f7fb ff1f 	bl	80004bc <__aeabi_ui2d>
 800467e:	2301      	movs	r3, #1
 8004680:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8004684:	3c01      	subs	r4, #1
 8004686:	9313      	str	r3, [sp, #76]	; 0x4c
 8004688:	e76f      	b.n	800456a <_dtoa_r+0x112>
 800468a:	2301      	movs	r3, #1
 800468c:	e7b2      	b.n	80045f4 <_dtoa_r+0x19c>
 800468e:	900f      	str	r0, [sp, #60]	; 0x3c
 8004690:	e7b1      	b.n	80045f6 <_dtoa_r+0x19e>
 8004692:	9b06      	ldr	r3, [sp, #24]
 8004694:	eba3 030a 	sub.w	r3, r3, sl
 8004698:	9306      	str	r3, [sp, #24]
 800469a:	f1ca 0300 	rsb	r3, sl, #0
 800469e:	930a      	str	r3, [sp, #40]	; 0x28
 80046a0:	2300      	movs	r3, #0
 80046a2:	930e      	str	r3, [sp, #56]	; 0x38
 80046a4:	e7be      	b.n	8004624 <_dtoa_r+0x1cc>
 80046a6:	2300      	movs	r3, #0
 80046a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80046aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	dc58      	bgt.n	8004762 <_dtoa_r+0x30a>
 80046b0:	f04f 0901 	mov.w	r9, #1
 80046b4:	464b      	mov	r3, r9
 80046b6:	f8cd 9020 	str.w	r9, [sp, #32]
 80046ba:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 80046be:	2200      	movs	r2, #0
 80046c0:	6a68      	ldr	r0, [r5, #36]	; 0x24
 80046c2:	6042      	str	r2, [r0, #4]
 80046c4:	2204      	movs	r2, #4
 80046c6:	f102 0614 	add.w	r6, r2, #20
 80046ca:	429e      	cmp	r6, r3
 80046cc:	6841      	ldr	r1, [r0, #4]
 80046ce:	d94e      	bls.n	800476e <_dtoa_r+0x316>
 80046d0:	4628      	mov	r0, r5
 80046d2:	f001 fa99 	bl	8005c08 <_Balloc>
 80046d6:	9003      	str	r0, [sp, #12]
 80046d8:	2800      	cmp	r0, #0
 80046da:	d14c      	bne.n	8004776 <_dtoa_r+0x31e>
 80046dc:	4602      	mov	r2, r0
 80046de:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80046e2:	4b17      	ldr	r3, [pc, #92]	; (8004740 <_dtoa_r+0x2e8>)
 80046e4:	e6cc      	b.n	8004480 <_dtoa_r+0x28>
 80046e6:	2301      	movs	r3, #1
 80046e8:	e7de      	b.n	80046a8 <_dtoa_r+0x250>
 80046ea:	2300      	movs	r3, #0
 80046ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80046ee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80046f0:	eb0a 0903 	add.w	r9, sl, r3
 80046f4:	f109 0301 	add.w	r3, r9, #1
 80046f8:	2b01      	cmp	r3, #1
 80046fa:	9308      	str	r3, [sp, #32]
 80046fc:	bfb8      	it	lt
 80046fe:	2301      	movlt	r3, #1
 8004700:	e7dd      	b.n	80046be <_dtoa_r+0x266>
 8004702:	2301      	movs	r3, #1
 8004704:	e7f2      	b.n	80046ec <_dtoa_r+0x294>
 8004706:	bf00      	nop
 8004708:	636f4361 	.word	0x636f4361
 800470c:	3fd287a7 	.word	0x3fd287a7
 8004710:	8b60c8b3 	.word	0x8b60c8b3
 8004714:	3fc68a28 	.word	0x3fc68a28
 8004718:	509f79fb 	.word	0x509f79fb
 800471c:	3fd34413 	.word	0x3fd34413
 8004720:	08007cce 	.word	0x08007cce
 8004724:	08007ce5 	.word	0x08007ce5
 8004728:	7ff00000 	.word	0x7ff00000
 800472c:	08007cca 	.word	0x08007cca
 8004730:	08007cc1 	.word	0x08007cc1
 8004734:	08007fa2 	.word	0x08007fa2
 8004738:	3ff80000 	.word	0x3ff80000
 800473c:	08007eb8 	.word	0x08007eb8
 8004740:	08007d40 	.word	0x08007d40
 8004744:	2401      	movs	r4, #1
 8004746:	2300      	movs	r3, #0
 8004748:	940b      	str	r4, [sp, #44]	; 0x2c
 800474a:	9322      	str	r3, [sp, #136]	; 0x88
 800474c:	f04f 39ff 	mov.w	r9, #4294967295
 8004750:	2200      	movs	r2, #0
 8004752:	2312      	movs	r3, #18
 8004754:	f8cd 9020 	str.w	r9, [sp, #32]
 8004758:	9223      	str	r2, [sp, #140]	; 0x8c
 800475a:	e7b0      	b.n	80046be <_dtoa_r+0x266>
 800475c:	2301      	movs	r3, #1
 800475e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004760:	e7f4      	b.n	800474c <_dtoa_r+0x2f4>
 8004762:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 8004766:	464b      	mov	r3, r9
 8004768:	f8cd 9020 	str.w	r9, [sp, #32]
 800476c:	e7a7      	b.n	80046be <_dtoa_r+0x266>
 800476e:	3101      	adds	r1, #1
 8004770:	6041      	str	r1, [r0, #4]
 8004772:	0052      	lsls	r2, r2, #1
 8004774:	e7a7      	b.n	80046c6 <_dtoa_r+0x26e>
 8004776:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004778:	9a03      	ldr	r2, [sp, #12]
 800477a:	601a      	str	r2, [r3, #0]
 800477c:	9b08      	ldr	r3, [sp, #32]
 800477e:	2b0e      	cmp	r3, #14
 8004780:	f200 80a8 	bhi.w	80048d4 <_dtoa_r+0x47c>
 8004784:	2c00      	cmp	r4, #0
 8004786:	f000 80a5 	beq.w	80048d4 <_dtoa_r+0x47c>
 800478a:	f1ba 0f00 	cmp.w	sl, #0
 800478e:	dd34      	ble.n	80047fa <_dtoa_r+0x3a2>
 8004790:	4a9a      	ldr	r2, [pc, #616]	; (80049fc <_dtoa_r+0x5a4>)
 8004792:	f00a 030f 	and.w	r3, sl, #15
 8004796:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800479a:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800479e:	e9d3 3400 	ldrd	r3, r4, [r3]
 80047a2:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80047a6:	ea4f 142a 	mov.w	r4, sl, asr #4
 80047aa:	d016      	beq.n	80047da <_dtoa_r+0x382>
 80047ac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80047b0:	4b93      	ldr	r3, [pc, #588]	; (8004a00 <_dtoa_r+0x5a8>)
 80047b2:	2703      	movs	r7, #3
 80047b4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80047b8:	f7fc f824 	bl	8000804 <__aeabi_ddiv>
 80047bc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80047c0:	f004 040f 	and.w	r4, r4, #15
 80047c4:	4e8e      	ldr	r6, [pc, #568]	; (8004a00 <_dtoa_r+0x5a8>)
 80047c6:	b954      	cbnz	r4, 80047de <_dtoa_r+0x386>
 80047c8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80047cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80047d0:	f7fc f818 	bl	8000804 <__aeabi_ddiv>
 80047d4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80047d8:	e029      	b.n	800482e <_dtoa_r+0x3d6>
 80047da:	2702      	movs	r7, #2
 80047dc:	e7f2      	b.n	80047c4 <_dtoa_r+0x36c>
 80047de:	07e1      	lsls	r1, r4, #31
 80047e0:	d508      	bpl.n	80047f4 <_dtoa_r+0x39c>
 80047e2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80047e6:	e9d6 2300 	ldrd	r2, r3, [r6]
 80047ea:	f7fb fee1 	bl	80005b0 <__aeabi_dmul>
 80047ee:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80047f2:	3701      	adds	r7, #1
 80047f4:	1064      	asrs	r4, r4, #1
 80047f6:	3608      	adds	r6, #8
 80047f8:	e7e5      	b.n	80047c6 <_dtoa_r+0x36e>
 80047fa:	f000 80a5 	beq.w	8004948 <_dtoa_r+0x4f0>
 80047fe:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004802:	f1ca 0400 	rsb	r4, sl, #0
 8004806:	4b7d      	ldr	r3, [pc, #500]	; (80049fc <_dtoa_r+0x5a4>)
 8004808:	f004 020f 	and.w	r2, r4, #15
 800480c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004810:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004814:	f7fb fecc 	bl	80005b0 <__aeabi_dmul>
 8004818:	2702      	movs	r7, #2
 800481a:	2300      	movs	r3, #0
 800481c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004820:	4e77      	ldr	r6, [pc, #476]	; (8004a00 <_dtoa_r+0x5a8>)
 8004822:	1124      	asrs	r4, r4, #4
 8004824:	2c00      	cmp	r4, #0
 8004826:	f040 8084 	bne.w	8004932 <_dtoa_r+0x4da>
 800482a:	2b00      	cmp	r3, #0
 800482c:	d1d2      	bne.n	80047d4 <_dtoa_r+0x37c>
 800482e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004830:	2b00      	cmp	r3, #0
 8004832:	f000 808b 	beq.w	800494c <_dtoa_r+0x4f4>
 8004836:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800483a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800483e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004842:	2200      	movs	r2, #0
 8004844:	4b6f      	ldr	r3, [pc, #444]	; (8004a04 <_dtoa_r+0x5ac>)
 8004846:	f7fc f925 	bl	8000a94 <__aeabi_dcmplt>
 800484a:	2800      	cmp	r0, #0
 800484c:	d07e      	beq.n	800494c <_dtoa_r+0x4f4>
 800484e:	9b08      	ldr	r3, [sp, #32]
 8004850:	2b00      	cmp	r3, #0
 8004852:	d07b      	beq.n	800494c <_dtoa_r+0x4f4>
 8004854:	f1b9 0f00 	cmp.w	r9, #0
 8004858:	dd38      	ble.n	80048cc <_dtoa_r+0x474>
 800485a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800485e:	2200      	movs	r2, #0
 8004860:	4b69      	ldr	r3, [pc, #420]	; (8004a08 <_dtoa_r+0x5b0>)
 8004862:	f7fb fea5 	bl	80005b0 <__aeabi_dmul>
 8004866:	464c      	mov	r4, r9
 8004868:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800486c:	f10a 38ff 	add.w	r8, sl, #4294967295
 8004870:	3701      	adds	r7, #1
 8004872:	4638      	mov	r0, r7
 8004874:	f7fb fe32 	bl	80004dc <__aeabi_i2d>
 8004878:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800487c:	f7fb fe98 	bl	80005b0 <__aeabi_dmul>
 8004880:	2200      	movs	r2, #0
 8004882:	4b62      	ldr	r3, [pc, #392]	; (8004a0c <_dtoa_r+0x5b4>)
 8004884:	f7fb fcde 	bl	8000244 <__adddf3>
 8004888:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800488c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004890:	9611      	str	r6, [sp, #68]	; 0x44
 8004892:	2c00      	cmp	r4, #0
 8004894:	d15d      	bne.n	8004952 <_dtoa_r+0x4fa>
 8004896:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800489a:	2200      	movs	r2, #0
 800489c:	4b5c      	ldr	r3, [pc, #368]	; (8004a10 <_dtoa_r+0x5b8>)
 800489e:	f7fb fccf 	bl	8000240 <__aeabi_dsub>
 80048a2:	4602      	mov	r2, r0
 80048a4:	460b      	mov	r3, r1
 80048a6:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80048aa:	4633      	mov	r3, r6
 80048ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80048ae:	f7fc f90f 	bl	8000ad0 <__aeabi_dcmpgt>
 80048b2:	2800      	cmp	r0, #0
 80048b4:	f040 829c 	bne.w	8004df0 <_dtoa_r+0x998>
 80048b8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80048bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80048be:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 80048c2:	f7fc f8e7 	bl	8000a94 <__aeabi_dcmplt>
 80048c6:	2800      	cmp	r0, #0
 80048c8:	f040 8290 	bne.w	8004dec <_dtoa_r+0x994>
 80048cc:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 80048d0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80048d4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80048d6:	2b00      	cmp	r3, #0
 80048d8:	f2c0 8152 	blt.w	8004b80 <_dtoa_r+0x728>
 80048dc:	f1ba 0f0e 	cmp.w	sl, #14
 80048e0:	f300 814e 	bgt.w	8004b80 <_dtoa_r+0x728>
 80048e4:	4b45      	ldr	r3, [pc, #276]	; (80049fc <_dtoa_r+0x5a4>)
 80048e6:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80048ea:	e9d3 3400 	ldrd	r3, r4, [r3]
 80048ee:	e9cd 3406 	strd	r3, r4, [sp, #24]
 80048f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80048f4:	2b00      	cmp	r3, #0
 80048f6:	f280 80db 	bge.w	8004ab0 <_dtoa_r+0x658>
 80048fa:	9b08      	ldr	r3, [sp, #32]
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	f300 80d7 	bgt.w	8004ab0 <_dtoa_r+0x658>
 8004902:	f040 8272 	bne.w	8004dea <_dtoa_r+0x992>
 8004906:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800490a:	2200      	movs	r2, #0
 800490c:	4b40      	ldr	r3, [pc, #256]	; (8004a10 <_dtoa_r+0x5b8>)
 800490e:	f7fb fe4f 	bl	80005b0 <__aeabi_dmul>
 8004912:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004916:	f7fc f8d1 	bl	8000abc <__aeabi_dcmpge>
 800491a:	9c08      	ldr	r4, [sp, #32]
 800491c:	4626      	mov	r6, r4
 800491e:	2800      	cmp	r0, #0
 8004920:	f040 8248 	bne.w	8004db4 <_dtoa_r+0x95c>
 8004924:	2331      	movs	r3, #49	; 0x31
 8004926:	9f03      	ldr	r7, [sp, #12]
 8004928:	f10a 0a01 	add.w	sl, sl, #1
 800492c:	f807 3b01 	strb.w	r3, [r7], #1
 8004930:	e244      	b.n	8004dbc <_dtoa_r+0x964>
 8004932:	07e2      	lsls	r2, r4, #31
 8004934:	d505      	bpl.n	8004942 <_dtoa_r+0x4ea>
 8004936:	e9d6 2300 	ldrd	r2, r3, [r6]
 800493a:	f7fb fe39 	bl	80005b0 <__aeabi_dmul>
 800493e:	2301      	movs	r3, #1
 8004940:	3701      	adds	r7, #1
 8004942:	1064      	asrs	r4, r4, #1
 8004944:	3608      	adds	r6, #8
 8004946:	e76d      	b.n	8004824 <_dtoa_r+0x3cc>
 8004948:	2702      	movs	r7, #2
 800494a:	e770      	b.n	800482e <_dtoa_r+0x3d6>
 800494c:	46d0      	mov	r8, sl
 800494e:	9c08      	ldr	r4, [sp, #32]
 8004950:	e78f      	b.n	8004872 <_dtoa_r+0x41a>
 8004952:	9903      	ldr	r1, [sp, #12]
 8004954:	4b29      	ldr	r3, [pc, #164]	; (80049fc <_dtoa_r+0x5a4>)
 8004956:	4421      	add	r1, r4
 8004958:	9112      	str	r1, [sp, #72]	; 0x48
 800495a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800495c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004960:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8004964:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8004968:	2900      	cmp	r1, #0
 800496a:	d055      	beq.n	8004a18 <_dtoa_r+0x5c0>
 800496c:	2000      	movs	r0, #0
 800496e:	4929      	ldr	r1, [pc, #164]	; (8004a14 <_dtoa_r+0x5bc>)
 8004970:	f7fb ff48 	bl	8000804 <__aeabi_ddiv>
 8004974:	463b      	mov	r3, r7
 8004976:	4632      	mov	r2, r6
 8004978:	f7fb fc62 	bl	8000240 <__aeabi_dsub>
 800497c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004980:	9f03      	ldr	r7, [sp, #12]
 8004982:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004986:	f7fc f8c3 	bl	8000b10 <__aeabi_d2iz>
 800498a:	4604      	mov	r4, r0
 800498c:	f7fb fda6 	bl	80004dc <__aeabi_i2d>
 8004990:	4602      	mov	r2, r0
 8004992:	460b      	mov	r3, r1
 8004994:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004998:	f7fb fc52 	bl	8000240 <__aeabi_dsub>
 800499c:	4602      	mov	r2, r0
 800499e:	460b      	mov	r3, r1
 80049a0:	3430      	adds	r4, #48	; 0x30
 80049a2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80049a6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80049aa:	f807 4b01 	strb.w	r4, [r7], #1
 80049ae:	f7fc f871 	bl	8000a94 <__aeabi_dcmplt>
 80049b2:	2800      	cmp	r0, #0
 80049b4:	d174      	bne.n	8004aa0 <_dtoa_r+0x648>
 80049b6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80049ba:	2000      	movs	r0, #0
 80049bc:	4911      	ldr	r1, [pc, #68]	; (8004a04 <_dtoa_r+0x5ac>)
 80049be:	f7fb fc3f 	bl	8000240 <__aeabi_dsub>
 80049c2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80049c6:	f7fc f865 	bl	8000a94 <__aeabi_dcmplt>
 80049ca:	2800      	cmp	r0, #0
 80049cc:	f040 80b7 	bne.w	8004b3e <_dtoa_r+0x6e6>
 80049d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80049d2:	429f      	cmp	r7, r3
 80049d4:	f43f af7a 	beq.w	80048cc <_dtoa_r+0x474>
 80049d8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80049dc:	2200      	movs	r2, #0
 80049de:	4b0a      	ldr	r3, [pc, #40]	; (8004a08 <_dtoa_r+0x5b0>)
 80049e0:	f7fb fde6 	bl	80005b0 <__aeabi_dmul>
 80049e4:	2200      	movs	r2, #0
 80049e6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80049ea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80049ee:	4b06      	ldr	r3, [pc, #24]	; (8004a08 <_dtoa_r+0x5b0>)
 80049f0:	f7fb fdde 	bl	80005b0 <__aeabi_dmul>
 80049f4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80049f8:	e7c3      	b.n	8004982 <_dtoa_r+0x52a>
 80049fa:	bf00      	nop
 80049fc:	08007eb8 	.word	0x08007eb8
 8004a00:	08007e90 	.word	0x08007e90
 8004a04:	3ff00000 	.word	0x3ff00000
 8004a08:	40240000 	.word	0x40240000
 8004a0c:	401c0000 	.word	0x401c0000
 8004a10:	40140000 	.word	0x40140000
 8004a14:	3fe00000 	.word	0x3fe00000
 8004a18:	4630      	mov	r0, r6
 8004a1a:	4639      	mov	r1, r7
 8004a1c:	f7fb fdc8 	bl	80005b0 <__aeabi_dmul>
 8004a20:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004a22:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004a26:	9c03      	ldr	r4, [sp, #12]
 8004a28:	9314      	str	r3, [sp, #80]	; 0x50
 8004a2a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004a2e:	f7fc f86f 	bl	8000b10 <__aeabi_d2iz>
 8004a32:	9015      	str	r0, [sp, #84]	; 0x54
 8004a34:	f7fb fd52 	bl	80004dc <__aeabi_i2d>
 8004a38:	4602      	mov	r2, r0
 8004a3a:	460b      	mov	r3, r1
 8004a3c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004a40:	f7fb fbfe 	bl	8000240 <__aeabi_dsub>
 8004a44:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004a46:	4606      	mov	r6, r0
 8004a48:	3330      	adds	r3, #48	; 0x30
 8004a4a:	f804 3b01 	strb.w	r3, [r4], #1
 8004a4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004a50:	460f      	mov	r7, r1
 8004a52:	429c      	cmp	r4, r3
 8004a54:	f04f 0200 	mov.w	r2, #0
 8004a58:	d124      	bne.n	8004aa4 <_dtoa_r+0x64c>
 8004a5a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004a5e:	4bb0      	ldr	r3, [pc, #704]	; (8004d20 <_dtoa_r+0x8c8>)
 8004a60:	f7fb fbf0 	bl	8000244 <__adddf3>
 8004a64:	4602      	mov	r2, r0
 8004a66:	460b      	mov	r3, r1
 8004a68:	4630      	mov	r0, r6
 8004a6a:	4639      	mov	r1, r7
 8004a6c:	f7fc f830 	bl	8000ad0 <__aeabi_dcmpgt>
 8004a70:	2800      	cmp	r0, #0
 8004a72:	d163      	bne.n	8004b3c <_dtoa_r+0x6e4>
 8004a74:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004a78:	2000      	movs	r0, #0
 8004a7a:	49a9      	ldr	r1, [pc, #676]	; (8004d20 <_dtoa_r+0x8c8>)
 8004a7c:	f7fb fbe0 	bl	8000240 <__aeabi_dsub>
 8004a80:	4602      	mov	r2, r0
 8004a82:	460b      	mov	r3, r1
 8004a84:	4630      	mov	r0, r6
 8004a86:	4639      	mov	r1, r7
 8004a88:	f7fc f804 	bl	8000a94 <__aeabi_dcmplt>
 8004a8c:	2800      	cmp	r0, #0
 8004a8e:	f43f af1d 	beq.w	80048cc <_dtoa_r+0x474>
 8004a92:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004a94:	1e7b      	subs	r3, r7, #1
 8004a96:	9314      	str	r3, [sp, #80]	; 0x50
 8004a98:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8004a9c:	2b30      	cmp	r3, #48	; 0x30
 8004a9e:	d0f8      	beq.n	8004a92 <_dtoa_r+0x63a>
 8004aa0:	46c2      	mov	sl, r8
 8004aa2:	e03b      	b.n	8004b1c <_dtoa_r+0x6c4>
 8004aa4:	4b9f      	ldr	r3, [pc, #636]	; (8004d24 <_dtoa_r+0x8cc>)
 8004aa6:	f7fb fd83 	bl	80005b0 <__aeabi_dmul>
 8004aaa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004aae:	e7bc      	b.n	8004a2a <_dtoa_r+0x5d2>
 8004ab0:	9f03      	ldr	r7, [sp, #12]
 8004ab2:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8004ab6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004aba:	4640      	mov	r0, r8
 8004abc:	4649      	mov	r1, r9
 8004abe:	f7fb fea1 	bl	8000804 <__aeabi_ddiv>
 8004ac2:	f7fc f825 	bl	8000b10 <__aeabi_d2iz>
 8004ac6:	4604      	mov	r4, r0
 8004ac8:	f7fb fd08 	bl	80004dc <__aeabi_i2d>
 8004acc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004ad0:	f7fb fd6e 	bl	80005b0 <__aeabi_dmul>
 8004ad4:	4602      	mov	r2, r0
 8004ad6:	460b      	mov	r3, r1
 8004ad8:	4640      	mov	r0, r8
 8004ada:	4649      	mov	r1, r9
 8004adc:	f7fb fbb0 	bl	8000240 <__aeabi_dsub>
 8004ae0:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8004ae4:	f807 6b01 	strb.w	r6, [r7], #1
 8004ae8:	9e03      	ldr	r6, [sp, #12]
 8004aea:	f8dd c020 	ldr.w	ip, [sp, #32]
 8004aee:	1bbe      	subs	r6, r7, r6
 8004af0:	45b4      	cmp	ip, r6
 8004af2:	4602      	mov	r2, r0
 8004af4:	460b      	mov	r3, r1
 8004af6:	d136      	bne.n	8004b66 <_dtoa_r+0x70e>
 8004af8:	f7fb fba4 	bl	8000244 <__adddf3>
 8004afc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004b00:	4680      	mov	r8, r0
 8004b02:	4689      	mov	r9, r1
 8004b04:	f7fb ffe4 	bl	8000ad0 <__aeabi_dcmpgt>
 8004b08:	bb58      	cbnz	r0, 8004b62 <_dtoa_r+0x70a>
 8004b0a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004b0e:	4640      	mov	r0, r8
 8004b10:	4649      	mov	r1, r9
 8004b12:	f7fb ffb5 	bl	8000a80 <__aeabi_dcmpeq>
 8004b16:	b108      	cbz	r0, 8004b1c <_dtoa_r+0x6c4>
 8004b18:	07e1      	lsls	r1, r4, #31
 8004b1a:	d422      	bmi.n	8004b62 <_dtoa_r+0x70a>
 8004b1c:	4628      	mov	r0, r5
 8004b1e:	4659      	mov	r1, fp
 8004b20:	f001 f8b2 	bl	8005c88 <_Bfree>
 8004b24:	2300      	movs	r3, #0
 8004b26:	703b      	strb	r3, [r7, #0]
 8004b28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004b2a:	f10a 0001 	add.w	r0, sl, #1
 8004b2e:	6018      	str	r0, [r3, #0]
 8004b30:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	f43f acde 	beq.w	80044f4 <_dtoa_r+0x9c>
 8004b38:	601f      	str	r7, [r3, #0]
 8004b3a:	e4db      	b.n	80044f4 <_dtoa_r+0x9c>
 8004b3c:	4627      	mov	r7, r4
 8004b3e:	463b      	mov	r3, r7
 8004b40:	461f      	mov	r7, r3
 8004b42:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004b46:	2a39      	cmp	r2, #57	; 0x39
 8004b48:	d107      	bne.n	8004b5a <_dtoa_r+0x702>
 8004b4a:	9a03      	ldr	r2, [sp, #12]
 8004b4c:	429a      	cmp	r2, r3
 8004b4e:	d1f7      	bne.n	8004b40 <_dtoa_r+0x6e8>
 8004b50:	2230      	movs	r2, #48	; 0x30
 8004b52:	9903      	ldr	r1, [sp, #12]
 8004b54:	f108 0801 	add.w	r8, r8, #1
 8004b58:	700a      	strb	r2, [r1, #0]
 8004b5a:	781a      	ldrb	r2, [r3, #0]
 8004b5c:	3201      	adds	r2, #1
 8004b5e:	701a      	strb	r2, [r3, #0]
 8004b60:	e79e      	b.n	8004aa0 <_dtoa_r+0x648>
 8004b62:	46d0      	mov	r8, sl
 8004b64:	e7eb      	b.n	8004b3e <_dtoa_r+0x6e6>
 8004b66:	2200      	movs	r2, #0
 8004b68:	4b6e      	ldr	r3, [pc, #440]	; (8004d24 <_dtoa_r+0x8cc>)
 8004b6a:	f7fb fd21 	bl	80005b0 <__aeabi_dmul>
 8004b6e:	2200      	movs	r2, #0
 8004b70:	2300      	movs	r3, #0
 8004b72:	4680      	mov	r8, r0
 8004b74:	4689      	mov	r9, r1
 8004b76:	f7fb ff83 	bl	8000a80 <__aeabi_dcmpeq>
 8004b7a:	2800      	cmp	r0, #0
 8004b7c:	d09b      	beq.n	8004ab6 <_dtoa_r+0x65e>
 8004b7e:	e7cd      	b.n	8004b1c <_dtoa_r+0x6c4>
 8004b80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004b82:	2a00      	cmp	r2, #0
 8004b84:	f000 80d0 	beq.w	8004d28 <_dtoa_r+0x8d0>
 8004b88:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004b8a:	2a01      	cmp	r2, #1
 8004b8c:	f300 80ae 	bgt.w	8004cec <_dtoa_r+0x894>
 8004b90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004b92:	2a00      	cmp	r2, #0
 8004b94:	f000 80a6 	beq.w	8004ce4 <_dtoa_r+0x88c>
 8004b98:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004b9c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004b9e:	9f06      	ldr	r7, [sp, #24]
 8004ba0:	9a06      	ldr	r2, [sp, #24]
 8004ba2:	2101      	movs	r1, #1
 8004ba4:	441a      	add	r2, r3
 8004ba6:	9206      	str	r2, [sp, #24]
 8004ba8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004baa:	4628      	mov	r0, r5
 8004bac:	441a      	add	r2, r3
 8004bae:	9209      	str	r2, [sp, #36]	; 0x24
 8004bb0:	f001 f96a 	bl	8005e88 <__i2b>
 8004bb4:	4606      	mov	r6, r0
 8004bb6:	2f00      	cmp	r7, #0
 8004bb8:	dd0c      	ble.n	8004bd4 <_dtoa_r+0x77c>
 8004bba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	dd09      	ble.n	8004bd4 <_dtoa_r+0x77c>
 8004bc0:	42bb      	cmp	r3, r7
 8004bc2:	bfa8      	it	ge
 8004bc4:	463b      	movge	r3, r7
 8004bc6:	9a06      	ldr	r2, [sp, #24]
 8004bc8:	1aff      	subs	r7, r7, r3
 8004bca:	1ad2      	subs	r2, r2, r3
 8004bcc:	9206      	str	r2, [sp, #24]
 8004bce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004bd0:	1ad3      	subs	r3, r2, r3
 8004bd2:	9309      	str	r3, [sp, #36]	; 0x24
 8004bd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004bd6:	b1f3      	cbz	r3, 8004c16 <_dtoa_r+0x7be>
 8004bd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	f000 80a8 	beq.w	8004d30 <_dtoa_r+0x8d8>
 8004be0:	2c00      	cmp	r4, #0
 8004be2:	dd10      	ble.n	8004c06 <_dtoa_r+0x7ae>
 8004be4:	4631      	mov	r1, r6
 8004be6:	4622      	mov	r2, r4
 8004be8:	4628      	mov	r0, r5
 8004bea:	f001 fa0b 	bl	8006004 <__pow5mult>
 8004bee:	465a      	mov	r2, fp
 8004bf0:	4601      	mov	r1, r0
 8004bf2:	4606      	mov	r6, r0
 8004bf4:	4628      	mov	r0, r5
 8004bf6:	f001 f95d 	bl	8005eb4 <__multiply>
 8004bfa:	4680      	mov	r8, r0
 8004bfc:	4659      	mov	r1, fp
 8004bfe:	4628      	mov	r0, r5
 8004c00:	f001 f842 	bl	8005c88 <_Bfree>
 8004c04:	46c3      	mov	fp, r8
 8004c06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004c08:	1b1a      	subs	r2, r3, r4
 8004c0a:	d004      	beq.n	8004c16 <_dtoa_r+0x7be>
 8004c0c:	4659      	mov	r1, fp
 8004c0e:	4628      	mov	r0, r5
 8004c10:	f001 f9f8 	bl	8006004 <__pow5mult>
 8004c14:	4683      	mov	fp, r0
 8004c16:	2101      	movs	r1, #1
 8004c18:	4628      	mov	r0, r5
 8004c1a:	f001 f935 	bl	8005e88 <__i2b>
 8004c1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004c20:	4604      	mov	r4, r0
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	f340 8086 	ble.w	8004d34 <_dtoa_r+0x8dc>
 8004c28:	461a      	mov	r2, r3
 8004c2a:	4601      	mov	r1, r0
 8004c2c:	4628      	mov	r0, r5
 8004c2e:	f001 f9e9 	bl	8006004 <__pow5mult>
 8004c32:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004c34:	4604      	mov	r4, r0
 8004c36:	2b01      	cmp	r3, #1
 8004c38:	dd7f      	ble.n	8004d3a <_dtoa_r+0x8e2>
 8004c3a:	f04f 0800 	mov.w	r8, #0
 8004c3e:	6923      	ldr	r3, [r4, #16]
 8004c40:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004c44:	6918      	ldr	r0, [r3, #16]
 8004c46:	f001 f8d1 	bl	8005dec <__hi0bits>
 8004c4a:	f1c0 0020 	rsb	r0, r0, #32
 8004c4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c50:	4418      	add	r0, r3
 8004c52:	f010 001f 	ands.w	r0, r0, #31
 8004c56:	f000 8092 	beq.w	8004d7e <_dtoa_r+0x926>
 8004c5a:	f1c0 0320 	rsb	r3, r0, #32
 8004c5e:	2b04      	cmp	r3, #4
 8004c60:	f340 808a 	ble.w	8004d78 <_dtoa_r+0x920>
 8004c64:	f1c0 001c 	rsb	r0, r0, #28
 8004c68:	9b06      	ldr	r3, [sp, #24]
 8004c6a:	4407      	add	r7, r0
 8004c6c:	4403      	add	r3, r0
 8004c6e:	9306      	str	r3, [sp, #24]
 8004c70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c72:	4403      	add	r3, r0
 8004c74:	9309      	str	r3, [sp, #36]	; 0x24
 8004c76:	9b06      	ldr	r3, [sp, #24]
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	dd05      	ble.n	8004c88 <_dtoa_r+0x830>
 8004c7c:	4659      	mov	r1, fp
 8004c7e:	461a      	mov	r2, r3
 8004c80:	4628      	mov	r0, r5
 8004c82:	f001 fa19 	bl	80060b8 <__lshift>
 8004c86:	4683      	mov	fp, r0
 8004c88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	dd05      	ble.n	8004c9a <_dtoa_r+0x842>
 8004c8e:	4621      	mov	r1, r4
 8004c90:	461a      	mov	r2, r3
 8004c92:	4628      	mov	r0, r5
 8004c94:	f001 fa10 	bl	80060b8 <__lshift>
 8004c98:	4604      	mov	r4, r0
 8004c9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d070      	beq.n	8004d82 <_dtoa_r+0x92a>
 8004ca0:	4621      	mov	r1, r4
 8004ca2:	4658      	mov	r0, fp
 8004ca4:	f001 fa78 	bl	8006198 <__mcmp>
 8004ca8:	2800      	cmp	r0, #0
 8004caa:	da6a      	bge.n	8004d82 <_dtoa_r+0x92a>
 8004cac:	2300      	movs	r3, #0
 8004cae:	4659      	mov	r1, fp
 8004cb0:	220a      	movs	r2, #10
 8004cb2:	4628      	mov	r0, r5
 8004cb4:	f001 f80a 	bl	8005ccc <__multadd>
 8004cb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004cba:	4683      	mov	fp, r0
 8004cbc:	f10a 3aff 	add.w	sl, sl, #4294967295
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	f000 8194 	beq.w	8004fee <_dtoa_r+0xb96>
 8004cc6:	4631      	mov	r1, r6
 8004cc8:	2300      	movs	r3, #0
 8004cca:	220a      	movs	r2, #10
 8004ccc:	4628      	mov	r0, r5
 8004cce:	f000 fffd 	bl	8005ccc <__multadd>
 8004cd2:	f1b9 0f00 	cmp.w	r9, #0
 8004cd6:	4606      	mov	r6, r0
 8004cd8:	f300 8093 	bgt.w	8004e02 <_dtoa_r+0x9aa>
 8004cdc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004cde:	2b02      	cmp	r3, #2
 8004ce0:	dc57      	bgt.n	8004d92 <_dtoa_r+0x93a>
 8004ce2:	e08e      	b.n	8004e02 <_dtoa_r+0x9aa>
 8004ce4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004ce6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004cea:	e757      	b.n	8004b9c <_dtoa_r+0x744>
 8004cec:	9b08      	ldr	r3, [sp, #32]
 8004cee:	1e5c      	subs	r4, r3, #1
 8004cf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004cf2:	42a3      	cmp	r3, r4
 8004cf4:	bfb7      	itett	lt
 8004cf6:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004cf8:	1b1c      	subge	r4, r3, r4
 8004cfa:	1ae2      	sublt	r2, r4, r3
 8004cfc:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8004cfe:	bfbe      	ittt	lt
 8004d00:	940a      	strlt	r4, [sp, #40]	; 0x28
 8004d02:	189b      	addlt	r3, r3, r2
 8004d04:	930e      	strlt	r3, [sp, #56]	; 0x38
 8004d06:	9b08      	ldr	r3, [sp, #32]
 8004d08:	bfb8      	it	lt
 8004d0a:	2400      	movlt	r4, #0
 8004d0c:	2b00      	cmp	r3, #0
 8004d0e:	bfbb      	ittet	lt
 8004d10:	9b06      	ldrlt	r3, [sp, #24]
 8004d12:	9a08      	ldrlt	r2, [sp, #32]
 8004d14:	9f06      	ldrge	r7, [sp, #24]
 8004d16:	1a9f      	sublt	r7, r3, r2
 8004d18:	bfac      	ite	ge
 8004d1a:	9b08      	ldrge	r3, [sp, #32]
 8004d1c:	2300      	movlt	r3, #0
 8004d1e:	e73f      	b.n	8004ba0 <_dtoa_r+0x748>
 8004d20:	3fe00000 	.word	0x3fe00000
 8004d24:	40240000 	.word	0x40240000
 8004d28:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004d2a:	9f06      	ldr	r7, [sp, #24]
 8004d2c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004d2e:	e742      	b.n	8004bb6 <_dtoa_r+0x75e>
 8004d30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004d32:	e76b      	b.n	8004c0c <_dtoa_r+0x7b4>
 8004d34:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004d36:	2b01      	cmp	r3, #1
 8004d38:	dc19      	bgt.n	8004d6e <_dtoa_r+0x916>
 8004d3a:	9b04      	ldr	r3, [sp, #16]
 8004d3c:	b9bb      	cbnz	r3, 8004d6e <_dtoa_r+0x916>
 8004d3e:	9b05      	ldr	r3, [sp, #20]
 8004d40:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004d44:	b99b      	cbnz	r3, 8004d6e <_dtoa_r+0x916>
 8004d46:	9b05      	ldr	r3, [sp, #20]
 8004d48:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004d4c:	0d1b      	lsrs	r3, r3, #20
 8004d4e:	051b      	lsls	r3, r3, #20
 8004d50:	b183      	cbz	r3, 8004d74 <_dtoa_r+0x91c>
 8004d52:	f04f 0801 	mov.w	r8, #1
 8004d56:	9b06      	ldr	r3, [sp, #24]
 8004d58:	3301      	adds	r3, #1
 8004d5a:	9306      	str	r3, [sp, #24]
 8004d5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d5e:	3301      	adds	r3, #1
 8004d60:	9309      	str	r3, [sp, #36]	; 0x24
 8004d62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	f47f af6a 	bne.w	8004c3e <_dtoa_r+0x7e6>
 8004d6a:	2001      	movs	r0, #1
 8004d6c:	e76f      	b.n	8004c4e <_dtoa_r+0x7f6>
 8004d6e:	f04f 0800 	mov.w	r8, #0
 8004d72:	e7f6      	b.n	8004d62 <_dtoa_r+0x90a>
 8004d74:	4698      	mov	r8, r3
 8004d76:	e7f4      	b.n	8004d62 <_dtoa_r+0x90a>
 8004d78:	f43f af7d 	beq.w	8004c76 <_dtoa_r+0x81e>
 8004d7c:	4618      	mov	r0, r3
 8004d7e:	301c      	adds	r0, #28
 8004d80:	e772      	b.n	8004c68 <_dtoa_r+0x810>
 8004d82:	9b08      	ldr	r3, [sp, #32]
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	dc36      	bgt.n	8004df6 <_dtoa_r+0x99e>
 8004d88:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004d8a:	2b02      	cmp	r3, #2
 8004d8c:	dd33      	ble.n	8004df6 <_dtoa_r+0x99e>
 8004d8e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004d92:	f1b9 0f00 	cmp.w	r9, #0
 8004d96:	d10d      	bne.n	8004db4 <_dtoa_r+0x95c>
 8004d98:	4621      	mov	r1, r4
 8004d9a:	464b      	mov	r3, r9
 8004d9c:	2205      	movs	r2, #5
 8004d9e:	4628      	mov	r0, r5
 8004da0:	f000 ff94 	bl	8005ccc <__multadd>
 8004da4:	4601      	mov	r1, r0
 8004da6:	4604      	mov	r4, r0
 8004da8:	4658      	mov	r0, fp
 8004daa:	f001 f9f5 	bl	8006198 <__mcmp>
 8004dae:	2800      	cmp	r0, #0
 8004db0:	f73f adb8 	bgt.w	8004924 <_dtoa_r+0x4cc>
 8004db4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004db6:	9f03      	ldr	r7, [sp, #12]
 8004db8:	ea6f 0a03 	mvn.w	sl, r3
 8004dbc:	f04f 0800 	mov.w	r8, #0
 8004dc0:	4621      	mov	r1, r4
 8004dc2:	4628      	mov	r0, r5
 8004dc4:	f000 ff60 	bl	8005c88 <_Bfree>
 8004dc8:	2e00      	cmp	r6, #0
 8004dca:	f43f aea7 	beq.w	8004b1c <_dtoa_r+0x6c4>
 8004dce:	f1b8 0f00 	cmp.w	r8, #0
 8004dd2:	d005      	beq.n	8004de0 <_dtoa_r+0x988>
 8004dd4:	45b0      	cmp	r8, r6
 8004dd6:	d003      	beq.n	8004de0 <_dtoa_r+0x988>
 8004dd8:	4641      	mov	r1, r8
 8004dda:	4628      	mov	r0, r5
 8004ddc:	f000 ff54 	bl	8005c88 <_Bfree>
 8004de0:	4631      	mov	r1, r6
 8004de2:	4628      	mov	r0, r5
 8004de4:	f000 ff50 	bl	8005c88 <_Bfree>
 8004de8:	e698      	b.n	8004b1c <_dtoa_r+0x6c4>
 8004dea:	2400      	movs	r4, #0
 8004dec:	4626      	mov	r6, r4
 8004dee:	e7e1      	b.n	8004db4 <_dtoa_r+0x95c>
 8004df0:	46c2      	mov	sl, r8
 8004df2:	4626      	mov	r6, r4
 8004df4:	e596      	b.n	8004924 <_dtoa_r+0x4cc>
 8004df6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004df8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	f000 80fd 	beq.w	8004ffc <_dtoa_r+0xba4>
 8004e02:	2f00      	cmp	r7, #0
 8004e04:	dd05      	ble.n	8004e12 <_dtoa_r+0x9ba>
 8004e06:	4631      	mov	r1, r6
 8004e08:	463a      	mov	r2, r7
 8004e0a:	4628      	mov	r0, r5
 8004e0c:	f001 f954 	bl	80060b8 <__lshift>
 8004e10:	4606      	mov	r6, r0
 8004e12:	f1b8 0f00 	cmp.w	r8, #0
 8004e16:	d05c      	beq.n	8004ed2 <_dtoa_r+0xa7a>
 8004e18:	4628      	mov	r0, r5
 8004e1a:	6871      	ldr	r1, [r6, #4]
 8004e1c:	f000 fef4 	bl	8005c08 <_Balloc>
 8004e20:	4607      	mov	r7, r0
 8004e22:	b928      	cbnz	r0, 8004e30 <_dtoa_r+0x9d8>
 8004e24:	4602      	mov	r2, r0
 8004e26:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004e2a:	4b7f      	ldr	r3, [pc, #508]	; (8005028 <_dtoa_r+0xbd0>)
 8004e2c:	f7ff bb28 	b.w	8004480 <_dtoa_r+0x28>
 8004e30:	6932      	ldr	r2, [r6, #16]
 8004e32:	f106 010c 	add.w	r1, r6, #12
 8004e36:	3202      	adds	r2, #2
 8004e38:	0092      	lsls	r2, r2, #2
 8004e3a:	300c      	adds	r0, #12
 8004e3c:	f000 fed6 	bl	8005bec <memcpy>
 8004e40:	2201      	movs	r2, #1
 8004e42:	4639      	mov	r1, r7
 8004e44:	4628      	mov	r0, r5
 8004e46:	f001 f937 	bl	80060b8 <__lshift>
 8004e4a:	46b0      	mov	r8, r6
 8004e4c:	4606      	mov	r6, r0
 8004e4e:	9b03      	ldr	r3, [sp, #12]
 8004e50:	3301      	adds	r3, #1
 8004e52:	9308      	str	r3, [sp, #32]
 8004e54:	9b03      	ldr	r3, [sp, #12]
 8004e56:	444b      	add	r3, r9
 8004e58:	930a      	str	r3, [sp, #40]	; 0x28
 8004e5a:	9b04      	ldr	r3, [sp, #16]
 8004e5c:	f003 0301 	and.w	r3, r3, #1
 8004e60:	9309      	str	r3, [sp, #36]	; 0x24
 8004e62:	9b08      	ldr	r3, [sp, #32]
 8004e64:	4621      	mov	r1, r4
 8004e66:	3b01      	subs	r3, #1
 8004e68:	4658      	mov	r0, fp
 8004e6a:	9304      	str	r3, [sp, #16]
 8004e6c:	f7ff fa68 	bl	8004340 <quorem>
 8004e70:	4603      	mov	r3, r0
 8004e72:	4641      	mov	r1, r8
 8004e74:	3330      	adds	r3, #48	; 0x30
 8004e76:	9006      	str	r0, [sp, #24]
 8004e78:	4658      	mov	r0, fp
 8004e7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8004e7c:	f001 f98c 	bl	8006198 <__mcmp>
 8004e80:	4632      	mov	r2, r6
 8004e82:	4681      	mov	r9, r0
 8004e84:	4621      	mov	r1, r4
 8004e86:	4628      	mov	r0, r5
 8004e88:	f001 f9a2 	bl	80061d0 <__mdiff>
 8004e8c:	68c2      	ldr	r2, [r0, #12]
 8004e8e:	4607      	mov	r7, r0
 8004e90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004e92:	bb02      	cbnz	r2, 8004ed6 <_dtoa_r+0xa7e>
 8004e94:	4601      	mov	r1, r0
 8004e96:	4658      	mov	r0, fp
 8004e98:	f001 f97e 	bl	8006198 <__mcmp>
 8004e9c:	4602      	mov	r2, r0
 8004e9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ea0:	4639      	mov	r1, r7
 8004ea2:	4628      	mov	r0, r5
 8004ea4:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8004ea8:	f000 feee 	bl	8005c88 <_Bfree>
 8004eac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004eae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004eb0:	9f08      	ldr	r7, [sp, #32]
 8004eb2:	ea43 0102 	orr.w	r1, r3, r2
 8004eb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004eb8:	430b      	orrs	r3, r1
 8004eba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ebc:	d10d      	bne.n	8004eda <_dtoa_r+0xa82>
 8004ebe:	2b39      	cmp	r3, #57	; 0x39
 8004ec0:	d029      	beq.n	8004f16 <_dtoa_r+0xabe>
 8004ec2:	f1b9 0f00 	cmp.w	r9, #0
 8004ec6:	dd01      	ble.n	8004ecc <_dtoa_r+0xa74>
 8004ec8:	9b06      	ldr	r3, [sp, #24]
 8004eca:	3331      	adds	r3, #49	; 0x31
 8004ecc:	9a04      	ldr	r2, [sp, #16]
 8004ece:	7013      	strb	r3, [r2, #0]
 8004ed0:	e776      	b.n	8004dc0 <_dtoa_r+0x968>
 8004ed2:	4630      	mov	r0, r6
 8004ed4:	e7b9      	b.n	8004e4a <_dtoa_r+0x9f2>
 8004ed6:	2201      	movs	r2, #1
 8004ed8:	e7e2      	b.n	8004ea0 <_dtoa_r+0xa48>
 8004eda:	f1b9 0f00 	cmp.w	r9, #0
 8004ede:	db06      	blt.n	8004eee <_dtoa_r+0xa96>
 8004ee0:	9922      	ldr	r1, [sp, #136]	; 0x88
 8004ee2:	ea41 0909 	orr.w	r9, r1, r9
 8004ee6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ee8:	ea59 0101 	orrs.w	r1, r9, r1
 8004eec:	d120      	bne.n	8004f30 <_dtoa_r+0xad8>
 8004eee:	2a00      	cmp	r2, #0
 8004ef0:	ddec      	ble.n	8004ecc <_dtoa_r+0xa74>
 8004ef2:	4659      	mov	r1, fp
 8004ef4:	2201      	movs	r2, #1
 8004ef6:	4628      	mov	r0, r5
 8004ef8:	9308      	str	r3, [sp, #32]
 8004efa:	f001 f8dd 	bl	80060b8 <__lshift>
 8004efe:	4621      	mov	r1, r4
 8004f00:	4683      	mov	fp, r0
 8004f02:	f001 f949 	bl	8006198 <__mcmp>
 8004f06:	2800      	cmp	r0, #0
 8004f08:	9b08      	ldr	r3, [sp, #32]
 8004f0a:	dc02      	bgt.n	8004f12 <_dtoa_r+0xaba>
 8004f0c:	d1de      	bne.n	8004ecc <_dtoa_r+0xa74>
 8004f0e:	07da      	lsls	r2, r3, #31
 8004f10:	d5dc      	bpl.n	8004ecc <_dtoa_r+0xa74>
 8004f12:	2b39      	cmp	r3, #57	; 0x39
 8004f14:	d1d8      	bne.n	8004ec8 <_dtoa_r+0xa70>
 8004f16:	2339      	movs	r3, #57	; 0x39
 8004f18:	9a04      	ldr	r2, [sp, #16]
 8004f1a:	7013      	strb	r3, [r2, #0]
 8004f1c:	463b      	mov	r3, r7
 8004f1e:	461f      	mov	r7, r3
 8004f20:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8004f24:	3b01      	subs	r3, #1
 8004f26:	2a39      	cmp	r2, #57	; 0x39
 8004f28:	d050      	beq.n	8004fcc <_dtoa_r+0xb74>
 8004f2a:	3201      	adds	r2, #1
 8004f2c:	701a      	strb	r2, [r3, #0]
 8004f2e:	e747      	b.n	8004dc0 <_dtoa_r+0x968>
 8004f30:	2a00      	cmp	r2, #0
 8004f32:	dd03      	ble.n	8004f3c <_dtoa_r+0xae4>
 8004f34:	2b39      	cmp	r3, #57	; 0x39
 8004f36:	d0ee      	beq.n	8004f16 <_dtoa_r+0xabe>
 8004f38:	3301      	adds	r3, #1
 8004f3a:	e7c7      	b.n	8004ecc <_dtoa_r+0xa74>
 8004f3c:	9a08      	ldr	r2, [sp, #32]
 8004f3e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004f40:	f802 3c01 	strb.w	r3, [r2, #-1]
 8004f44:	428a      	cmp	r2, r1
 8004f46:	d02a      	beq.n	8004f9e <_dtoa_r+0xb46>
 8004f48:	4659      	mov	r1, fp
 8004f4a:	2300      	movs	r3, #0
 8004f4c:	220a      	movs	r2, #10
 8004f4e:	4628      	mov	r0, r5
 8004f50:	f000 febc 	bl	8005ccc <__multadd>
 8004f54:	45b0      	cmp	r8, r6
 8004f56:	4683      	mov	fp, r0
 8004f58:	f04f 0300 	mov.w	r3, #0
 8004f5c:	f04f 020a 	mov.w	r2, #10
 8004f60:	4641      	mov	r1, r8
 8004f62:	4628      	mov	r0, r5
 8004f64:	d107      	bne.n	8004f76 <_dtoa_r+0xb1e>
 8004f66:	f000 feb1 	bl	8005ccc <__multadd>
 8004f6a:	4680      	mov	r8, r0
 8004f6c:	4606      	mov	r6, r0
 8004f6e:	9b08      	ldr	r3, [sp, #32]
 8004f70:	3301      	adds	r3, #1
 8004f72:	9308      	str	r3, [sp, #32]
 8004f74:	e775      	b.n	8004e62 <_dtoa_r+0xa0a>
 8004f76:	f000 fea9 	bl	8005ccc <__multadd>
 8004f7a:	4631      	mov	r1, r6
 8004f7c:	4680      	mov	r8, r0
 8004f7e:	2300      	movs	r3, #0
 8004f80:	220a      	movs	r2, #10
 8004f82:	4628      	mov	r0, r5
 8004f84:	f000 fea2 	bl	8005ccc <__multadd>
 8004f88:	4606      	mov	r6, r0
 8004f8a:	e7f0      	b.n	8004f6e <_dtoa_r+0xb16>
 8004f8c:	f1b9 0f00 	cmp.w	r9, #0
 8004f90:	bfcc      	ite	gt
 8004f92:	464f      	movgt	r7, r9
 8004f94:	2701      	movle	r7, #1
 8004f96:	f04f 0800 	mov.w	r8, #0
 8004f9a:	9a03      	ldr	r2, [sp, #12]
 8004f9c:	4417      	add	r7, r2
 8004f9e:	4659      	mov	r1, fp
 8004fa0:	2201      	movs	r2, #1
 8004fa2:	4628      	mov	r0, r5
 8004fa4:	9308      	str	r3, [sp, #32]
 8004fa6:	f001 f887 	bl	80060b8 <__lshift>
 8004faa:	4621      	mov	r1, r4
 8004fac:	4683      	mov	fp, r0
 8004fae:	f001 f8f3 	bl	8006198 <__mcmp>
 8004fb2:	2800      	cmp	r0, #0
 8004fb4:	dcb2      	bgt.n	8004f1c <_dtoa_r+0xac4>
 8004fb6:	d102      	bne.n	8004fbe <_dtoa_r+0xb66>
 8004fb8:	9b08      	ldr	r3, [sp, #32]
 8004fba:	07db      	lsls	r3, r3, #31
 8004fbc:	d4ae      	bmi.n	8004f1c <_dtoa_r+0xac4>
 8004fbe:	463b      	mov	r3, r7
 8004fc0:	461f      	mov	r7, r3
 8004fc2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004fc6:	2a30      	cmp	r2, #48	; 0x30
 8004fc8:	d0fa      	beq.n	8004fc0 <_dtoa_r+0xb68>
 8004fca:	e6f9      	b.n	8004dc0 <_dtoa_r+0x968>
 8004fcc:	9a03      	ldr	r2, [sp, #12]
 8004fce:	429a      	cmp	r2, r3
 8004fd0:	d1a5      	bne.n	8004f1e <_dtoa_r+0xac6>
 8004fd2:	2331      	movs	r3, #49	; 0x31
 8004fd4:	f10a 0a01 	add.w	sl, sl, #1
 8004fd8:	e779      	b.n	8004ece <_dtoa_r+0xa76>
 8004fda:	4b14      	ldr	r3, [pc, #80]	; (800502c <_dtoa_r+0xbd4>)
 8004fdc:	f7ff baa8 	b.w	8004530 <_dtoa_r+0xd8>
 8004fe0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004fe2:	2b00      	cmp	r3, #0
 8004fe4:	f47f aa81 	bne.w	80044ea <_dtoa_r+0x92>
 8004fe8:	4b11      	ldr	r3, [pc, #68]	; (8005030 <_dtoa_r+0xbd8>)
 8004fea:	f7ff baa1 	b.w	8004530 <_dtoa_r+0xd8>
 8004fee:	f1b9 0f00 	cmp.w	r9, #0
 8004ff2:	dc03      	bgt.n	8004ffc <_dtoa_r+0xba4>
 8004ff4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004ff6:	2b02      	cmp	r3, #2
 8004ff8:	f73f aecb 	bgt.w	8004d92 <_dtoa_r+0x93a>
 8004ffc:	9f03      	ldr	r7, [sp, #12]
 8004ffe:	4621      	mov	r1, r4
 8005000:	4658      	mov	r0, fp
 8005002:	f7ff f99d 	bl	8004340 <quorem>
 8005006:	9a03      	ldr	r2, [sp, #12]
 8005008:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800500c:	f807 3b01 	strb.w	r3, [r7], #1
 8005010:	1aba      	subs	r2, r7, r2
 8005012:	4591      	cmp	r9, r2
 8005014:	ddba      	ble.n	8004f8c <_dtoa_r+0xb34>
 8005016:	4659      	mov	r1, fp
 8005018:	2300      	movs	r3, #0
 800501a:	220a      	movs	r2, #10
 800501c:	4628      	mov	r0, r5
 800501e:	f000 fe55 	bl	8005ccc <__multadd>
 8005022:	4683      	mov	fp, r0
 8005024:	e7eb      	b.n	8004ffe <_dtoa_r+0xba6>
 8005026:	bf00      	nop
 8005028:	08007d40 	.word	0x08007d40
 800502c:	08007fa1 	.word	0x08007fa1
 8005030:	08007cc1 	.word	0x08007cc1

08005034 <__sflush_r>:
 8005034:	898a      	ldrh	r2, [r1, #12]
 8005036:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005038:	4605      	mov	r5, r0
 800503a:	0710      	lsls	r0, r2, #28
 800503c:	460c      	mov	r4, r1
 800503e:	d457      	bmi.n	80050f0 <__sflush_r+0xbc>
 8005040:	684b      	ldr	r3, [r1, #4]
 8005042:	2b00      	cmp	r3, #0
 8005044:	dc04      	bgt.n	8005050 <__sflush_r+0x1c>
 8005046:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005048:	2b00      	cmp	r3, #0
 800504a:	dc01      	bgt.n	8005050 <__sflush_r+0x1c>
 800504c:	2000      	movs	r0, #0
 800504e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005050:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005052:	2e00      	cmp	r6, #0
 8005054:	d0fa      	beq.n	800504c <__sflush_r+0x18>
 8005056:	2300      	movs	r3, #0
 8005058:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800505c:	682f      	ldr	r7, [r5, #0]
 800505e:	602b      	str	r3, [r5, #0]
 8005060:	d032      	beq.n	80050c8 <__sflush_r+0x94>
 8005062:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005064:	89a3      	ldrh	r3, [r4, #12]
 8005066:	075a      	lsls	r2, r3, #29
 8005068:	d505      	bpl.n	8005076 <__sflush_r+0x42>
 800506a:	6863      	ldr	r3, [r4, #4]
 800506c:	1ac0      	subs	r0, r0, r3
 800506e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005070:	b10b      	cbz	r3, 8005076 <__sflush_r+0x42>
 8005072:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005074:	1ac0      	subs	r0, r0, r3
 8005076:	2300      	movs	r3, #0
 8005078:	4602      	mov	r2, r0
 800507a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800507c:	4628      	mov	r0, r5
 800507e:	6a21      	ldr	r1, [r4, #32]
 8005080:	47b0      	blx	r6
 8005082:	1c43      	adds	r3, r0, #1
 8005084:	89a3      	ldrh	r3, [r4, #12]
 8005086:	d106      	bne.n	8005096 <__sflush_r+0x62>
 8005088:	6829      	ldr	r1, [r5, #0]
 800508a:	291d      	cmp	r1, #29
 800508c:	d82c      	bhi.n	80050e8 <__sflush_r+0xb4>
 800508e:	4a29      	ldr	r2, [pc, #164]	; (8005134 <__sflush_r+0x100>)
 8005090:	40ca      	lsrs	r2, r1
 8005092:	07d6      	lsls	r6, r2, #31
 8005094:	d528      	bpl.n	80050e8 <__sflush_r+0xb4>
 8005096:	2200      	movs	r2, #0
 8005098:	6062      	str	r2, [r4, #4]
 800509a:	6922      	ldr	r2, [r4, #16]
 800509c:	04d9      	lsls	r1, r3, #19
 800509e:	6022      	str	r2, [r4, #0]
 80050a0:	d504      	bpl.n	80050ac <__sflush_r+0x78>
 80050a2:	1c42      	adds	r2, r0, #1
 80050a4:	d101      	bne.n	80050aa <__sflush_r+0x76>
 80050a6:	682b      	ldr	r3, [r5, #0]
 80050a8:	b903      	cbnz	r3, 80050ac <__sflush_r+0x78>
 80050aa:	6560      	str	r0, [r4, #84]	; 0x54
 80050ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80050ae:	602f      	str	r7, [r5, #0]
 80050b0:	2900      	cmp	r1, #0
 80050b2:	d0cb      	beq.n	800504c <__sflush_r+0x18>
 80050b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80050b8:	4299      	cmp	r1, r3
 80050ba:	d002      	beq.n	80050c2 <__sflush_r+0x8e>
 80050bc:	4628      	mov	r0, r5
 80050be:	f001 fa6f 	bl	80065a0 <_free_r>
 80050c2:	2000      	movs	r0, #0
 80050c4:	6360      	str	r0, [r4, #52]	; 0x34
 80050c6:	e7c2      	b.n	800504e <__sflush_r+0x1a>
 80050c8:	6a21      	ldr	r1, [r4, #32]
 80050ca:	2301      	movs	r3, #1
 80050cc:	4628      	mov	r0, r5
 80050ce:	47b0      	blx	r6
 80050d0:	1c41      	adds	r1, r0, #1
 80050d2:	d1c7      	bne.n	8005064 <__sflush_r+0x30>
 80050d4:	682b      	ldr	r3, [r5, #0]
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d0c4      	beq.n	8005064 <__sflush_r+0x30>
 80050da:	2b1d      	cmp	r3, #29
 80050dc:	d001      	beq.n	80050e2 <__sflush_r+0xae>
 80050de:	2b16      	cmp	r3, #22
 80050e0:	d101      	bne.n	80050e6 <__sflush_r+0xb2>
 80050e2:	602f      	str	r7, [r5, #0]
 80050e4:	e7b2      	b.n	800504c <__sflush_r+0x18>
 80050e6:	89a3      	ldrh	r3, [r4, #12]
 80050e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80050ec:	81a3      	strh	r3, [r4, #12]
 80050ee:	e7ae      	b.n	800504e <__sflush_r+0x1a>
 80050f0:	690f      	ldr	r7, [r1, #16]
 80050f2:	2f00      	cmp	r7, #0
 80050f4:	d0aa      	beq.n	800504c <__sflush_r+0x18>
 80050f6:	0793      	lsls	r3, r2, #30
 80050f8:	bf18      	it	ne
 80050fa:	2300      	movne	r3, #0
 80050fc:	680e      	ldr	r6, [r1, #0]
 80050fe:	bf08      	it	eq
 8005100:	694b      	ldreq	r3, [r1, #20]
 8005102:	1bf6      	subs	r6, r6, r7
 8005104:	600f      	str	r7, [r1, #0]
 8005106:	608b      	str	r3, [r1, #8]
 8005108:	2e00      	cmp	r6, #0
 800510a:	dd9f      	ble.n	800504c <__sflush_r+0x18>
 800510c:	4633      	mov	r3, r6
 800510e:	463a      	mov	r2, r7
 8005110:	4628      	mov	r0, r5
 8005112:	6a21      	ldr	r1, [r4, #32]
 8005114:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8005118:	47e0      	blx	ip
 800511a:	2800      	cmp	r0, #0
 800511c:	dc06      	bgt.n	800512c <__sflush_r+0xf8>
 800511e:	89a3      	ldrh	r3, [r4, #12]
 8005120:	f04f 30ff 	mov.w	r0, #4294967295
 8005124:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005128:	81a3      	strh	r3, [r4, #12]
 800512a:	e790      	b.n	800504e <__sflush_r+0x1a>
 800512c:	4407      	add	r7, r0
 800512e:	1a36      	subs	r6, r6, r0
 8005130:	e7ea      	b.n	8005108 <__sflush_r+0xd4>
 8005132:	bf00      	nop
 8005134:	20400001 	.word	0x20400001

08005138 <_fflush_r>:
 8005138:	b538      	push	{r3, r4, r5, lr}
 800513a:	690b      	ldr	r3, [r1, #16]
 800513c:	4605      	mov	r5, r0
 800513e:	460c      	mov	r4, r1
 8005140:	b913      	cbnz	r3, 8005148 <_fflush_r+0x10>
 8005142:	2500      	movs	r5, #0
 8005144:	4628      	mov	r0, r5
 8005146:	bd38      	pop	{r3, r4, r5, pc}
 8005148:	b118      	cbz	r0, 8005152 <_fflush_r+0x1a>
 800514a:	6983      	ldr	r3, [r0, #24]
 800514c:	b90b      	cbnz	r3, 8005152 <_fflush_r+0x1a>
 800514e:	f000 f899 	bl	8005284 <__sinit>
 8005152:	4b14      	ldr	r3, [pc, #80]	; (80051a4 <_fflush_r+0x6c>)
 8005154:	429c      	cmp	r4, r3
 8005156:	d11b      	bne.n	8005190 <_fflush_r+0x58>
 8005158:	686c      	ldr	r4, [r5, #4]
 800515a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800515e:	2b00      	cmp	r3, #0
 8005160:	d0ef      	beq.n	8005142 <_fflush_r+0xa>
 8005162:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005164:	07d0      	lsls	r0, r2, #31
 8005166:	d404      	bmi.n	8005172 <_fflush_r+0x3a>
 8005168:	0599      	lsls	r1, r3, #22
 800516a:	d402      	bmi.n	8005172 <_fflush_r+0x3a>
 800516c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800516e:	f000 fcae 	bl	8005ace <__retarget_lock_acquire_recursive>
 8005172:	4628      	mov	r0, r5
 8005174:	4621      	mov	r1, r4
 8005176:	f7ff ff5d 	bl	8005034 <__sflush_r>
 800517a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800517c:	4605      	mov	r5, r0
 800517e:	07da      	lsls	r2, r3, #31
 8005180:	d4e0      	bmi.n	8005144 <_fflush_r+0xc>
 8005182:	89a3      	ldrh	r3, [r4, #12]
 8005184:	059b      	lsls	r3, r3, #22
 8005186:	d4dd      	bmi.n	8005144 <_fflush_r+0xc>
 8005188:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800518a:	f000 fca1 	bl	8005ad0 <__retarget_lock_release_recursive>
 800518e:	e7d9      	b.n	8005144 <_fflush_r+0xc>
 8005190:	4b05      	ldr	r3, [pc, #20]	; (80051a8 <_fflush_r+0x70>)
 8005192:	429c      	cmp	r4, r3
 8005194:	d101      	bne.n	800519a <_fflush_r+0x62>
 8005196:	68ac      	ldr	r4, [r5, #8]
 8005198:	e7df      	b.n	800515a <_fflush_r+0x22>
 800519a:	4b04      	ldr	r3, [pc, #16]	; (80051ac <_fflush_r+0x74>)
 800519c:	429c      	cmp	r4, r3
 800519e:	bf08      	it	eq
 80051a0:	68ec      	ldreq	r4, [r5, #12]
 80051a2:	e7da      	b.n	800515a <_fflush_r+0x22>
 80051a4:	08007d74 	.word	0x08007d74
 80051a8:	08007d94 	.word	0x08007d94
 80051ac:	08007d54 	.word	0x08007d54

080051b0 <fflush>:
 80051b0:	4601      	mov	r1, r0
 80051b2:	b920      	cbnz	r0, 80051be <fflush+0xe>
 80051b4:	4b04      	ldr	r3, [pc, #16]	; (80051c8 <fflush+0x18>)
 80051b6:	4905      	ldr	r1, [pc, #20]	; (80051cc <fflush+0x1c>)
 80051b8:	6818      	ldr	r0, [r3, #0]
 80051ba:	f000 b8fe 	b.w	80053ba <_fwalk_reent>
 80051be:	4b04      	ldr	r3, [pc, #16]	; (80051d0 <fflush+0x20>)
 80051c0:	6818      	ldr	r0, [r3, #0]
 80051c2:	f7ff bfb9 	b.w	8005138 <_fflush_r>
 80051c6:	bf00      	nop
 80051c8:	08007b34 	.word	0x08007b34
 80051cc:	08005139 	.word	0x08005139
 80051d0:	2000000c 	.word	0x2000000c

080051d4 <std>:
 80051d4:	2300      	movs	r3, #0
 80051d6:	b510      	push	{r4, lr}
 80051d8:	4604      	mov	r4, r0
 80051da:	e9c0 3300 	strd	r3, r3, [r0]
 80051de:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80051e2:	6083      	str	r3, [r0, #8]
 80051e4:	8181      	strh	r1, [r0, #12]
 80051e6:	6643      	str	r3, [r0, #100]	; 0x64
 80051e8:	81c2      	strh	r2, [r0, #14]
 80051ea:	6183      	str	r3, [r0, #24]
 80051ec:	4619      	mov	r1, r3
 80051ee:	2208      	movs	r2, #8
 80051f0:	305c      	adds	r0, #92	; 0x5c
 80051f2:	f7fd f951 	bl	8002498 <memset>
 80051f6:	4b05      	ldr	r3, [pc, #20]	; (800520c <std+0x38>)
 80051f8:	6224      	str	r4, [r4, #32]
 80051fa:	6263      	str	r3, [r4, #36]	; 0x24
 80051fc:	4b04      	ldr	r3, [pc, #16]	; (8005210 <std+0x3c>)
 80051fe:	62a3      	str	r3, [r4, #40]	; 0x28
 8005200:	4b04      	ldr	r3, [pc, #16]	; (8005214 <std+0x40>)
 8005202:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005204:	4b04      	ldr	r3, [pc, #16]	; (8005218 <std+0x44>)
 8005206:	6323      	str	r3, [r4, #48]	; 0x30
 8005208:	bd10      	pop	{r4, pc}
 800520a:	bf00      	nop
 800520c:	080074c9 	.word	0x080074c9
 8005210:	080074eb 	.word	0x080074eb
 8005214:	08007523 	.word	0x08007523
 8005218:	08007547 	.word	0x08007547

0800521c <_cleanup_r>:
 800521c:	4901      	ldr	r1, [pc, #4]	; (8005224 <_cleanup_r+0x8>)
 800521e:	f000 b8cc 	b.w	80053ba <_fwalk_reent>
 8005222:	bf00      	nop
 8005224:	08005139 	.word	0x08005139

08005228 <__sfmoreglue>:
 8005228:	2268      	movs	r2, #104	; 0x68
 800522a:	b570      	push	{r4, r5, r6, lr}
 800522c:	1e4d      	subs	r5, r1, #1
 800522e:	4355      	muls	r5, r2
 8005230:	460e      	mov	r6, r1
 8005232:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005236:	f001 fa1b 	bl	8006670 <_malloc_r>
 800523a:	4604      	mov	r4, r0
 800523c:	b140      	cbz	r0, 8005250 <__sfmoreglue+0x28>
 800523e:	2100      	movs	r1, #0
 8005240:	e9c0 1600 	strd	r1, r6, [r0]
 8005244:	300c      	adds	r0, #12
 8005246:	60a0      	str	r0, [r4, #8]
 8005248:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800524c:	f7fd f924 	bl	8002498 <memset>
 8005250:	4620      	mov	r0, r4
 8005252:	bd70      	pop	{r4, r5, r6, pc}

08005254 <__sfp_lock_acquire>:
 8005254:	4801      	ldr	r0, [pc, #4]	; (800525c <__sfp_lock_acquire+0x8>)
 8005256:	f000 bc3a 	b.w	8005ace <__retarget_lock_acquire_recursive>
 800525a:	bf00      	nop
 800525c:	2000024d 	.word	0x2000024d

08005260 <__sfp_lock_release>:
 8005260:	4801      	ldr	r0, [pc, #4]	; (8005268 <__sfp_lock_release+0x8>)
 8005262:	f000 bc35 	b.w	8005ad0 <__retarget_lock_release_recursive>
 8005266:	bf00      	nop
 8005268:	2000024d 	.word	0x2000024d

0800526c <__sinit_lock_acquire>:
 800526c:	4801      	ldr	r0, [pc, #4]	; (8005274 <__sinit_lock_acquire+0x8>)
 800526e:	f000 bc2e 	b.w	8005ace <__retarget_lock_acquire_recursive>
 8005272:	bf00      	nop
 8005274:	2000024e 	.word	0x2000024e

08005278 <__sinit_lock_release>:
 8005278:	4801      	ldr	r0, [pc, #4]	; (8005280 <__sinit_lock_release+0x8>)
 800527a:	f000 bc29 	b.w	8005ad0 <__retarget_lock_release_recursive>
 800527e:	bf00      	nop
 8005280:	2000024e 	.word	0x2000024e

08005284 <__sinit>:
 8005284:	b510      	push	{r4, lr}
 8005286:	4604      	mov	r4, r0
 8005288:	f7ff fff0 	bl	800526c <__sinit_lock_acquire>
 800528c:	69a3      	ldr	r3, [r4, #24]
 800528e:	b11b      	cbz	r3, 8005298 <__sinit+0x14>
 8005290:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005294:	f7ff bff0 	b.w	8005278 <__sinit_lock_release>
 8005298:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800529c:	6523      	str	r3, [r4, #80]	; 0x50
 800529e:	4b13      	ldr	r3, [pc, #76]	; (80052ec <__sinit+0x68>)
 80052a0:	4a13      	ldr	r2, [pc, #76]	; (80052f0 <__sinit+0x6c>)
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	62a2      	str	r2, [r4, #40]	; 0x28
 80052a6:	42a3      	cmp	r3, r4
 80052a8:	bf08      	it	eq
 80052aa:	2301      	moveq	r3, #1
 80052ac:	4620      	mov	r0, r4
 80052ae:	bf08      	it	eq
 80052b0:	61a3      	streq	r3, [r4, #24]
 80052b2:	f000 f81f 	bl	80052f4 <__sfp>
 80052b6:	6060      	str	r0, [r4, #4]
 80052b8:	4620      	mov	r0, r4
 80052ba:	f000 f81b 	bl	80052f4 <__sfp>
 80052be:	60a0      	str	r0, [r4, #8]
 80052c0:	4620      	mov	r0, r4
 80052c2:	f000 f817 	bl	80052f4 <__sfp>
 80052c6:	2200      	movs	r2, #0
 80052c8:	2104      	movs	r1, #4
 80052ca:	60e0      	str	r0, [r4, #12]
 80052cc:	6860      	ldr	r0, [r4, #4]
 80052ce:	f7ff ff81 	bl	80051d4 <std>
 80052d2:	2201      	movs	r2, #1
 80052d4:	2109      	movs	r1, #9
 80052d6:	68a0      	ldr	r0, [r4, #8]
 80052d8:	f7ff ff7c 	bl	80051d4 <std>
 80052dc:	2202      	movs	r2, #2
 80052de:	2112      	movs	r1, #18
 80052e0:	68e0      	ldr	r0, [r4, #12]
 80052e2:	f7ff ff77 	bl	80051d4 <std>
 80052e6:	2301      	movs	r3, #1
 80052e8:	61a3      	str	r3, [r4, #24]
 80052ea:	e7d1      	b.n	8005290 <__sinit+0xc>
 80052ec:	08007b34 	.word	0x08007b34
 80052f0:	0800521d 	.word	0x0800521d

080052f4 <__sfp>:
 80052f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052f6:	4607      	mov	r7, r0
 80052f8:	f7ff ffac 	bl	8005254 <__sfp_lock_acquire>
 80052fc:	4b1e      	ldr	r3, [pc, #120]	; (8005378 <__sfp+0x84>)
 80052fe:	681e      	ldr	r6, [r3, #0]
 8005300:	69b3      	ldr	r3, [r6, #24]
 8005302:	b913      	cbnz	r3, 800530a <__sfp+0x16>
 8005304:	4630      	mov	r0, r6
 8005306:	f7ff ffbd 	bl	8005284 <__sinit>
 800530a:	3648      	adds	r6, #72	; 0x48
 800530c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8005310:	3b01      	subs	r3, #1
 8005312:	d503      	bpl.n	800531c <__sfp+0x28>
 8005314:	6833      	ldr	r3, [r6, #0]
 8005316:	b30b      	cbz	r3, 800535c <__sfp+0x68>
 8005318:	6836      	ldr	r6, [r6, #0]
 800531a:	e7f7      	b.n	800530c <__sfp+0x18>
 800531c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005320:	b9d5      	cbnz	r5, 8005358 <__sfp+0x64>
 8005322:	4b16      	ldr	r3, [pc, #88]	; (800537c <__sfp+0x88>)
 8005324:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8005328:	60e3      	str	r3, [r4, #12]
 800532a:	6665      	str	r5, [r4, #100]	; 0x64
 800532c:	f000 fbce 	bl	8005acc <__retarget_lock_init_recursive>
 8005330:	f7ff ff96 	bl	8005260 <__sfp_lock_release>
 8005334:	2208      	movs	r2, #8
 8005336:	4629      	mov	r1, r5
 8005338:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800533c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8005340:	6025      	str	r5, [r4, #0]
 8005342:	61a5      	str	r5, [r4, #24]
 8005344:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005348:	f7fd f8a6 	bl	8002498 <memset>
 800534c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8005350:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8005354:	4620      	mov	r0, r4
 8005356:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005358:	3468      	adds	r4, #104	; 0x68
 800535a:	e7d9      	b.n	8005310 <__sfp+0x1c>
 800535c:	2104      	movs	r1, #4
 800535e:	4638      	mov	r0, r7
 8005360:	f7ff ff62 	bl	8005228 <__sfmoreglue>
 8005364:	4604      	mov	r4, r0
 8005366:	6030      	str	r0, [r6, #0]
 8005368:	2800      	cmp	r0, #0
 800536a:	d1d5      	bne.n	8005318 <__sfp+0x24>
 800536c:	f7ff ff78 	bl	8005260 <__sfp_lock_release>
 8005370:	230c      	movs	r3, #12
 8005372:	603b      	str	r3, [r7, #0]
 8005374:	e7ee      	b.n	8005354 <__sfp+0x60>
 8005376:	bf00      	nop
 8005378:	08007b34 	.word	0x08007b34
 800537c:	ffff0001 	.word	0xffff0001

08005380 <_fwalk>:
 8005380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005384:	460f      	mov	r7, r1
 8005386:	2600      	movs	r6, #0
 8005388:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800538c:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 8005390:	f1b8 0801 	subs.w	r8, r8, #1
 8005394:	d505      	bpl.n	80053a2 <_fwalk+0x22>
 8005396:	6824      	ldr	r4, [r4, #0]
 8005398:	2c00      	cmp	r4, #0
 800539a:	d1f7      	bne.n	800538c <_fwalk+0xc>
 800539c:	4630      	mov	r0, r6
 800539e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80053a2:	89ab      	ldrh	r3, [r5, #12]
 80053a4:	2b01      	cmp	r3, #1
 80053a6:	d906      	bls.n	80053b6 <_fwalk+0x36>
 80053a8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80053ac:	3301      	adds	r3, #1
 80053ae:	d002      	beq.n	80053b6 <_fwalk+0x36>
 80053b0:	4628      	mov	r0, r5
 80053b2:	47b8      	blx	r7
 80053b4:	4306      	orrs	r6, r0
 80053b6:	3568      	adds	r5, #104	; 0x68
 80053b8:	e7ea      	b.n	8005390 <_fwalk+0x10>

080053ba <_fwalk_reent>:
 80053ba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80053be:	4606      	mov	r6, r0
 80053c0:	4688      	mov	r8, r1
 80053c2:	2700      	movs	r7, #0
 80053c4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80053c8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80053cc:	f1b9 0901 	subs.w	r9, r9, #1
 80053d0:	d505      	bpl.n	80053de <_fwalk_reent+0x24>
 80053d2:	6824      	ldr	r4, [r4, #0]
 80053d4:	2c00      	cmp	r4, #0
 80053d6:	d1f7      	bne.n	80053c8 <_fwalk_reent+0xe>
 80053d8:	4638      	mov	r0, r7
 80053da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80053de:	89ab      	ldrh	r3, [r5, #12]
 80053e0:	2b01      	cmp	r3, #1
 80053e2:	d907      	bls.n	80053f4 <_fwalk_reent+0x3a>
 80053e4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80053e8:	3301      	adds	r3, #1
 80053ea:	d003      	beq.n	80053f4 <_fwalk_reent+0x3a>
 80053ec:	4629      	mov	r1, r5
 80053ee:	4630      	mov	r0, r6
 80053f0:	47c0      	blx	r8
 80053f2:	4307      	orrs	r7, r0
 80053f4:	3568      	adds	r5, #104	; 0x68
 80053f6:	e7e9      	b.n	80053cc <_fwalk_reent+0x12>

080053f8 <rshift>:
 80053f8:	6903      	ldr	r3, [r0, #16]
 80053fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80053fe:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005402:	f100 0414 	add.w	r4, r0, #20
 8005406:	ea4f 1261 	mov.w	r2, r1, asr #5
 800540a:	dd46      	ble.n	800549a <rshift+0xa2>
 800540c:	f011 011f 	ands.w	r1, r1, #31
 8005410:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005414:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005418:	d10c      	bne.n	8005434 <rshift+0x3c>
 800541a:	4629      	mov	r1, r5
 800541c:	f100 0710 	add.w	r7, r0, #16
 8005420:	42b1      	cmp	r1, r6
 8005422:	d335      	bcc.n	8005490 <rshift+0x98>
 8005424:	1a9b      	subs	r3, r3, r2
 8005426:	009b      	lsls	r3, r3, #2
 8005428:	1eea      	subs	r2, r5, #3
 800542a:	4296      	cmp	r6, r2
 800542c:	bf38      	it	cc
 800542e:	2300      	movcc	r3, #0
 8005430:	4423      	add	r3, r4
 8005432:	e015      	b.n	8005460 <rshift+0x68>
 8005434:	46a1      	mov	r9, r4
 8005436:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800543a:	f1c1 0820 	rsb	r8, r1, #32
 800543e:	40cf      	lsrs	r7, r1
 8005440:	f105 0e04 	add.w	lr, r5, #4
 8005444:	4576      	cmp	r6, lr
 8005446:	46f4      	mov	ip, lr
 8005448:	d816      	bhi.n	8005478 <rshift+0x80>
 800544a:	1a9a      	subs	r2, r3, r2
 800544c:	0092      	lsls	r2, r2, #2
 800544e:	3a04      	subs	r2, #4
 8005450:	3501      	adds	r5, #1
 8005452:	42ae      	cmp	r6, r5
 8005454:	bf38      	it	cc
 8005456:	2200      	movcc	r2, #0
 8005458:	18a3      	adds	r3, r4, r2
 800545a:	50a7      	str	r7, [r4, r2]
 800545c:	b107      	cbz	r7, 8005460 <rshift+0x68>
 800545e:	3304      	adds	r3, #4
 8005460:	42a3      	cmp	r3, r4
 8005462:	eba3 0204 	sub.w	r2, r3, r4
 8005466:	bf08      	it	eq
 8005468:	2300      	moveq	r3, #0
 800546a:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800546e:	6102      	str	r2, [r0, #16]
 8005470:	bf08      	it	eq
 8005472:	6143      	streq	r3, [r0, #20]
 8005474:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005478:	f8dc c000 	ldr.w	ip, [ip]
 800547c:	fa0c fc08 	lsl.w	ip, ip, r8
 8005480:	ea4c 0707 	orr.w	r7, ip, r7
 8005484:	f849 7b04 	str.w	r7, [r9], #4
 8005488:	f85e 7b04 	ldr.w	r7, [lr], #4
 800548c:	40cf      	lsrs	r7, r1
 800548e:	e7d9      	b.n	8005444 <rshift+0x4c>
 8005490:	f851 cb04 	ldr.w	ip, [r1], #4
 8005494:	f847 cf04 	str.w	ip, [r7, #4]!
 8005498:	e7c2      	b.n	8005420 <rshift+0x28>
 800549a:	4623      	mov	r3, r4
 800549c:	e7e0      	b.n	8005460 <rshift+0x68>

0800549e <__hexdig_fun>:
 800549e:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80054a2:	2b09      	cmp	r3, #9
 80054a4:	d802      	bhi.n	80054ac <__hexdig_fun+0xe>
 80054a6:	3820      	subs	r0, #32
 80054a8:	b2c0      	uxtb	r0, r0
 80054aa:	4770      	bx	lr
 80054ac:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80054b0:	2b05      	cmp	r3, #5
 80054b2:	d801      	bhi.n	80054b8 <__hexdig_fun+0x1a>
 80054b4:	3847      	subs	r0, #71	; 0x47
 80054b6:	e7f7      	b.n	80054a8 <__hexdig_fun+0xa>
 80054b8:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80054bc:	2b05      	cmp	r3, #5
 80054be:	d801      	bhi.n	80054c4 <__hexdig_fun+0x26>
 80054c0:	3827      	subs	r0, #39	; 0x27
 80054c2:	e7f1      	b.n	80054a8 <__hexdig_fun+0xa>
 80054c4:	2000      	movs	r0, #0
 80054c6:	4770      	bx	lr

080054c8 <__gethex>:
 80054c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054cc:	b08b      	sub	sp, #44	; 0x2c
 80054ce:	9305      	str	r3, [sp, #20]
 80054d0:	4bb2      	ldr	r3, [pc, #712]	; (800579c <__gethex+0x2d4>)
 80054d2:	9002      	str	r0, [sp, #8]
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	468b      	mov	fp, r1
 80054d8:	4618      	mov	r0, r3
 80054da:	4690      	mov	r8, r2
 80054dc:	9303      	str	r3, [sp, #12]
 80054de:	f7fa fea3 	bl	8000228 <strlen>
 80054e2:	4682      	mov	sl, r0
 80054e4:	9b03      	ldr	r3, [sp, #12]
 80054e6:	f8db 2000 	ldr.w	r2, [fp]
 80054ea:	4403      	add	r3, r0
 80054ec:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80054f0:	9306      	str	r3, [sp, #24]
 80054f2:	1c93      	adds	r3, r2, #2
 80054f4:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80054f8:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80054fc:	32fe      	adds	r2, #254	; 0xfe
 80054fe:	18d1      	adds	r1, r2, r3
 8005500:	461f      	mov	r7, r3
 8005502:	f813 0b01 	ldrb.w	r0, [r3], #1
 8005506:	9101      	str	r1, [sp, #4]
 8005508:	2830      	cmp	r0, #48	; 0x30
 800550a:	d0f8      	beq.n	80054fe <__gethex+0x36>
 800550c:	f7ff ffc7 	bl	800549e <__hexdig_fun>
 8005510:	4604      	mov	r4, r0
 8005512:	2800      	cmp	r0, #0
 8005514:	d13a      	bne.n	800558c <__gethex+0xc4>
 8005516:	4652      	mov	r2, sl
 8005518:	4638      	mov	r0, r7
 800551a:	9903      	ldr	r1, [sp, #12]
 800551c:	f002 f817 	bl	800754e <strncmp>
 8005520:	4605      	mov	r5, r0
 8005522:	2800      	cmp	r0, #0
 8005524:	d166      	bne.n	80055f4 <__gethex+0x12c>
 8005526:	f817 000a 	ldrb.w	r0, [r7, sl]
 800552a:	eb07 060a 	add.w	r6, r7, sl
 800552e:	f7ff ffb6 	bl	800549e <__hexdig_fun>
 8005532:	2800      	cmp	r0, #0
 8005534:	d060      	beq.n	80055f8 <__gethex+0x130>
 8005536:	4633      	mov	r3, r6
 8005538:	7818      	ldrb	r0, [r3, #0]
 800553a:	461f      	mov	r7, r3
 800553c:	2830      	cmp	r0, #48	; 0x30
 800553e:	f103 0301 	add.w	r3, r3, #1
 8005542:	d0f9      	beq.n	8005538 <__gethex+0x70>
 8005544:	f7ff ffab 	bl	800549e <__hexdig_fun>
 8005548:	2301      	movs	r3, #1
 800554a:	fab0 f480 	clz	r4, r0
 800554e:	4635      	mov	r5, r6
 8005550:	0964      	lsrs	r4, r4, #5
 8005552:	9301      	str	r3, [sp, #4]
 8005554:	463a      	mov	r2, r7
 8005556:	4616      	mov	r6, r2
 8005558:	7830      	ldrb	r0, [r6, #0]
 800555a:	3201      	adds	r2, #1
 800555c:	f7ff ff9f 	bl	800549e <__hexdig_fun>
 8005560:	2800      	cmp	r0, #0
 8005562:	d1f8      	bne.n	8005556 <__gethex+0x8e>
 8005564:	4652      	mov	r2, sl
 8005566:	4630      	mov	r0, r6
 8005568:	9903      	ldr	r1, [sp, #12]
 800556a:	f001 fff0 	bl	800754e <strncmp>
 800556e:	b980      	cbnz	r0, 8005592 <__gethex+0xca>
 8005570:	b94d      	cbnz	r5, 8005586 <__gethex+0xbe>
 8005572:	eb06 050a 	add.w	r5, r6, sl
 8005576:	462a      	mov	r2, r5
 8005578:	4616      	mov	r6, r2
 800557a:	7830      	ldrb	r0, [r6, #0]
 800557c:	3201      	adds	r2, #1
 800557e:	f7ff ff8e 	bl	800549e <__hexdig_fun>
 8005582:	2800      	cmp	r0, #0
 8005584:	d1f8      	bne.n	8005578 <__gethex+0xb0>
 8005586:	1bad      	subs	r5, r5, r6
 8005588:	00ad      	lsls	r5, r5, #2
 800558a:	e004      	b.n	8005596 <__gethex+0xce>
 800558c:	2400      	movs	r4, #0
 800558e:	4625      	mov	r5, r4
 8005590:	e7e0      	b.n	8005554 <__gethex+0x8c>
 8005592:	2d00      	cmp	r5, #0
 8005594:	d1f7      	bne.n	8005586 <__gethex+0xbe>
 8005596:	7833      	ldrb	r3, [r6, #0]
 8005598:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800559c:	2b50      	cmp	r3, #80	; 0x50
 800559e:	d139      	bne.n	8005614 <__gethex+0x14c>
 80055a0:	7873      	ldrb	r3, [r6, #1]
 80055a2:	2b2b      	cmp	r3, #43	; 0x2b
 80055a4:	d02a      	beq.n	80055fc <__gethex+0x134>
 80055a6:	2b2d      	cmp	r3, #45	; 0x2d
 80055a8:	d02c      	beq.n	8005604 <__gethex+0x13c>
 80055aa:	f04f 0900 	mov.w	r9, #0
 80055ae:	1c71      	adds	r1, r6, #1
 80055b0:	7808      	ldrb	r0, [r1, #0]
 80055b2:	f7ff ff74 	bl	800549e <__hexdig_fun>
 80055b6:	1e43      	subs	r3, r0, #1
 80055b8:	b2db      	uxtb	r3, r3
 80055ba:	2b18      	cmp	r3, #24
 80055bc:	d82a      	bhi.n	8005614 <__gethex+0x14c>
 80055be:	f1a0 0210 	sub.w	r2, r0, #16
 80055c2:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80055c6:	f7ff ff6a 	bl	800549e <__hexdig_fun>
 80055ca:	1e43      	subs	r3, r0, #1
 80055cc:	b2db      	uxtb	r3, r3
 80055ce:	2b18      	cmp	r3, #24
 80055d0:	d91b      	bls.n	800560a <__gethex+0x142>
 80055d2:	f1b9 0f00 	cmp.w	r9, #0
 80055d6:	d000      	beq.n	80055da <__gethex+0x112>
 80055d8:	4252      	negs	r2, r2
 80055da:	4415      	add	r5, r2
 80055dc:	f8cb 1000 	str.w	r1, [fp]
 80055e0:	b1d4      	cbz	r4, 8005618 <__gethex+0x150>
 80055e2:	9b01      	ldr	r3, [sp, #4]
 80055e4:	2b00      	cmp	r3, #0
 80055e6:	bf14      	ite	ne
 80055e8:	2700      	movne	r7, #0
 80055ea:	2706      	moveq	r7, #6
 80055ec:	4638      	mov	r0, r7
 80055ee:	b00b      	add	sp, #44	; 0x2c
 80055f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055f4:	463e      	mov	r6, r7
 80055f6:	4625      	mov	r5, r4
 80055f8:	2401      	movs	r4, #1
 80055fa:	e7cc      	b.n	8005596 <__gethex+0xce>
 80055fc:	f04f 0900 	mov.w	r9, #0
 8005600:	1cb1      	adds	r1, r6, #2
 8005602:	e7d5      	b.n	80055b0 <__gethex+0xe8>
 8005604:	f04f 0901 	mov.w	r9, #1
 8005608:	e7fa      	b.n	8005600 <__gethex+0x138>
 800560a:	230a      	movs	r3, #10
 800560c:	fb03 0202 	mla	r2, r3, r2, r0
 8005610:	3a10      	subs	r2, #16
 8005612:	e7d6      	b.n	80055c2 <__gethex+0xfa>
 8005614:	4631      	mov	r1, r6
 8005616:	e7e1      	b.n	80055dc <__gethex+0x114>
 8005618:	4621      	mov	r1, r4
 800561a:	1bf3      	subs	r3, r6, r7
 800561c:	3b01      	subs	r3, #1
 800561e:	2b07      	cmp	r3, #7
 8005620:	dc0a      	bgt.n	8005638 <__gethex+0x170>
 8005622:	9802      	ldr	r0, [sp, #8]
 8005624:	f000 faf0 	bl	8005c08 <_Balloc>
 8005628:	4604      	mov	r4, r0
 800562a:	b940      	cbnz	r0, 800563e <__gethex+0x176>
 800562c:	4602      	mov	r2, r0
 800562e:	21de      	movs	r1, #222	; 0xde
 8005630:	4b5b      	ldr	r3, [pc, #364]	; (80057a0 <__gethex+0x2d8>)
 8005632:	485c      	ldr	r0, [pc, #368]	; (80057a4 <__gethex+0x2dc>)
 8005634:	f002 f904 	bl	8007840 <__assert_func>
 8005638:	3101      	adds	r1, #1
 800563a:	105b      	asrs	r3, r3, #1
 800563c:	e7ef      	b.n	800561e <__gethex+0x156>
 800563e:	f04f 0b00 	mov.w	fp, #0
 8005642:	f100 0914 	add.w	r9, r0, #20
 8005646:	f1ca 0301 	rsb	r3, sl, #1
 800564a:	f8cd 9010 	str.w	r9, [sp, #16]
 800564e:	f8cd b004 	str.w	fp, [sp, #4]
 8005652:	9308      	str	r3, [sp, #32]
 8005654:	42b7      	cmp	r7, r6
 8005656:	d33f      	bcc.n	80056d8 <__gethex+0x210>
 8005658:	9f04      	ldr	r7, [sp, #16]
 800565a:	9b01      	ldr	r3, [sp, #4]
 800565c:	f847 3b04 	str.w	r3, [r7], #4
 8005660:	eba7 0709 	sub.w	r7, r7, r9
 8005664:	10bf      	asrs	r7, r7, #2
 8005666:	6127      	str	r7, [r4, #16]
 8005668:	4618      	mov	r0, r3
 800566a:	f000 fbbf 	bl	8005dec <__hi0bits>
 800566e:	017f      	lsls	r7, r7, #5
 8005670:	f8d8 6000 	ldr.w	r6, [r8]
 8005674:	1a3f      	subs	r7, r7, r0
 8005676:	42b7      	cmp	r7, r6
 8005678:	dd62      	ble.n	8005740 <__gethex+0x278>
 800567a:	1bbf      	subs	r7, r7, r6
 800567c:	4639      	mov	r1, r7
 800567e:	4620      	mov	r0, r4
 8005680:	f000 ff59 	bl	8006536 <__any_on>
 8005684:	4682      	mov	sl, r0
 8005686:	b1a8      	cbz	r0, 80056b4 <__gethex+0x1ec>
 8005688:	f04f 0a01 	mov.w	sl, #1
 800568c:	1e7b      	subs	r3, r7, #1
 800568e:	1159      	asrs	r1, r3, #5
 8005690:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8005694:	f003 021f 	and.w	r2, r3, #31
 8005698:	fa0a f202 	lsl.w	r2, sl, r2
 800569c:	420a      	tst	r2, r1
 800569e:	d009      	beq.n	80056b4 <__gethex+0x1ec>
 80056a0:	4553      	cmp	r3, sl
 80056a2:	dd05      	ble.n	80056b0 <__gethex+0x1e8>
 80056a4:	4620      	mov	r0, r4
 80056a6:	1eb9      	subs	r1, r7, #2
 80056a8:	f000 ff45 	bl	8006536 <__any_on>
 80056ac:	2800      	cmp	r0, #0
 80056ae:	d144      	bne.n	800573a <__gethex+0x272>
 80056b0:	f04f 0a02 	mov.w	sl, #2
 80056b4:	4639      	mov	r1, r7
 80056b6:	4620      	mov	r0, r4
 80056b8:	f7ff fe9e 	bl	80053f8 <rshift>
 80056bc:	443d      	add	r5, r7
 80056be:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80056c2:	42ab      	cmp	r3, r5
 80056c4:	da4a      	bge.n	800575c <__gethex+0x294>
 80056c6:	4621      	mov	r1, r4
 80056c8:	9802      	ldr	r0, [sp, #8]
 80056ca:	f000 fadd 	bl	8005c88 <_Bfree>
 80056ce:	2300      	movs	r3, #0
 80056d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80056d2:	27a3      	movs	r7, #163	; 0xa3
 80056d4:	6013      	str	r3, [r2, #0]
 80056d6:	e789      	b.n	80055ec <__gethex+0x124>
 80056d8:	1e73      	subs	r3, r6, #1
 80056da:	9a06      	ldr	r2, [sp, #24]
 80056dc:	9307      	str	r3, [sp, #28]
 80056de:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80056e2:	4293      	cmp	r3, r2
 80056e4:	d019      	beq.n	800571a <__gethex+0x252>
 80056e6:	f1bb 0f20 	cmp.w	fp, #32
 80056ea:	d107      	bne.n	80056fc <__gethex+0x234>
 80056ec:	9b04      	ldr	r3, [sp, #16]
 80056ee:	9a01      	ldr	r2, [sp, #4]
 80056f0:	f843 2b04 	str.w	r2, [r3], #4
 80056f4:	9304      	str	r3, [sp, #16]
 80056f6:	2300      	movs	r3, #0
 80056f8:	469b      	mov	fp, r3
 80056fa:	9301      	str	r3, [sp, #4]
 80056fc:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8005700:	f7ff fecd 	bl	800549e <__hexdig_fun>
 8005704:	9b01      	ldr	r3, [sp, #4]
 8005706:	f000 000f 	and.w	r0, r0, #15
 800570a:	fa00 f00b 	lsl.w	r0, r0, fp
 800570e:	4303      	orrs	r3, r0
 8005710:	9301      	str	r3, [sp, #4]
 8005712:	f10b 0b04 	add.w	fp, fp, #4
 8005716:	9b07      	ldr	r3, [sp, #28]
 8005718:	e00d      	b.n	8005736 <__gethex+0x26e>
 800571a:	9a08      	ldr	r2, [sp, #32]
 800571c:	1e73      	subs	r3, r6, #1
 800571e:	4413      	add	r3, r2
 8005720:	42bb      	cmp	r3, r7
 8005722:	d3e0      	bcc.n	80056e6 <__gethex+0x21e>
 8005724:	4618      	mov	r0, r3
 8005726:	4652      	mov	r2, sl
 8005728:	9903      	ldr	r1, [sp, #12]
 800572a:	9309      	str	r3, [sp, #36]	; 0x24
 800572c:	f001 ff0f 	bl	800754e <strncmp>
 8005730:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005732:	2800      	cmp	r0, #0
 8005734:	d1d7      	bne.n	80056e6 <__gethex+0x21e>
 8005736:	461e      	mov	r6, r3
 8005738:	e78c      	b.n	8005654 <__gethex+0x18c>
 800573a:	f04f 0a03 	mov.w	sl, #3
 800573e:	e7b9      	b.n	80056b4 <__gethex+0x1ec>
 8005740:	da09      	bge.n	8005756 <__gethex+0x28e>
 8005742:	1bf7      	subs	r7, r6, r7
 8005744:	4621      	mov	r1, r4
 8005746:	463a      	mov	r2, r7
 8005748:	9802      	ldr	r0, [sp, #8]
 800574a:	f000 fcb5 	bl	80060b8 <__lshift>
 800574e:	4604      	mov	r4, r0
 8005750:	1bed      	subs	r5, r5, r7
 8005752:	f100 0914 	add.w	r9, r0, #20
 8005756:	f04f 0a00 	mov.w	sl, #0
 800575a:	e7b0      	b.n	80056be <__gethex+0x1f6>
 800575c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8005760:	42a8      	cmp	r0, r5
 8005762:	dd72      	ble.n	800584a <__gethex+0x382>
 8005764:	1b45      	subs	r5, r0, r5
 8005766:	42ae      	cmp	r6, r5
 8005768:	dc35      	bgt.n	80057d6 <__gethex+0x30e>
 800576a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800576e:	2b02      	cmp	r3, #2
 8005770:	d029      	beq.n	80057c6 <__gethex+0x2fe>
 8005772:	2b03      	cmp	r3, #3
 8005774:	d02b      	beq.n	80057ce <__gethex+0x306>
 8005776:	2b01      	cmp	r3, #1
 8005778:	d11c      	bne.n	80057b4 <__gethex+0x2ec>
 800577a:	42ae      	cmp	r6, r5
 800577c:	d11a      	bne.n	80057b4 <__gethex+0x2ec>
 800577e:	2e01      	cmp	r6, #1
 8005780:	d112      	bne.n	80057a8 <__gethex+0x2e0>
 8005782:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005786:	9a05      	ldr	r2, [sp, #20]
 8005788:	2762      	movs	r7, #98	; 0x62
 800578a:	6013      	str	r3, [r2, #0]
 800578c:	2301      	movs	r3, #1
 800578e:	6123      	str	r3, [r4, #16]
 8005790:	f8c9 3000 	str.w	r3, [r9]
 8005794:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005796:	601c      	str	r4, [r3, #0]
 8005798:	e728      	b.n	80055ec <__gethex+0x124>
 800579a:	bf00      	nop
 800579c:	08007e1c 	.word	0x08007e1c
 80057a0:	08007d40 	.word	0x08007d40
 80057a4:	08007db4 	.word	0x08007db4
 80057a8:	4620      	mov	r0, r4
 80057aa:	1e71      	subs	r1, r6, #1
 80057ac:	f000 fec3 	bl	8006536 <__any_on>
 80057b0:	2800      	cmp	r0, #0
 80057b2:	d1e6      	bne.n	8005782 <__gethex+0x2ba>
 80057b4:	4621      	mov	r1, r4
 80057b6:	9802      	ldr	r0, [sp, #8]
 80057b8:	f000 fa66 	bl	8005c88 <_Bfree>
 80057bc:	2300      	movs	r3, #0
 80057be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80057c0:	2750      	movs	r7, #80	; 0x50
 80057c2:	6013      	str	r3, [r2, #0]
 80057c4:	e712      	b.n	80055ec <__gethex+0x124>
 80057c6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80057c8:	2b00      	cmp	r3, #0
 80057ca:	d1f3      	bne.n	80057b4 <__gethex+0x2ec>
 80057cc:	e7d9      	b.n	8005782 <__gethex+0x2ba>
 80057ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80057d0:	2b00      	cmp	r3, #0
 80057d2:	d1d6      	bne.n	8005782 <__gethex+0x2ba>
 80057d4:	e7ee      	b.n	80057b4 <__gethex+0x2ec>
 80057d6:	1e6f      	subs	r7, r5, #1
 80057d8:	f1ba 0f00 	cmp.w	sl, #0
 80057dc:	d132      	bne.n	8005844 <__gethex+0x37c>
 80057de:	b127      	cbz	r7, 80057ea <__gethex+0x322>
 80057e0:	4639      	mov	r1, r7
 80057e2:	4620      	mov	r0, r4
 80057e4:	f000 fea7 	bl	8006536 <__any_on>
 80057e8:	4682      	mov	sl, r0
 80057ea:	2101      	movs	r1, #1
 80057ec:	117b      	asrs	r3, r7, #5
 80057ee:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80057f2:	f007 071f 	and.w	r7, r7, #31
 80057f6:	fa01 f707 	lsl.w	r7, r1, r7
 80057fa:	421f      	tst	r7, r3
 80057fc:	f04f 0702 	mov.w	r7, #2
 8005800:	4629      	mov	r1, r5
 8005802:	4620      	mov	r0, r4
 8005804:	bf18      	it	ne
 8005806:	f04a 0a02 	orrne.w	sl, sl, #2
 800580a:	1b76      	subs	r6, r6, r5
 800580c:	f7ff fdf4 	bl	80053f8 <rshift>
 8005810:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005814:	f1ba 0f00 	cmp.w	sl, #0
 8005818:	d048      	beq.n	80058ac <__gethex+0x3e4>
 800581a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800581e:	2b02      	cmp	r3, #2
 8005820:	d015      	beq.n	800584e <__gethex+0x386>
 8005822:	2b03      	cmp	r3, #3
 8005824:	d017      	beq.n	8005856 <__gethex+0x38e>
 8005826:	2b01      	cmp	r3, #1
 8005828:	d109      	bne.n	800583e <__gethex+0x376>
 800582a:	f01a 0f02 	tst.w	sl, #2
 800582e:	d006      	beq.n	800583e <__gethex+0x376>
 8005830:	f8d9 0000 	ldr.w	r0, [r9]
 8005834:	ea4a 0a00 	orr.w	sl, sl, r0
 8005838:	f01a 0f01 	tst.w	sl, #1
 800583c:	d10e      	bne.n	800585c <__gethex+0x394>
 800583e:	f047 0710 	orr.w	r7, r7, #16
 8005842:	e033      	b.n	80058ac <__gethex+0x3e4>
 8005844:	f04f 0a01 	mov.w	sl, #1
 8005848:	e7cf      	b.n	80057ea <__gethex+0x322>
 800584a:	2701      	movs	r7, #1
 800584c:	e7e2      	b.n	8005814 <__gethex+0x34c>
 800584e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005850:	f1c3 0301 	rsb	r3, r3, #1
 8005854:	9315      	str	r3, [sp, #84]	; 0x54
 8005856:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005858:	2b00      	cmp	r3, #0
 800585a:	d0f0      	beq.n	800583e <__gethex+0x376>
 800585c:	f04f 0c00 	mov.w	ip, #0
 8005860:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005864:	f104 0314 	add.w	r3, r4, #20
 8005868:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800586c:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8005870:	4618      	mov	r0, r3
 8005872:	f853 2b04 	ldr.w	r2, [r3], #4
 8005876:	f1b2 3fff 	cmp.w	r2, #4294967295
 800587a:	d01c      	beq.n	80058b6 <__gethex+0x3ee>
 800587c:	3201      	adds	r2, #1
 800587e:	6002      	str	r2, [r0, #0]
 8005880:	2f02      	cmp	r7, #2
 8005882:	f104 0314 	add.w	r3, r4, #20
 8005886:	d13d      	bne.n	8005904 <__gethex+0x43c>
 8005888:	f8d8 2000 	ldr.w	r2, [r8]
 800588c:	3a01      	subs	r2, #1
 800588e:	42b2      	cmp	r2, r6
 8005890:	d10a      	bne.n	80058a8 <__gethex+0x3e0>
 8005892:	2201      	movs	r2, #1
 8005894:	1171      	asrs	r1, r6, #5
 8005896:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800589a:	f006 061f 	and.w	r6, r6, #31
 800589e:	fa02 f606 	lsl.w	r6, r2, r6
 80058a2:	421e      	tst	r6, r3
 80058a4:	bf18      	it	ne
 80058a6:	4617      	movne	r7, r2
 80058a8:	f047 0720 	orr.w	r7, r7, #32
 80058ac:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80058ae:	601c      	str	r4, [r3, #0]
 80058b0:	9b05      	ldr	r3, [sp, #20]
 80058b2:	601d      	str	r5, [r3, #0]
 80058b4:	e69a      	b.n	80055ec <__gethex+0x124>
 80058b6:	4299      	cmp	r1, r3
 80058b8:	f843 cc04 	str.w	ip, [r3, #-4]
 80058bc:	d8d8      	bhi.n	8005870 <__gethex+0x3a8>
 80058be:	68a3      	ldr	r3, [r4, #8]
 80058c0:	459b      	cmp	fp, r3
 80058c2:	db17      	blt.n	80058f4 <__gethex+0x42c>
 80058c4:	6861      	ldr	r1, [r4, #4]
 80058c6:	9802      	ldr	r0, [sp, #8]
 80058c8:	3101      	adds	r1, #1
 80058ca:	f000 f99d 	bl	8005c08 <_Balloc>
 80058ce:	4681      	mov	r9, r0
 80058d0:	b918      	cbnz	r0, 80058da <__gethex+0x412>
 80058d2:	4602      	mov	r2, r0
 80058d4:	2184      	movs	r1, #132	; 0x84
 80058d6:	4b19      	ldr	r3, [pc, #100]	; (800593c <__gethex+0x474>)
 80058d8:	e6ab      	b.n	8005632 <__gethex+0x16a>
 80058da:	6922      	ldr	r2, [r4, #16]
 80058dc:	f104 010c 	add.w	r1, r4, #12
 80058e0:	3202      	adds	r2, #2
 80058e2:	0092      	lsls	r2, r2, #2
 80058e4:	300c      	adds	r0, #12
 80058e6:	f000 f981 	bl	8005bec <memcpy>
 80058ea:	4621      	mov	r1, r4
 80058ec:	9802      	ldr	r0, [sp, #8]
 80058ee:	f000 f9cb 	bl	8005c88 <_Bfree>
 80058f2:	464c      	mov	r4, r9
 80058f4:	6923      	ldr	r3, [r4, #16]
 80058f6:	1c5a      	adds	r2, r3, #1
 80058f8:	6122      	str	r2, [r4, #16]
 80058fa:	2201      	movs	r2, #1
 80058fc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005900:	615a      	str	r2, [r3, #20]
 8005902:	e7bd      	b.n	8005880 <__gethex+0x3b8>
 8005904:	6922      	ldr	r2, [r4, #16]
 8005906:	455a      	cmp	r2, fp
 8005908:	dd0b      	ble.n	8005922 <__gethex+0x45a>
 800590a:	2101      	movs	r1, #1
 800590c:	4620      	mov	r0, r4
 800590e:	f7ff fd73 	bl	80053f8 <rshift>
 8005912:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005916:	3501      	adds	r5, #1
 8005918:	42ab      	cmp	r3, r5
 800591a:	f6ff aed4 	blt.w	80056c6 <__gethex+0x1fe>
 800591e:	2701      	movs	r7, #1
 8005920:	e7c2      	b.n	80058a8 <__gethex+0x3e0>
 8005922:	f016 061f 	ands.w	r6, r6, #31
 8005926:	d0fa      	beq.n	800591e <__gethex+0x456>
 8005928:	4453      	add	r3, sl
 800592a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800592e:	f000 fa5d 	bl	8005dec <__hi0bits>
 8005932:	f1c6 0620 	rsb	r6, r6, #32
 8005936:	42b0      	cmp	r0, r6
 8005938:	dbe7      	blt.n	800590a <__gethex+0x442>
 800593a:	e7f0      	b.n	800591e <__gethex+0x456>
 800593c:	08007d40 	.word	0x08007d40

08005940 <L_shift>:
 8005940:	f1c2 0208 	rsb	r2, r2, #8
 8005944:	0092      	lsls	r2, r2, #2
 8005946:	b570      	push	{r4, r5, r6, lr}
 8005948:	f1c2 0620 	rsb	r6, r2, #32
 800594c:	6843      	ldr	r3, [r0, #4]
 800594e:	6804      	ldr	r4, [r0, #0]
 8005950:	fa03 f506 	lsl.w	r5, r3, r6
 8005954:	432c      	orrs	r4, r5
 8005956:	40d3      	lsrs	r3, r2
 8005958:	6004      	str	r4, [r0, #0]
 800595a:	f840 3f04 	str.w	r3, [r0, #4]!
 800595e:	4288      	cmp	r0, r1
 8005960:	d3f4      	bcc.n	800594c <L_shift+0xc>
 8005962:	bd70      	pop	{r4, r5, r6, pc}

08005964 <__match>:
 8005964:	b530      	push	{r4, r5, lr}
 8005966:	6803      	ldr	r3, [r0, #0]
 8005968:	3301      	adds	r3, #1
 800596a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800596e:	b914      	cbnz	r4, 8005976 <__match+0x12>
 8005970:	6003      	str	r3, [r0, #0]
 8005972:	2001      	movs	r0, #1
 8005974:	bd30      	pop	{r4, r5, pc}
 8005976:	f813 2b01 	ldrb.w	r2, [r3], #1
 800597a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800597e:	2d19      	cmp	r5, #25
 8005980:	bf98      	it	ls
 8005982:	3220      	addls	r2, #32
 8005984:	42a2      	cmp	r2, r4
 8005986:	d0f0      	beq.n	800596a <__match+0x6>
 8005988:	2000      	movs	r0, #0
 800598a:	e7f3      	b.n	8005974 <__match+0x10>

0800598c <__hexnan>:
 800598c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005990:	2500      	movs	r5, #0
 8005992:	680b      	ldr	r3, [r1, #0]
 8005994:	4682      	mov	sl, r0
 8005996:	115e      	asrs	r6, r3, #5
 8005998:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800599c:	f013 031f 	ands.w	r3, r3, #31
 80059a0:	bf18      	it	ne
 80059a2:	3604      	addne	r6, #4
 80059a4:	1f37      	subs	r7, r6, #4
 80059a6:	46b9      	mov	r9, r7
 80059a8:	463c      	mov	r4, r7
 80059aa:	46ab      	mov	fp, r5
 80059ac:	b087      	sub	sp, #28
 80059ae:	4690      	mov	r8, r2
 80059b0:	6802      	ldr	r2, [r0, #0]
 80059b2:	9301      	str	r3, [sp, #4]
 80059b4:	f846 5c04 	str.w	r5, [r6, #-4]
 80059b8:	9502      	str	r5, [sp, #8]
 80059ba:	7851      	ldrb	r1, [r2, #1]
 80059bc:	1c53      	adds	r3, r2, #1
 80059be:	9303      	str	r3, [sp, #12]
 80059c0:	b341      	cbz	r1, 8005a14 <__hexnan+0x88>
 80059c2:	4608      	mov	r0, r1
 80059c4:	9205      	str	r2, [sp, #20]
 80059c6:	9104      	str	r1, [sp, #16]
 80059c8:	f7ff fd69 	bl	800549e <__hexdig_fun>
 80059cc:	2800      	cmp	r0, #0
 80059ce:	d14f      	bne.n	8005a70 <__hexnan+0xe4>
 80059d0:	9904      	ldr	r1, [sp, #16]
 80059d2:	9a05      	ldr	r2, [sp, #20]
 80059d4:	2920      	cmp	r1, #32
 80059d6:	d818      	bhi.n	8005a0a <__hexnan+0x7e>
 80059d8:	9b02      	ldr	r3, [sp, #8]
 80059da:	459b      	cmp	fp, r3
 80059dc:	dd13      	ble.n	8005a06 <__hexnan+0x7a>
 80059de:	454c      	cmp	r4, r9
 80059e0:	d206      	bcs.n	80059f0 <__hexnan+0x64>
 80059e2:	2d07      	cmp	r5, #7
 80059e4:	dc04      	bgt.n	80059f0 <__hexnan+0x64>
 80059e6:	462a      	mov	r2, r5
 80059e8:	4649      	mov	r1, r9
 80059ea:	4620      	mov	r0, r4
 80059ec:	f7ff ffa8 	bl	8005940 <L_shift>
 80059f0:	4544      	cmp	r4, r8
 80059f2:	d950      	bls.n	8005a96 <__hexnan+0x10a>
 80059f4:	2300      	movs	r3, #0
 80059f6:	f1a4 0904 	sub.w	r9, r4, #4
 80059fa:	f844 3c04 	str.w	r3, [r4, #-4]
 80059fe:	461d      	mov	r5, r3
 8005a00:	464c      	mov	r4, r9
 8005a02:	f8cd b008 	str.w	fp, [sp, #8]
 8005a06:	9a03      	ldr	r2, [sp, #12]
 8005a08:	e7d7      	b.n	80059ba <__hexnan+0x2e>
 8005a0a:	2929      	cmp	r1, #41	; 0x29
 8005a0c:	d156      	bne.n	8005abc <__hexnan+0x130>
 8005a0e:	3202      	adds	r2, #2
 8005a10:	f8ca 2000 	str.w	r2, [sl]
 8005a14:	f1bb 0f00 	cmp.w	fp, #0
 8005a18:	d050      	beq.n	8005abc <__hexnan+0x130>
 8005a1a:	454c      	cmp	r4, r9
 8005a1c:	d206      	bcs.n	8005a2c <__hexnan+0xa0>
 8005a1e:	2d07      	cmp	r5, #7
 8005a20:	dc04      	bgt.n	8005a2c <__hexnan+0xa0>
 8005a22:	462a      	mov	r2, r5
 8005a24:	4649      	mov	r1, r9
 8005a26:	4620      	mov	r0, r4
 8005a28:	f7ff ff8a 	bl	8005940 <L_shift>
 8005a2c:	4544      	cmp	r4, r8
 8005a2e:	d934      	bls.n	8005a9a <__hexnan+0x10e>
 8005a30:	4623      	mov	r3, r4
 8005a32:	f1a8 0204 	sub.w	r2, r8, #4
 8005a36:	f853 1b04 	ldr.w	r1, [r3], #4
 8005a3a:	429f      	cmp	r7, r3
 8005a3c:	f842 1f04 	str.w	r1, [r2, #4]!
 8005a40:	d2f9      	bcs.n	8005a36 <__hexnan+0xaa>
 8005a42:	1b3b      	subs	r3, r7, r4
 8005a44:	f023 0303 	bic.w	r3, r3, #3
 8005a48:	3304      	adds	r3, #4
 8005a4a:	3401      	adds	r4, #1
 8005a4c:	3e03      	subs	r6, #3
 8005a4e:	42b4      	cmp	r4, r6
 8005a50:	bf88      	it	hi
 8005a52:	2304      	movhi	r3, #4
 8005a54:	2200      	movs	r2, #0
 8005a56:	4443      	add	r3, r8
 8005a58:	f843 2b04 	str.w	r2, [r3], #4
 8005a5c:	429f      	cmp	r7, r3
 8005a5e:	d2fb      	bcs.n	8005a58 <__hexnan+0xcc>
 8005a60:	683b      	ldr	r3, [r7, #0]
 8005a62:	b91b      	cbnz	r3, 8005a6c <__hexnan+0xe0>
 8005a64:	4547      	cmp	r7, r8
 8005a66:	d127      	bne.n	8005ab8 <__hexnan+0x12c>
 8005a68:	2301      	movs	r3, #1
 8005a6a:	603b      	str	r3, [r7, #0]
 8005a6c:	2005      	movs	r0, #5
 8005a6e:	e026      	b.n	8005abe <__hexnan+0x132>
 8005a70:	3501      	adds	r5, #1
 8005a72:	2d08      	cmp	r5, #8
 8005a74:	f10b 0b01 	add.w	fp, fp, #1
 8005a78:	dd06      	ble.n	8005a88 <__hexnan+0xfc>
 8005a7a:	4544      	cmp	r4, r8
 8005a7c:	d9c3      	bls.n	8005a06 <__hexnan+0x7a>
 8005a7e:	2300      	movs	r3, #0
 8005a80:	2501      	movs	r5, #1
 8005a82:	f844 3c04 	str.w	r3, [r4, #-4]
 8005a86:	3c04      	subs	r4, #4
 8005a88:	6822      	ldr	r2, [r4, #0]
 8005a8a:	f000 000f 	and.w	r0, r0, #15
 8005a8e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8005a92:	6022      	str	r2, [r4, #0]
 8005a94:	e7b7      	b.n	8005a06 <__hexnan+0x7a>
 8005a96:	2508      	movs	r5, #8
 8005a98:	e7b5      	b.n	8005a06 <__hexnan+0x7a>
 8005a9a:	9b01      	ldr	r3, [sp, #4]
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	d0df      	beq.n	8005a60 <__hexnan+0xd4>
 8005aa0:	f04f 32ff 	mov.w	r2, #4294967295
 8005aa4:	f1c3 0320 	rsb	r3, r3, #32
 8005aa8:	fa22 f303 	lsr.w	r3, r2, r3
 8005aac:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8005ab0:	401a      	ands	r2, r3
 8005ab2:	f846 2c04 	str.w	r2, [r6, #-4]
 8005ab6:	e7d3      	b.n	8005a60 <__hexnan+0xd4>
 8005ab8:	3f04      	subs	r7, #4
 8005aba:	e7d1      	b.n	8005a60 <__hexnan+0xd4>
 8005abc:	2004      	movs	r0, #4
 8005abe:	b007      	add	sp, #28
 8005ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005ac4 <_localeconv_r>:
 8005ac4:	4800      	ldr	r0, [pc, #0]	; (8005ac8 <_localeconv_r+0x4>)
 8005ac6:	4770      	bx	lr
 8005ac8:	20000164 	.word	0x20000164

08005acc <__retarget_lock_init_recursive>:
 8005acc:	4770      	bx	lr

08005ace <__retarget_lock_acquire_recursive>:
 8005ace:	4770      	bx	lr

08005ad0 <__retarget_lock_release_recursive>:
 8005ad0:	4770      	bx	lr

08005ad2 <__swhatbuf_r>:
 8005ad2:	b570      	push	{r4, r5, r6, lr}
 8005ad4:	460e      	mov	r6, r1
 8005ad6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005ada:	4614      	mov	r4, r2
 8005adc:	2900      	cmp	r1, #0
 8005ade:	461d      	mov	r5, r3
 8005ae0:	b096      	sub	sp, #88	; 0x58
 8005ae2:	da08      	bge.n	8005af6 <__swhatbuf_r+0x24>
 8005ae4:	2200      	movs	r2, #0
 8005ae6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8005aea:	602a      	str	r2, [r5, #0]
 8005aec:	061a      	lsls	r2, r3, #24
 8005aee:	d410      	bmi.n	8005b12 <__swhatbuf_r+0x40>
 8005af0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005af4:	e00e      	b.n	8005b14 <__swhatbuf_r+0x42>
 8005af6:	466a      	mov	r2, sp
 8005af8:	f001 fee2 	bl	80078c0 <_fstat_r>
 8005afc:	2800      	cmp	r0, #0
 8005afe:	dbf1      	blt.n	8005ae4 <__swhatbuf_r+0x12>
 8005b00:	9a01      	ldr	r2, [sp, #4]
 8005b02:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8005b06:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005b0a:	425a      	negs	r2, r3
 8005b0c:	415a      	adcs	r2, r3
 8005b0e:	602a      	str	r2, [r5, #0]
 8005b10:	e7ee      	b.n	8005af0 <__swhatbuf_r+0x1e>
 8005b12:	2340      	movs	r3, #64	; 0x40
 8005b14:	2000      	movs	r0, #0
 8005b16:	6023      	str	r3, [r4, #0]
 8005b18:	b016      	add	sp, #88	; 0x58
 8005b1a:	bd70      	pop	{r4, r5, r6, pc}

08005b1c <__smakebuf_r>:
 8005b1c:	898b      	ldrh	r3, [r1, #12]
 8005b1e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005b20:	079d      	lsls	r5, r3, #30
 8005b22:	4606      	mov	r6, r0
 8005b24:	460c      	mov	r4, r1
 8005b26:	d507      	bpl.n	8005b38 <__smakebuf_r+0x1c>
 8005b28:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005b2c:	6023      	str	r3, [r4, #0]
 8005b2e:	6123      	str	r3, [r4, #16]
 8005b30:	2301      	movs	r3, #1
 8005b32:	6163      	str	r3, [r4, #20]
 8005b34:	b002      	add	sp, #8
 8005b36:	bd70      	pop	{r4, r5, r6, pc}
 8005b38:	466a      	mov	r2, sp
 8005b3a:	ab01      	add	r3, sp, #4
 8005b3c:	f7ff ffc9 	bl	8005ad2 <__swhatbuf_r>
 8005b40:	9900      	ldr	r1, [sp, #0]
 8005b42:	4605      	mov	r5, r0
 8005b44:	4630      	mov	r0, r6
 8005b46:	f000 fd93 	bl	8006670 <_malloc_r>
 8005b4a:	b948      	cbnz	r0, 8005b60 <__smakebuf_r+0x44>
 8005b4c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005b50:	059a      	lsls	r2, r3, #22
 8005b52:	d4ef      	bmi.n	8005b34 <__smakebuf_r+0x18>
 8005b54:	f023 0303 	bic.w	r3, r3, #3
 8005b58:	f043 0302 	orr.w	r3, r3, #2
 8005b5c:	81a3      	strh	r3, [r4, #12]
 8005b5e:	e7e3      	b.n	8005b28 <__smakebuf_r+0xc>
 8005b60:	4b0d      	ldr	r3, [pc, #52]	; (8005b98 <__smakebuf_r+0x7c>)
 8005b62:	62b3      	str	r3, [r6, #40]	; 0x28
 8005b64:	89a3      	ldrh	r3, [r4, #12]
 8005b66:	6020      	str	r0, [r4, #0]
 8005b68:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005b6c:	81a3      	strh	r3, [r4, #12]
 8005b6e:	9b00      	ldr	r3, [sp, #0]
 8005b70:	6120      	str	r0, [r4, #16]
 8005b72:	6163      	str	r3, [r4, #20]
 8005b74:	9b01      	ldr	r3, [sp, #4]
 8005b76:	b15b      	cbz	r3, 8005b90 <__smakebuf_r+0x74>
 8005b78:	4630      	mov	r0, r6
 8005b7a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005b7e:	f001 feb1 	bl	80078e4 <_isatty_r>
 8005b82:	b128      	cbz	r0, 8005b90 <__smakebuf_r+0x74>
 8005b84:	89a3      	ldrh	r3, [r4, #12]
 8005b86:	f023 0303 	bic.w	r3, r3, #3
 8005b8a:	f043 0301 	orr.w	r3, r3, #1
 8005b8e:	81a3      	strh	r3, [r4, #12]
 8005b90:	89a0      	ldrh	r0, [r4, #12]
 8005b92:	4305      	orrs	r5, r0
 8005b94:	81a5      	strh	r5, [r4, #12]
 8005b96:	e7cd      	b.n	8005b34 <__smakebuf_r+0x18>
 8005b98:	0800521d 	.word	0x0800521d

08005b9c <malloc>:
 8005b9c:	4b02      	ldr	r3, [pc, #8]	; (8005ba8 <malloc+0xc>)
 8005b9e:	4601      	mov	r1, r0
 8005ba0:	6818      	ldr	r0, [r3, #0]
 8005ba2:	f000 bd65 	b.w	8006670 <_malloc_r>
 8005ba6:	bf00      	nop
 8005ba8:	2000000c 	.word	0x2000000c

08005bac <__ascii_mbtowc>:
 8005bac:	b082      	sub	sp, #8
 8005bae:	b901      	cbnz	r1, 8005bb2 <__ascii_mbtowc+0x6>
 8005bb0:	a901      	add	r1, sp, #4
 8005bb2:	b142      	cbz	r2, 8005bc6 <__ascii_mbtowc+0x1a>
 8005bb4:	b14b      	cbz	r3, 8005bca <__ascii_mbtowc+0x1e>
 8005bb6:	7813      	ldrb	r3, [r2, #0]
 8005bb8:	600b      	str	r3, [r1, #0]
 8005bba:	7812      	ldrb	r2, [r2, #0]
 8005bbc:	1e10      	subs	r0, r2, #0
 8005bbe:	bf18      	it	ne
 8005bc0:	2001      	movne	r0, #1
 8005bc2:	b002      	add	sp, #8
 8005bc4:	4770      	bx	lr
 8005bc6:	4610      	mov	r0, r2
 8005bc8:	e7fb      	b.n	8005bc2 <__ascii_mbtowc+0x16>
 8005bca:	f06f 0001 	mvn.w	r0, #1
 8005bce:	e7f8      	b.n	8005bc2 <__ascii_mbtowc+0x16>

08005bd0 <memchr>:
 8005bd0:	4603      	mov	r3, r0
 8005bd2:	b510      	push	{r4, lr}
 8005bd4:	b2c9      	uxtb	r1, r1
 8005bd6:	4402      	add	r2, r0
 8005bd8:	4293      	cmp	r3, r2
 8005bda:	4618      	mov	r0, r3
 8005bdc:	d101      	bne.n	8005be2 <memchr+0x12>
 8005bde:	2000      	movs	r0, #0
 8005be0:	e003      	b.n	8005bea <memchr+0x1a>
 8005be2:	7804      	ldrb	r4, [r0, #0]
 8005be4:	3301      	adds	r3, #1
 8005be6:	428c      	cmp	r4, r1
 8005be8:	d1f6      	bne.n	8005bd8 <memchr+0x8>
 8005bea:	bd10      	pop	{r4, pc}

08005bec <memcpy>:
 8005bec:	440a      	add	r2, r1
 8005bee:	4291      	cmp	r1, r2
 8005bf0:	f100 33ff 	add.w	r3, r0, #4294967295
 8005bf4:	d100      	bne.n	8005bf8 <memcpy+0xc>
 8005bf6:	4770      	bx	lr
 8005bf8:	b510      	push	{r4, lr}
 8005bfa:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005bfe:	4291      	cmp	r1, r2
 8005c00:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005c04:	d1f9      	bne.n	8005bfa <memcpy+0xe>
 8005c06:	bd10      	pop	{r4, pc}

08005c08 <_Balloc>:
 8005c08:	b570      	push	{r4, r5, r6, lr}
 8005c0a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005c0c:	4604      	mov	r4, r0
 8005c0e:	460d      	mov	r5, r1
 8005c10:	b976      	cbnz	r6, 8005c30 <_Balloc+0x28>
 8005c12:	2010      	movs	r0, #16
 8005c14:	f7ff ffc2 	bl	8005b9c <malloc>
 8005c18:	4602      	mov	r2, r0
 8005c1a:	6260      	str	r0, [r4, #36]	; 0x24
 8005c1c:	b920      	cbnz	r0, 8005c28 <_Balloc+0x20>
 8005c1e:	2166      	movs	r1, #102	; 0x66
 8005c20:	4b17      	ldr	r3, [pc, #92]	; (8005c80 <_Balloc+0x78>)
 8005c22:	4818      	ldr	r0, [pc, #96]	; (8005c84 <_Balloc+0x7c>)
 8005c24:	f001 fe0c 	bl	8007840 <__assert_func>
 8005c28:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005c2c:	6006      	str	r6, [r0, #0]
 8005c2e:	60c6      	str	r6, [r0, #12]
 8005c30:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8005c32:	68f3      	ldr	r3, [r6, #12]
 8005c34:	b183      	cbz	r3, 8005c58 <_Balloc+0x50>
 8005c36:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c38:	68db      	ldr	r3, [r3, #12]
 8005c3a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005c3e:	b9b8      	cbnz	r0, 8005c70 <_Balloc+0x68>
 8005c40:	2101      	movs	r1, #1
 8005c42:	fa01 f605 	lsl.w	r6, r1, r5
 8005c46:	1d72      	adds	r2, r6, #5
 8005c48:	4620      	mov	r0, r4
 8005c4a:	0092      	lsls	r2, r2, #2
 8005c4c:	f000 fc94 	bl	8006578 <_calloc_r>
 8005c50:	b160      	cbz	r0, 8005c6c <_Balloc+0x64>
 8005c52:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8005c56:	e00e      	b.n	8005c76 <_Balloc+0x6e>
 8005c58:	2221      	movs	r2, #33	; 0x21
 8005c5a:	2104      	movs	r1, #4
 8005c5c:	4620      	mov	r0, r4
 8005c5e:	f000 fc8b 	bl	8006578 <_calloc_r>
 8005c62:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c64:	60f0      	str	r0, [r6, #12]
 8005c66:	68db      	ldr	r3, [r3, #12]
 8005c68:	2b00      	cmp	r3, #0
 8005c6a:	d1e4      	bne.n	8005c36 <_Balloc+0x2e>
 8005c6c:	2000      	movs	r0, #0
 8005c6e:	bd70      	pop	{r4, r5, r6, pc}
 8005c70:	6802      	ldr	r2, [r0, #0]
 8005c72:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8005c76:	2300      	movs	r3, #0
 8005c78:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005c7c:	e7f7      	b.n	8005c6e <_Balloc+0x66>
 8005c7e:	bf00      	nop
 8005c80:	08007cce 	.word	0x08007cce
 8005c84:	08007e30 	.word	0x08007e30

08005c88 <_Bfree>:
 8005c88:	b570      	push	{r4, r5, r6, lr}
 8005c8a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005c8c:	4605      	mov	r5, r0
 8005c8e:	460c      	mov	r4, r1
 8005c90:	b976      	cbnz	r6, 8005cb0 <_Bfree+0x28>
 8005c92:	2010      	movs	r0, #16
 8005c94:	f7ff ff82 	bl	8005b9c <malloc>
 8005c98:	4602      	mov	r2, r0
 8005c9a:	6268      	str	r0, [r5, #36]	; 0x24
 8005c9c:	b920      	cbnz	r0, 8005ca8 <_Bfree+0x20>
 8005c9e:	218a      	movs	r1, #138	; 0x8a
 8005ca0:	4b08      	ldr	r3, [pc, #32]	; (8005cc4 <_Bfree+0x3c>)
 8005ca2:	4809      	ldr	r0, [pc, #36]	; (8005cc8 <_Bfree+0x40>)
 8005ca4:	f001 fdcc 	bl	8007840 <__assert_func>
 8005ca8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005cac:	6006      	str	r6, [r0, #0]
 8005cae:	60c6      	str	r6, [r0, #12]
 8005cb0:	b13c      	cbz	r4, 8005cc2 <_Bfree+0x3a>
 8005cb2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005cb4:	6862      	ldr	r2, [r4, #4]
 8005cb6:	68db      	ldr	r3, [r3, #12]
 8005cb8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005cbc:	6021      	str	r1, [r4, #0]
 8005cbe:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8005cc2:	bd70      	pop	{r4, r5, r6, pc}
 8005cc4:	08007cce 	.word	0x08007cce
 8005cc8:	08007e30 	.word	0x08007e30

08005ccc <__multadd>:
 8005ccc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005cd0:	4607      	mov	r7, r0
 8005cd2:	460c      	mov	r4, r1
 8005cd4:	461e      	mov	r6, r3
 8005cd6:	2000      	movs	r0, #0
 8005cd8:	690d      	ldr	r5, [r1, #16]
 8005cda:	f101 0c14 	add.w	ip, r1, #20
 8005cde:	f8dc 3000 	ldr.w	r3, [ip]
 8005ce2:	3001      	adds	r0, #1
 8005ce4:	b299      	uxth	r1, r3
 8005ce6:	fb02 6101 	mla	r1, r2, r1, r6
 8005cea:	0c1e      	lsrs	r6, r3, #16
 8005cec:	0c0b      	lsrs	r3, r1, #16
 8005cee:	fb02 3306 	mla	r3, r2, r6, r3
 8005cf2:	b289      	uxth	r1, r1
 8005cf4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8005cf8:	4285      	cmp	r5, r0
 8005cfa:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8005cfe:	f84c 1b04 	str.w	r1, [ip], #4
 8005d02:	dcec      	bgt.n	8005cde <__multadd+0x12>
 8005d04:	b30e      	cbz	r6, 8005d4a <__multadd+0x7e>
 8005d06:	68a3      	ldr	r3, [r4, #8]
 8005d08:	42ab      	cmp	r3, r5
 8005d0a:	dc19      	bgt.n	8005d40 <__multadd+0x74>
 8005d0c:	6861      	ldr	r1, [r4, #4]
 8005d0e:	4638      	mov	r0, r7
 8005d10:	3101      	adds	r1, #1
 8005d12:	f7ff ff79 	bl	8005c08 <_Balloc>
 8005d16:	4680      	mov	r8, r0
 8005d18:	b928      	cbnz	r0, 8005d26 <__multadd+0x5a>
 8005d1a:	4602      	mov	r2, r0
 8005d1c:	21b5      	movs	r1, #181	; 0xb5
 8005d1e:	4b0c      	ldr	r3, [pc, #48]	; (8005d50 <__multadd+0x84>)
 8005d20:	480c      	ldr	r0, [pc, #48]	; (8005d54 <__multadd+0x88>)
 8005d22:	f001 fd8d 	bl	8007840 <__assert_func>
 8005d26:	6922      	ldr	r2, [r4, #16]
 8005d28:	f104 010c 	add.w	r1, r4, #12
 8005d2c:	3202      	adds	r2, #2
 8005d2e:	0092      	lsls	r2, r2, #2
 8005d30:	300c      	adds	r0, #12
 8005d32:	f7ff ff5b 	bl	8005bec <memcpy>
 8005d36:	4621      	mov	r1, r4
 8005d38:	4638      	mov	r0, r7
 8005d3a:	f7ff ffa5 	bl	8005c88 <_Bfree>
 8005d3e:	4644      	mov	r4, r8
 8005d40:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005d44:	3501      	adds	r5, #1
 8005d46:	615e      	str	r6, [r3, #20]
 8005d48:	6125      	str	r5, [r4, #16]
 8005d4a:	4620      	mov	r0, r4
 8005d4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d50:	08007d40 	.word	0x08007d40
 8005d54:	08007e30 	.word	0x08007e30

08005d58 <__s2b>:
 8005d58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005d5c:	4615      	mov	r5, r2
 8005d5e:	2209      	movs	r2, #9
 8005d60:	461f      	mov	r7, r3
 8005d62:	3308      	adds	r3, #8
 8005d64:	460c      	mov	r4, r1
 8005d66:	fb93 f3f2 	sdiv	r3, r3, r2
 8005d6a:	4606      	mov	r6, r0
 8005d6c:	2201      	movs	r2, #1
 8005d6e:	2100      	movs	r1, #0
 8005d70:	429a      	cmp	r2, r3
 8005d72:	db09      	blt.n	8005d88 <__s2b+0x30>
 8005d74:	4630      	mov	r0, r6
 8005d76:	f7ff ff47 	bl	8005c08 <_Balloc>
 8005d7a:	b940      	cbnz	r0, 8005d8e <__s2b+0x36>
 8005d7c:	4602      	mov	r2, r0
 8005d7e:	21ce      	movs	r1, #206	; 0xce
 8005d80:	4b18      	ldr	r3, [pc, #96]	; (8005de4 <__s2b+0x8c>)
 8005d82:	4819      	ldr	r0, [pc, #100]	; (8005de8 <__s2b+0x90>)
 8005d84:	f001 fd5c 	bl	8007840 <__assert_func>
 8005d88:	0052      	lsls	r2, r2, #1
 8005d8a:	3101      	adds	r1, #1
 8005d8c:	e7f0      	b.n	8005d70 <__s2b+0x18>
 8005d8e:	9b08      	ldr	r3, [sp, #32]
 8005d90:	2d09      	cmp	r5, #9
 8005d92:	6143      	str	r3, [r0, #20]
 8005d94:	f04f 0301 	mov.w	r3, #1
 8005d98:	6103      	str	r3, [r0, #16]
 8005d9a:	dd16      	ble.n	8005dca <__s2b+0x72>
 8005d9c:	f104 0909 	add.w	r9, r4, #9
 8005da0:	46c8      	mov	r8, r9
 8005da2:	442c      	add	r4, r5
 8005da4:	f818 3b01 	ldrb.w	r3, [r8], #1
 8005da8:	4601      	mov	r1, r0
 8005daa:	220a      	movs	r2, #10
 8005dac:	4630      	mov	r0, r6
 8005dae:	3b30      	subs	r3, #48	; 0x30
 8005db0:	f7ff ff8c 	bl	8005ccc <__multadd>
 8005db4:	45a0      	cmp	r8, r4
 8005db6:	d1f5      	bne.n	8005da4 <__s2b+0x4c>
 8005db8:	f1a5 0408 	sub.w	r4, r5, #8
 8005dbc:	444c      	add	r4, r9
 8005dbe:	1b2d      	subs	r5, r5, r4
 8005dc0:	1963      	adds	r3, r4, r5
 8005dc2:	42bb      	cmp	r3, r7
 8005dc4:	db04      	blt.n	8005dd0 <__s2b+0x78>
 8005dc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005dca:	2509      	movs	r5, #9
 8005dcc:	340a      	adds	r4, #10
 8005dce:	e7f6      	b.n	8005dbe <__s2b+0x66>
 8005dd0:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005dd4:	4601      	mov	r1, r0
 8005dd6:	220a      	movs	r2, #10
 8005dd8:	4630      	mov	r0, r6
 8005dda:	3b30      	subs	r3, #48	; 0x30
 8005ddc:	f7ff ff76 	bl	8005ccc <__multadd>
 8005de0:	e7ee      	b.n	8005dc0 <__s2b+0x68>
 8005de2:	bf00      	nop
 8005de4:	08007d40 	.word	0x08007d40
 8005de8:	08007e30 	.word	0x08007e30

08005dec <__hi0bits>:
 8005dec:	0c02      	lsrs	r2, r0, #16
 8005dee:	0412      	lsls	r2, r2, #16
 8005df0:	4603      	mov	r3, r0
 8005df2:	b9ca      	cbnz	r2, 8005e28 <__hi0bits+0x3c>
 8005df4:	0403      	lsls	r3, r0, #16
 8005df6:	2010      	movs	r0, #16
 8005df8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005dfc:	bf04      	itt	eq
 8005dfe:	021b      	lsleq	r3, r3, #8
 8005e00:	3008      	addeq	r0, #8
 8005e02:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005e06:	bf04      	itt	eq
 8005e08:	011b      	lsleq	r3, r3, #4
 8005e0a:	3004      	addeq	r0, #4
 8005e0c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005e10:	bf04      	itt	eq
 8005e12:	009b      	lsleq	r3, r3, #2
 8005e14:	3002      	addeq	r0, #2
 8005e16:	2b00      	cmp	r3, #0
 8005e18:	db05      	blt.n	8005e26 <__hi0bits+0x3a>
 8005e1a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8005e1e:	f100 0001 	add.w	r0, r0, #1
 8005e22:	bf08      	it	eq
 8005e24:	2020      	moveq	r0, #32
 8005e26:	4770      	bx	lr
 8005e28:	2000      	movs	r0, #0
 8005e2a:	e7e5      	b.n	8005df8 <__hi0bits+0xc>

08005e2c <__lo0bits>:
 8005e2c:	6803      	ldr	r3, [r0, #0]
 8005e2e:	4602      	mov	r2, r0
 8005e30:	f013 0007 	ands.w	r0, r3, #7
 8005e34:	d00b      	beq.n	8005e4e <__lo0bits+0x22>
 8005e36:	07d9      	lsls	r1, r3, #31
 8005e38:	d421      	bmi.n	8005e7e <__lo0bits+0x52>
 8005e3a:	0798      	lsls	r0, r3, #30
 8005e3c:	bf49      	itett	mi
 8005e3e:	085b      	lsrmi	r3, r3, #1
 8005e40:	089b      	lsrpl	r3, r3, #2
 8005e42:	2001      	movmi	r0, #1
 8005e44:	6013      	strmi	r3, [r2, #0]
 8005e46:	bf5c      	itt	pl
 8005e48:	2002      	movpl	r0, #2
 8005e4a:	6013      	strpl	r3, [r2, #0]
 8005e4c:	4770      	bx	lr
 8005e4e:	b299      	uxth	r1, r3
 8005e50:	b909      	cbnz	r1, 8005e56 <__lo0bits+0x2a>
 8005e52:	2010      	movs	r0, #16
 8005e54:	0c1b      	lsrs	r3, r3, #16
 8005e56:	b2d9      	uxtb	r1, r3
 8005e58:	b909      	cbnz	r1, 8005e5e <__lo0bits+0x32>
 8005e5a:	3008      	adds	r0, #8
 8005e5c:	0a1b      	lsrs	r3, r3, #8
 8005e5e:	0719      	lsls	r1, r3, #28
 8005e60:	bf04      	itt	eq
 8005e62:	091b      	lsreq	r3, r3, #4
 8005e64:	3004      	addeq	r0, #4
 8005e66:	0799      	lsls	r1, r3, #30
 8005e68:	bf04      	itt	eq
 8005e6a:	089b      	lsreq	r3, r3, #2
 8005e6c:	3002      	addeq	r0, #2
 8005e6e:	07d9      	lsls	r1, r3, #31
 8005e70:	d403      	bmi.n	8005e7a <__lo0bits+0x4e>
 8005e72:	085b      	lsrs	r3, r3, #1
 8005e74:	f100 0001 	add.w	r0, r0, #1
 8005e78:	d003      	beq.n	8005e82 <__lo0bits+0x56>
 8005e7a:	6013      	str	r3, [r2, #0]
 8005e7c:	4770      	bx	lr
 8005e7e:	2000      	movs	r0, #0
 8005e80:	4770      	bx	lr
 8005e82:	2020      	movs	r0, #32
 8005e84:	4770      	bx	lr
	...

08005e88 <__i2b>:
 8005e88:	b510      	push	{r4, lr}
 8005e8a:	460c      	mov	r4, r1
 8005e8c:	2101      	movs	r1, #1
 8005e8e:	f7ff febb 	bl	8005c08 <_Balloc>
 8005e92:	4602      	mov	r2, r0
 8005e94:	b928      	cbnz	r0, 8005ea2 <__i2b+0x1a>
 8005e96:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8005e9a:	4b04      	ldr	r3, [pc, #16]	; (8005eac <__i2b+0x24>)
 8005e9c:	4804      	ldr	r0, [pc, #16]	; (8005eb0 <__i2b+0x28>)
 8005e9e:	f001 fccf 	bl	8007840 <__assert_func>
 8005ea2:	2301      	movs	r3, #1
 8005ea4:	6144      	str	r4, [r0, #20]
 8005ea6:	6103      	str	r3, [r0, #16]
 8005ea8:	bd10      	pop	{r4, pc}
 8005eaa:	bf00      	nop
 8005eac:	08007d40 	.word	0x08007d40
 8005eb0:	08007e30 	.word	0x08007e30

08005eb4 <__multiply>:
 8005eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005eb8:	4691      	mov	r9, r2
 8005eba:	690a      	ldr	r2, [r1, #16]
 8005ebc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005ec0:	460c      	mov	r4, r1
 8005ec2:	429a      	cmp	r2, r3
 8005ec4:	bfbe      	ittt	lt
 8005ec6:	460b      	movlt	r3, r1
 8005ec8:	464c      	movlt	r4, r9
 8005eca:	4699      	movlt	r9, r3
 8005ecc:	6927      	ldr	r7, [r4, #16]
 8005ece:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8005ed2:	68a3      	ldr	r3, [r4, #8]
 8005ed4:	6861      	ldr	r1, [r4, #4]
 8005ed6:	eb07 060a 	add.w	r6, r7, sl
 8005eda:	42b3      	cmp	r3, r6
 8005edc:	b085      	sub	sp, #20
 8005ede:	bfb8      	it	lt
 8005ee0:	3101      	addlt	r1, #1
 8005ee2:	f7ff fe91 	bl	8005c08 <_Balloc>
 8005ee6:	b930      	cbnz	r0, 8005ef6 <__multiply+0x42>
 8005ee8:	4602      	mov	r2, r0
 8005eea:	f240 115d 	movw	r1, #349	; 0x15d
 8005eee:	4b43      	ldr	r3, [pc, #268]	; (8005ffc <__multiply+0x148>)
 8005ef0:	4843      	ldr	r0, [pc, #268]	; (8006000 <__multiply+0x14c>)
 8005ef2:	f001 fca5 	bl	8007840 <__assert_func>
 8005ef6:	f100 0514 	add.w	r5, r0, #20
 8005efa:	462b      	mov	r3, r5
 8005efc:	2200      	movs	r2, #0
 8005efe:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8005f02:	4543      	cmp	r3, r8
 8005f04:	d321      	bcc.n	8005f4a <__multiply+0x96>
 8005f06:	f104 0314 	add.w	r3, r4, #20
 8005f0a:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8005f0e:	f109 0314 	add.w	r3, r9, #20
 8005f12:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8005f16:	9202      	str	r2, [sp, #8]
 8005f18:	1b3a      	subs	r2, r7, r4
 8005f1a:	3a15      	subs	r2, #21
 8005f1c:	f022 0203 	bic.w	r2, r2, #3
 8005f20:	3204      	adds	r2, #4
 8005f22:	f104 0115 	add.w	r1, r4, #21
 8005f26:	428f      	cmp	r7, r1
 8005f28:	bf38      	it	cc
 8005f2a:	2204      	movcc	r2, #4
 8005f2c:	9201      	str	r2, [sp, #4]
 8005f2e:	9a02      	ldr	r2, [sp, #8]
 8005f30:	9303      	str	r3, [sp, #12]
 8005f32:	429a      	cmp	r2, r3
 8005f34:	d80c      	bhi.n	8005f50 <__multiply+0x9c>
 8005f36:	2e00      	cmp	r6, #0
 8005f38:	dd03      	ble.n	8005f42 <__multiply+0x8e>
 8005f3a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8005f3e:	2b00      	cmp	r3, #0
 8005f40:	d059      	beq.n	8005ff6 <__multiply+0x142>
 8005f42:	6106      	str	r6, [r0, #16]
 8005f44:	b005      	add	sp, #20
 8005f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f4a:	f843 2b04 	str.w	r2, [r3], #4
 8005f4e:	e7d8      	b.n	8005f02 <__multiply+0x4e>
 8005f50:	f8b3 a000 	ldrh.w	sl, [r3]
 8005f54:	f1ba 0f00 	cmp.w	sl, #0
 8005f58:	d023      	beq.n	8005fa2 <__multiply+0xee>
 8005f5a:	46a9      	mov	r9, r5
 8005f5c:	f04f 0c00 	mov.w	ip, #0
 8005f60:	f104 0e14 	add.w	lr, r4, #20
 8005f64:	f85e 2b04 	ldr.w	r2, [lr], #4
 8005f68:	f8d9 1000 	ldr.w	r1, [r9]
 8005f6c:	fa1f fb82 	uxth.w	fp, r2
 8005f70:	b289      	uxth	r1, r1
 8005f72:	fb0a 110b 	mla	r1, sl, fp, r1
 8005f76:	4461      	add	r1, ip
 8005f78:	f8d9 c000 	ldr.w	ip, [r9]
 8005f7c:	0c12      	lsrs	r2, r2, #16
 8005f7e:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8005f82:	fb0a c202 	mla	r2, sl, r2, ip
 8005f86:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8005f8a:	b289      	uxth	r1, r1
 8005f8c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005f90:	4577      	cmp	r7, lr
 8005f92:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8005f96:	f849 1b04 	str.w	r1, [r9], #4
 8005f9a:	d8e3      	bhi.n	8005f64 <__multiply+0xb0>
 8005f9c:	9a01      	ldr	r2, [sp, #4]
 8005f9e:	f845 c002 	str.w	ip, [r5, r2]
 8005fa2:	9a03      	ldr	r2, [sp, #12]
 8005fa4:	3304      	adds	r3, #4
 8005fa6:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8005faa:	f1b9 0f00 	cmp.w	r9, #0
 8005fae:	d020      	beq.n	8005ff2 <__multiply+0x13e>
 8005fb0:	46ae      	mov	lr, r5
 8005fb2:	f04f 0a00 	mov.w	sl, #0
 8005fb6:	6829      	ldr	r1, [r5, #0]
 8005fb8:	f104 0c14 	add.w	ip, r4, #20
 8005fbc:	f8bc b000 	ldrh.w	fp, [ip]
 8005fc0:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8005fc4:	b289      	uxth	r1, r1
 8005fc6:	fb09 220b 	mla	r2, r9, fp, r2
 8005fca:	4492      	add	sl, r2
 8005fcc:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8005fd0:	f84e 1b04 	str.w	r1, [lr], #4
 8005fd4:	f85c 2b04 	ldr.w	r2, [ip], #4
 8005fd8:	f8be 1000 	ldrh.w	r1, [lr]
 8005fdc:	0c12      	lsrs	r2, r2, #16
 8005fde:	fb09 1102 	mla	r1, r9, r2, r1
 8005fe2:	4567      	cmp	r7, ip
 8005fe4:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8005fe8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005fec:	d8e6      	bhi.n	8005fbc <__multiply+0x108>
 8005fee:	9a01      	ldr	r2, [sp, #4]
 8005ff0:	50a9      	str	r1, [r5, r2]
 8005ff2:	3504      	adds	r5, #4
 8005ff4:	e79b      	b.n	8005f2e <__multiply+0x7a>
 8005ff6:	3e01      	subs	r6, #1
 8005ff8:	e79d      	b.n	8005f36 <__multiply+0x82>
 8005ffa:	bf00      	nop
 8005ffc:	08007d40 	.word	0x08007d40
 8006000:	08007e30 	.word	0x08007e30

08006004 <__pow5mult>:
 8006004:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006008:	4615      	mov	r5, r2
 800600a:	f012 0203 	ands.w	r2, r2, #3
 800600e:	4606      	mov	r6, r0
 8006010:	460f      	mov	r7, r1
 8006012:	d007      	beq.n	8006024 <__pow5mult+0x20>
 8006014:	4c25      	ldr	r4, [pc, #148]	; (80060ac <__pow5mult+0xa8>)
 8006016:	3a01      	subs	r2, #1
 8006018:	2300      	movs	r3, #0
 800601a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800601e:	f7ff fe55 	bl	8005ccc <__multadd>
 8006022:	4607      	mov	r7, r0
 8006024:	10ad      	asrs	r5, r5, #2
 8006026:	d03d      	beq.n	80060a4 <__pow5mult+0xa0>
 8006028:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800602a:	b97c      	cbnz	r4, 800604c <__pow5mult+0x48>
 800602c:	2010      	movs	r0, #16
 800602e:	f7ff fdb5 	bl	8005b9c <malloc>
 8006032:	4602      	mov	r2, r0
 8006034:	6270      	str	r0, [r6, #36]	; 0x24
 8006036:	b928      	cbnz	r0, 8006044 <__pow5mult+0x40>
 8006038:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800603c:	4b1c      	ldr	r3, [pc, #112]	; (80060b0 <__pow5mult+0xac>)
 800603e:	481d      	ldr	r0, [pc, #116]	; (80060b4 <__pow5mult+0xb0>)
 8006040:	f001 fbfe 	bl	8007840 <__assert_func>
 8006044:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006048:	6004      	str	r4, [r0, #0]
 800604a:	60c4      	str	r4, [r0, #12]
 800604c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8006050:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006054:	b94c      	cbnz	r4, 800606a <__pow5mult+0x66>
 8006056:	f240 2171 	movw	r1, #625	; 0x271
 800605a:	4630      	mov	r0, r6
 800605c:	f7ff ff14 	bl	8005e88 <__i2b>
 8006060:	2300      	movs	r3, #0
 8006062:	4604      	mov	r4, r0
 8006064:	f8c8 0008 	str.w	r0, [r8, #8]
 8006068:	6003      	str	r3, [r0, #0]
 800606a:	f04f 0900 	mov.w	r9, #0
 800606e:	07eb      	lsls	r3, r5, #31
 8006070:	d50a      	bpl.n	8006088 <__pow5mult+0x84>
 8006072:	4639      	mov	r1, r7
 8006074:	4622      	mov	r2, r4
 8006076:	4630      	mov	r0, r6
 8006078:	f7ff ff1c 	bl	8005eb4 <__multiply>
 800607c:	4680      	mov	r8, r0
 800607e:	4639      	mov	r1, r7
 8006080:	4630      	mov	r0, r6
 8006082:	f7ff fe01 	bl	8005c88 <_Bfree>
 8006086:	4647      	mov	r7, r8
 8006088:	106d      	asrs	r5, r5, #1
 800608a:	d00b      	beq.n	80060a4 <__pow5mult+0xa0>
 800608c:	6820      	ldr	r0, [r4, #0]
 800608e:	b938      	cbnz	r0, 80060a0 <__pow5mult+0x9c>
 8006090:	4622      	mov	r2, r4
 8006092:	4621      	mov	r1, r4
 8006094:	4630      	mov	r0, r6
 8006096:	f7ff ff0d 	bl	8005eb4 <__multiply>
 800609a:	6020      	str	r0, [r4, #0]
 800609c:	f8c0 9000 	str.w	r9, [r0]
 80060a0:	4604      	mov	r4, r0
 80060a2:	e7e4      	b.n	800606e <__pow5mult+0x6a>
 80060a4:	4638      	mov	r0, r7
 80060a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80060aa:	bf00      	nop
 80060ac:	08007f80 	.word	0x08007f80
 80060b0:	08007cce 	.word	0x08007cce
 80060b4:	08007e30 	.word	0x08007e30

080060b8 <__lshift>:
 80060b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80060bc:	460c      	mov	r4, r1
 80060be:	4607      	mov	r7, r0
 80060c0:	4691      	mov	r9, r2
 80060c2:	6923      	ldr	r3, [r4, #16]
 80060c4:	6849      	ldr	r1, [r1, #4]
 80060c6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80060ca:	68a3      	ldr	r3, [r4, #8]
 80060cc:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80060d0:	f108 0601 	add.w	r6, r8, #1
 80060d4:	42b3      	cmp	r3, r6
 80060d6:	db0b      	blt.n	80060f0 <__lshift+0x38>
 80060d8:	4638      	mov	r0, r7
 80060da:	f7ff fd95 	bl	8005c08 <_Balloc>
 80060de:	4605      	mov	r5, r0
 80060e0:	b948      	cbnz	r0, 80060f6 <__lshift+0x3e>
 80060e2:	4602      	mov	r2, r0
 80060e4:	f240 11d9 	movw	r1, #473	; 0x1d9
 80060e8:	4b29      	ldr	r3, [pc, #164]	; (8006190 <__lshift+0xd8>)
 80060ea:	482a      	ldr	r0, [pc, #168]	; (8006194 <__lshift+0xdc>)
 80060ec:	f001 fba8 	bl	8007840 <__assert_func>
 80060f0:	3101      	adds	r1, #1
 80060f2:	005b      	lsls	r3, r3, #1
 80060f4:	e7ee      	b.n	80060d4 <__lshift+0x1c>
 80060f6:	2300      	movs	r3, #0
 80060f8:	f100 0114 	add.w	r1, r0, #20
 80060fc:	f100 0210 	add.w	r2, r0, #16
 8006100:	4618      	mov	r0, r3
 8006102:	4553      	cmp	r3, sl
 8006104:	db37      	blt.n	8006176 <__lshift+0xbe>
 8006106:	6920      	ldr	r0, [r4, #16]
 8006108:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800610c:	f104 0314 	add.w	r3, r4, #20
 8006110:	f019 091f 	ands.w	r9, r9, #31
 8006114:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006118:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800611c:	d02f      	beq.n	800617e <__lshift+0xc6>
 800611e:	468a      	mov	sl, r1
 8006120:	f04f 0c00 	mov.w	ip, #0
 8006124:	f1c9 0e20 	rsb	lr, r9, #32
 8006128:	681a      	ldr	r2, [r3, #0]
 800612a:	fa02 f209 	lsl.w	r2, r2, r9
 800612e:	ea42 020c 	orr.w	r2, r2, ip
 8006132:	f84a 2b04 	str.w	r2, [sl], #4
 8006136:	f853 2b04 	ldr.w	r2, [r3], #4
 800613a:	4298      	cmp	r0, r3
 800613c:	fa22 fc0e 	lsr.w	ip, r2, lr
 8006140:	d8f2      	bhi.n	8006128 <__lshift+0x70>
 8006142:	1b03      	subs	r3, r0, r4
 8006144:	3b15      	subs	r3, #21
 8006146:	f023 0303 	bic.w	r3, r3, #3
 800614a:	3304      	adds	r3, #4
 800614c:	f104 0215 	add.w	r2, r4, #21
 8006150:	4290      	cmp	r0, r2
 8006152:	bf38      	it	cc
 8006154:	2304      	movcc	r3, #4
 8006156:	f841 c003 	str.w	ip, [r1, r3]
 800615a:	f1bc 0f00 	cmp.w	ip, #0
 800615e:	d001      	beq.n	8006164 <__lshift+0xac>
 8006160:	f108 0602 	add.w	r6, r8, #2
 8006164:	3e01      	subs	r6, #1
 8006166:	4638      	mov	r0, r7
 8006168:	4621      	mov	r1, r4
 800616a:	612e      	str	r6, [r5, #16]
 800616c:	f7ff fd8c 	bl	8005c88 <_Bfree>
 8006170:	4628      	mov	r0, r5
 8006172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006176:	f842 0f04 	str.w	r0, [r2, #4]!
 800617a:	3301      	adds	r3, #1
 800617c:	e7c1      	b.n	8006102 <__lshift+0x4a>
 800617e:	3904      	subs	r1, #4
 8006180:	f853 2b04 	ldr.w	r2, [r3], #4
 8006184:	4298      	cmp	r0, r3
 8006186:	f841 2f04 	str.w	r2, [r1, #4]!
 800618a:	d8f9      	bhi.n	8006180 <__lshift+0xc8>
 800618c:	e7ea      	b.n	8006164 <__lshift+0xac>
 800618e:	bf00      	nop
 8006190:	08007d40 	.word	0x08007d40
 8006194:	08007e30 	.word	0x08007e30

08006198 <__mcmp>:
 8006198:	4603      	mov	r3, r0
 800619a:	690a      	ldr	r2, [r1, #16]
 800619c:	6900      	ldr	r0, [r0, #16]
 800619e:	b530      	push	{r4, r5, lr}
 80061a0:	1a80      	subs	r0, r0, r2
 80061a2:	d10d      	bne.n	80061c0 <__mcmp+0x28>
 80061a4:	3314      	adds	r3, #20
 80061a6:	3114      	adds	r1, #20
 80061a8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80061ac:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80061b0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80061b4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80061b8:	4295      	cmp	r5, r2
 80061ba:	d002      	beq.n	80061c2 <__mcmp+0x2a>
 80061bc:	d304      	bcc.n	80061c8 <__mcmp+0x30>
 80061be:	2001      	movs	r0, #1
 80061c0:	bd30      	pop	{r4, r5, pc}
 80061c2:	42a3      	cmp	r3, r4
 80061c4:	d3f4      	bcc.n	80061b0 <__mcmp+0x18>
 80061c6:	e7fb      	b.n	80061c0 <__mcmp+0x28>
 80061c8:	f04f 30ff 	mov.w	r0, #4294967295
 80061cc:	e7f8      	b.n	80061c0 <__mcmp+0x28>
	...

080061d0 <__mdiff>:
 80061d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061d4:	460d      	mov	r5, r1
 80061d6:	4607      	mov	r7, r0
 80061d8:	4611      	mov	r1, r2
 80061da:	4628      	mov	r0, r5
 80061dc:	4614      	mov	r4, r2
 80061de:	f7ff ffdb 	bl	8006198 <__mcmp>
 80061e2:	1e06      	subs	r6, r0, #0
 80061e4:	d111      	bne.n	800620a <__mdiff+0x3a>
 80061e6:	4631      	mov	r1, r6
 80061e8:	4638      	mov	r0, r7
 80061ea:	f7ff fd0d 	bl	8005c08 <_Balloc>
 80061ee:	4602      	mov	r2, r0
 80061f0:	b928      	cbnz	r0, 80061fe <__mdiff+0x2e>
 80061f2:	f240 2132 	movw	r1, #562	; 0x232
 80061f6:	4b3a      	ldr	r3, [pc, #232]	; (80062e0 <__mdiff+0x110>)
 80061f8:	483a      	ldr	r0, [pc, #232]	; (80062e4 <__mdiff+0x114>)
 80061fa:	f001 fb21 	bl	8007840 <__assert_func>
 80061fe:	2301      	movs	r3, #1
 8006200:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8006204:	4610      	mov	r0, r2
 8006206:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800620a:	bfa4      	itt	ge
 800620c:	4623      	movge	r3, r4
 800620e:	462c      	movge	r4, r5
 8006210:	4638      	mov	r0, r7
 8006212:	6861      	ldr	r1, [r4, #4]
 8006214:	bfa6      	itte	ge
 8006216:	461d      	movge	r5, r3
 8006218:	2600      	movge	r6, #0
 800621a:	2601      	movlt	r6, #1
 800621c:	f7ff fcf4 	bl	8005c08 <_Balloc>
 8006220:	4602      	mov	r2, r0
 8006222:	b918      	cbnz	r0, 800622c <__mdiff+0x5c>
 8006224:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006228:	4b2d      	ldr	r3, [pc, #180]	; (80062e0 <__mdiff+0x110>)
 800622a:	e7e5      	b.n	80061f8 <__mdiff+0x28>
 800622c:	f102 0814 	add.w	r8, r2, #20
 8006230:	46c2      	mov	sl, r8
 8006232:	f04f 0c00 	mov.w	ip, #0
 8006236:	6927      	ldr	r7, [r4, #16]
 8006238:	60c6      	str	r6, [r0, #12]
 800623a:	692e      	ldr	r6, [r5, #16]
 800623c:	f104 0014 	add.w	r0, r4, #20
 8006240:	f105 0914 	add.w	r9, r5, #20
 8006244:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8006248:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800624c:	3410      	adds	r4, #16
 800624e:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8006252:	f859 3b04 	ldr.w	r3, [r9], #4
 8006256:	fa1f f18b 	uxth.w	r1, fp
 800625a:	448c      	add	ip, r1
 800625c:	b299      	uxth	r1, r3
 800625e:	0c1b      	lsrs	r3, r3, #16
 8006260:	ebac 0101 	sub.w	r1, ip, r1
 8006264:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8006268:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800626c:	b289      	uxth	r1, r1
 800626e:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8006272:	454e      	cmp	r6, r9
 8006274:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8006278:	f84a 3b04 	str.w	r3, [sl], #4
 800627c:	d8e7      	bhi.n	800624e <__mdiff+0x7e>
 800627e:	1b73      	subs	r3, r6, r5
 8006280:	3b15      	subs	r3, #21
 8006282:	f023 0303 	bic.w	r3, r3, #3
 8006286:	3515      	adds	r5, #21
 8006288:	3304      	adds	r3, #4
 800628a:	42ae      	cmp	r6, r5
 800628c:	bf38      	it	cc
 800628e:	2304      	movcc	r3, #4
 8006290:	4418      	add	r0, r3
 8006292:	4443      	add	r3, r8
 8006294:	461e      	mov	r6, r3
 8006296:	4605      	mov	r5, r0
 8006298:	4575      	cmp	r5, lr
 800629a:	d30e      	bcc.n	80062ba <__mdiff+0xea>
 800629c:	f10e 0103 	add.w	r1, lr, #3
 80062a0:	1a09      	subs	r1, r1, r0
 80062a2:	f021 0103 	bic.w	r1, r1, #3
 80062a6:	3803      	subs	r0, #3
 80062a8:	4586      	cmp	lr, r0
 80062aa:	bf38      	it	cc
 80062ac:	2100      	movcc	r1, #0
 80062ae:	4419      	add	r1, r3
 80062b0:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 80062b4:	b18b      	cbz	r3, 80062da <__mdiff+0x10a>
 80062b6:	6117      	str	r7, [r2, #16]
 80062b8:	e7a4      	b.n	8006204 <__mdiff+0x34>
 80062ba:	f855 8b04 	ldr.w	r8, [r5], #4
 80062be:	fa1f f188 	uxth.w	r1, r8
 80062c2:	4461      	add	r1, ip
 80062c4:	140c      	asrs	r4, r1, #16
 80062c6:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80062ca:	b289      	uxth	r1, r1
 80062cc:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 80062d0:	ea4f 4c24 	mov.w	ip, r4, asr #16
 80062d4:	f846 1b04 	str.w	r1, [r6], #4
 80062d8:	e7de      	b.n	8006298 <__mdiff+0xc8>
 80062da:	3f01      	subs	r7, #1
 80062dc:	e7e8      	b.n	80062b0 <__mdiff+0xe0>
 80062de:	bf00      	nop
 80062e0:	08007d40 	.word	0x08007d40
 80062e4:	08007e30 	.word	0x08007e30

080062e8 <__ulp>:
 80062e8:	4b11      	ldr	r3, [pc, #68]	; (8006330 <__ulp+0x48>)
 80062ea:	400b      	ands	r3, r1
 80062ec:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	dd02      	ble.n	80062fa <__ulp+0x12>
 80062f4:	2000      	movs	r0, #0
 80062f6:	4619      	mov	r1, r3
 80062f8:	4770      	bx	lr
 80062fa:	425b      	negs	r3, r3
 80062fc:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8006300:	f04f 0000 	mov.w	r0, #0
 8006304:	f04f 0100 	mov.w	r1, #0
 8006308:	ea4f 5223 	mov.w	r2, r3, asr #20
 800630c:	da04      	bge.n	8006318 <__ulp+0x30>
 800630e:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8006312:	fa43 f102 	asr.w	r1, r3, r2
 8006316:	4770      	bx	lr
 8006318:	f1a2 0314 	sub.w	r3, r2, #20
 800631c:	2b1e      	cmp	r3, #30
 800631e:	bfd6      	itet	le
 8006320:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8006324:	2301      	movgt	r3, #1
 8006326:	fa22 f303 	lsrle.w	r3, r2, r3
 800632a:	4618      	mov	r0, r3
 800632c:	4770      	bx	lr
 800632e:	bf00      	nop
 8006330:	7ff00000 	.word	0x7ff00000

08006334 <__b2d>:
 8006334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006338:	6907      	ldr	r7, [r0, #16]
 800633a:	f100 0914 	add.w	r9, r0, #20
 800633e:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8006342:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8006346:	f1a7 0804 	sub.w	r8, r7, #4
 800634a:	4630      	mov	r0, r6
 800634c:	f7ff fd4e 	bl	8005dec <__hi0bits>
 8006350:	f1c0 0320 	rsb	r3, r0, #32
 8006354:	280a      	cmp	r0, #10
 8006356:	600b      	str	r3, [r1, #0]
 8006358:	491f      	ldr	r1, [pc, #124]	; (80063d8 <__b2d+0xa4>)
 800635a:	dc17      	bgt.n	800638c <__b2d+0x58>
 800635c:	45c1      	cmp	r9, r8
 800635e:	bf28      	it	cs
 8006360:	2200      	movcs	r2, #0
 8006362:	f1c0 0c0b 	rsb	ip, r0, #11
 8006366:	fa26 f30c 	lsr.w	r3, r6, ip
 800636a:	bf38      	it	cc
 800636c:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8006370:	ea43 0501 	orr.w	r5, r3, r1
 8006374:	f100 0315 	add.w	r3, r0, #21
 8006378:	fa06 f303 	lsl.w	r3, r6, r3
 800637c:	fa22 f20c 	lsr.w	r2, r2, ip
 8006380:	ea43 0402 	orr.w	r4, r3, r2
 8006384:	4620      	mov	r0, r4
 8006386:	4629      	mov	r1, r5
 8006388:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800638c:	45c1      	cmp	r9, r8
 800638e:	bf2e      	itee	cs
 8006390:	2200      	movcs	r2, #0
 8006392:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8006396:	f1a7 0808 	subcc.w	r8, r7, #8
 800639a:	f1b0 030b 	subs.w	r3, r0, #11
 800639e:	d016      	beq.n	80063ce <__b2d+0x9a>
 80063a0:	f1c3 0720 	rsb	r7, r3, #32
 80063a4:	fa22 f107 	lsr.w	r1, r2, r7
 80063a8:	45c8      	cmp	r8, r9
 80063aa:	fa06 f603 	lsl.w	r6, r6, r3
 80063ae:	ea46 0601 	orr.w	r6, r6, r1
 80063b2:	bf94      	ite	ls
 80063b4:	2100      	movls	r1, #0
 80063b6:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 80063ba:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 80063be:	fa02 f003 	lsl.w	r0, r2, r3
 80063c2:	40f9      	lsrs	r1, r7
 80063c4:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80063c8:	ea40 0401 	orr.w	r4, r0, r1
 80063cc:	e7da      	b.n	8006384 <__b2d+0x50>
 80063ce:	4614      	mov	r4, r2
 80063d0:	ea46 0501 	orr.w	r5, r6, r1
 80063d4:	e7d6      	b.n	8006384 <__b2d+0x50>
 80063d6:	bf00      	nop
 80063d8:	3ff00000 	.word	0x3ff00000

080063dc <__d2b>:
 80063dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80063e0:	2101      	movs	r1, #1
 80063e2:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 80063e6:	4690      	mov	r8, r2
 80063e8:	461d      	mov	r5, r3
 80063ea:	f7ff fc0d 	bl	8005c08 <_Balloc>
 80063ee:	4604      	mov	r4, r0
 80063f0:	b930      	cbnz	r0, 8006400 <__d2b+0x24>
 80063f2:	4602      	mov	r2, r0
 80063f4:	f240 310a 	movw	r1, #778	; 0x30a
 80063f8:	4b24      	ldr	r3, [pc, #144]	; (800648c <__d2b+0xb0>)
 80063fa:	4825      	ldr	r0, [pc, #148]	; (8006490 <__d2b+0xb4>)
 80063fc:	f001 fa20 	bl	8007840 <__assert_func>
 8006400:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8006404:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8006408:	bb2d      	cbnz	r5, 8006456 <__d2b+0x7a>
 800640a:	9301      	str	r3, [sp, #4]
 800640c:	f1b8 0300 	subs.w	r3, r8, #0
 8006410:	d026      	beq.n	8006460 <__d2b+0x84>
 8006412:	4668      	mov	r0, sp
 8006414:	9300      	str	r3, [sp, #0]
 8006416:	f7ff fd09 	bl	8005e2c <__lo0bits>
 800641a:	9900      	ldr	r1, [sp, #0]
 800641c:	b1f0      	cbz	r0, 800645c <__d2b+0x80>
 800641e:	9a01      	ldr	r2, [sp, #4]
 8006420:	f1c0 0320 	rsb	r3, r0, #32
 8006424:	fa02 f303 	lsl.w	r3, r2, r3
 8006428:	430b      	orrs	r3, r1
 800642a:	40c2      	lsrs	r2, r0
 800642c:	6163      	str	r3, [r4, #20]
 800642e:	9201      	str	r2, [sp, #4]
 8006430:	9b01      	ldr	r3, [sp, #4]
 8006432:	2b00      	cmp	r3, #0
 8006434:	bf14      	ite	ne
 8006436:	2102      	movne	r1, #2
 8006438:	2101      	moveq	r1, #1
 800643a:	61a3      	str	r3, [r4, #24]
 800643c:	6121      	str	r1, [r4, #16]
 800643e:	b1c5      	cbz	r5, 8006472 <__d2b+0x96>
 8006440:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006444:	4405      	add	r5, r0
 8006446:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800644a:	603d      	str	r5, [r7, #0]
 800644c:	6030      	str	r0, [r6, #0]
 800644e:	4620      	mov	r0, r4
 8006450:	b002      	add	sp, #8
 8006452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006456:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800645a:	e7d6      	b.n	800640a <__d2b+0x2e>
 800645c:	6161      	str	r1, [r4, #20]
 800645e:	e7e7      	b.n	8006430 <__d2b+0x54>
 8006460:	a801      	add	r0, sp, #4
 8006462:	f7ff fce3 	bl	8005e2c <__lo0bits>
 8006466:	2101      	movs	r1, #1
 8006468:	9b01      	ldr	r3, [sp, #4]
 800646a:	6121      	str	r1, [r4, #16]
 800646c:	6163      	str	r3, [r4, #20]
 800646e:	3020      	adds	r0, #32
 8006470:	e7e5      	b.n	800643e <__d2b+0x62>
 8006472:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8006476:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800647a:	6038      	str	r0, [r7, #0]
 800647c:	6918      	ldr	r0, [r3, #16]
 800647e:	f7ff fcb5 	bl	8005dec <__hi0bits>
 8006482:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8006486:	6031      	str	r1, [r6, #0]
 8006488:	e7e1      	b.n	800644e <__d2b+0x72>
 800648a:	bf00      	nop
 800648c:	08007d40 	.word	0x08007d40
 8006490:	08007e30 	.word	0x08007e30

08006494 <__ratio>:
 8006494:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006498:	4688      	mov	r8, r1
 800649a:	4669      	mov	r1, sp
 800649c:	4681      	mov	r9, r0
 800649e:	f7ff ff49 	bl	8006334 <__b2d>
 80064a2:	460f      	mov	r7, r1
 80064a4:	4604      	mov	r4, r0
 80064a6:	460d      	mov	r5, r1
 80064a8:	4640      	mov	r0, r8
 80064aa:	a901      	add	r1, sp, #4
 80064ac:	f7ff ff42 	bl	8006334 <__b2d>
 80064b0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80064b4:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80064b8:	468b      	mov	fp, r1
 80064ba:	eba3 0c02 	sub.w	ip, r3, r2
 80064be:	e9dd 3200 	ldrd	r3, r2, [sp]
 80064c2:	1a9b      	subs	r3, r3, r2
 80064c4:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	bfd5      	itete	le
 80064cc:	460a      	movle	r2, r1
 80064ce:	462a      	movgt	r2, r5
 80064d0:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80064d4:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80064d8:	bfd8      	it	le
 80064da:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80064de:	465b      	mov	r3, fp
 80064e0:	4602      	mov	r2, r0
 80064e2:	4639      	mov	r1, r7
 80064e4:	4620      	mov	r0, r4
 80064e6:	f7fa f98d 	bl	8000804 <__aeabi_ddiv>
 80064ea:	b003      	add	sp, #12
 80064ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080064f0 <__copybits>:
 80064f0:	3901      	subs	r1, #1
 80064f2:	b570      	push	{r4, r5, r6, lr}
 80064f4:	1149      	asrs	r1, r1, #5
 80064f6:	6914      	ldr	r4, [r2, #16]
 80064f8:	3101      	adds	r1, #1
 80064fa:	f102 0314 	add.w	r3, r2, #20
 80064fe:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8006502:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8006506:	1f05      	subs	r5, r0, #4
 8006508:	42a3      	cmp	r3, r4
 800650a:	d30c      	bcc.n	8006526 <__copybits+0x36>
 800650c:	1aa3      	subs	r3, r4, r2
 800650e:	3b11      	subs	r3, #17
 8006510:	f023 0303 	bic.w	r3, r3, #3
 8006514:	3211      	adds	r2, #17
 8006516:	42a2      	cmp	r2, r4
 8006518:	bf88      	it	hi
 800651a:	2300      	movhi	r3, #0
 800651c:	4418      	add	r0, r3
 800651e:	2300      	movs	r3, #0
 8006520:	4288      	cmp	r0, r1
 8006522:	d305      	bcc.n	8006530 <__copybits+0x40>
 8006524:	bd70      	pop	{r4, r5, r6, pc}
 8006526:	f853 6b04 	ldr.w	r6, [r3], #4
 800652a:	f845 6f04 	str.w	r6, [r5, #4]!
 800652e:	e7eb      	b.n	8006508 <__copybits+0x18>
 8006530:	f840 3b04 	str.w	r3, [r0], #4
 8006534:	e7f4      	b.n	8006520 <__copybits+0x30>

08006536 <__any_on>:
 8006536:	f100 0214 	add.w	r2, r0, #20
 800653a:	6900      	ldr	r0, [r0, #16]
 800653c:	114b      	asrs	r3, r1, #5
 800653e:	4298      	cmp	r0, r3
 8006540:	b510      	push	{r4, lr}
 8006542:	db11      	blt.n	8006568 <__any_on+0x32>
 8006544:	dd0a      	ble.n	800655c <__any_on+0x26>
 8006546:	f011 011f 	ands.w	r1, r1, #31
 800654a:	d007      	beq.n	800655c <__any_on+0x26>
 800654c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8006550:	fa24 f001 	lsr.w	r0, r4, r1
 8006554:	fa00 f101 	lsl.w	r1, r0, r1
 8006558:	428c      	cmp	r4, r1
 800655a:	d10b      	bne.n	8006574 <__any_on+0x3e>
 800655c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006560:	4293      	cmp	r3, r2
 8006562:	d803      	bhi.n	800656c <__any_on+0x36>
 8006564:	2000      	movs	r0, #0
 8006566:	bd10      	pop	{r4, pc}
 8006568:	4603      	mov	r3, r0
 800656a:	e7f7      	b.n	800655c <__any_on+0x26>
 800656c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8006570:	2900      	cmp	r1, #0
 8006572:	d0f5      	beq.n	8006560 <__any_on+0x2a>
 8006574:	2001      	movs	r0, #1
 8006576:	e7f6      	b.n	8006566 <__any_on+0x30>

08006578 <_calloc_r>:
 8006578:	b570      	push	{r4, r5, r6, lr}
 800657a:	fba1 5402 	umull	r5, r4, r1, r2
 800657e:	b934      	cbnz	r4, 800658e <_calloc_r+0x16>
 8006580:	4629      	mov	r1, r5
 8006582:	f000 f875 	bl	8006670 <_malloc_r>
 8006586:	4606      	mov	r6, r0
 8006588:	b928      	cbnz	r0, 8006596 <_calloc_r+0x1e>
 800658a:	4630      	mov	r0, r6
 800658c:	bd70      	pop	{r4, r5, r6, pc}
 800658e:	220c      	movs	r2, #12
 8006590:	2600      	movs	r6, #0
 8006592:	6002      	str	r2, [r0, #0]
 8006594:	e7f9      	b.n	800658a <_calloc_r+0x12>
 8006596:	462a      	mov	r2, r5
 8006598:	4621      	mov	r1, r4
 800659a:	f7fb ff7d 	bl	8002498 <memset>
 800659e:	e7f4      	b.n	800658a <_calloc_r+0x12>

080065a0 <_free_r>:
 80065a0:	b538      	push	{r3, r4, r5, lr}
 80065a2:	4605      	mov	r5, r0
 80065a4:	2900      	cmp	r1, #0
 80065a6:	d040      	beq.n	800662a <_free_r+0x8a>
 80065a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80065ac:	1f0c      	subs	r4, r1, #4
 80065ae:	2b00      	cmp	r3, #0
 80065b0:	bfb8      	it	lt
 80065b2:	18e4      	addlt	r4, r4, r3
 80065b4:	f001 f9d2 	bl	800795c <__malloc_lock>
 80065b8:	4a1c      	ldr	r2, [pc, #112]	; (800662c <_free_r+0x8c>)
 80065ba:	6813      	ldr	r3, [r2, #0]
 80065bc:	b933      	cbnz	r3, 80065cc <_free_r+0x2c>
 80065be:	6063      	str	r3, [r4, #4]
 80065c0:	6014      	str	r4, [r2, #0]
 80065c2:	4628      	mov	r0, r5
 80065c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80065c8:	f001 b9ce 	b.w	8007968 <__malloc_unlock>
 80065cc:	42a3      	cmp	r3, r4
 80065ce:	d908      	bls.n	80065e2 <_free_r+0x42>
 80065d0:	6820      	ldr	r0, [r4, #0]
 80065d2:	1821      	adds	r1, r4, r0
 80065d4:	428b      	cmp	r3, r1
 80065d6:	bf01      	itttt	eq
 80065d8:	6819      	ldreq	r1, [r3, #0]
 80065da:	685b      	ldreq	r3, [r3, #4]
 80065dc:	1809      	addeq	r1, r1, r0
 80065de:	6021      	streq	r1, [r4, #0]
 80065e0:	e7ed      	b.n	80065be <_free_r+0x1e>
 80065e2:	461a      	mov	r2, r3
 80065e4:	685b      	ldr	r3, [r3, #4]
 80065e6:	b10b      	cbz	r3, 80065ec <_free_r+0x4c>
 80065e8:	42a3      	cmp	r3, r4
 80065ea:	d9fa      	bls.n	80065e2 <_free_r+0x42>
 80065ec:	6811      	ldr	r1, [r2, #0]
 80065ee:	1850      	adds	r0, r2, r1
 80065f0:	42a0      	cmp	r0, r4
 80065f2:	d10b      	bne.n	800660c <_free_r+0x6c>
 80065f4:	6820      	ldr	r0, [r4, #0]
 80065f6:	4401      	add	r1, r0
 80065f8:	1850      	adds	r0, r2, r1
 80065fa:	4283      	cmp	r3, r0
 80065fc:	6011      	str	r1, [r2, #0]
 80065fe:	d1e0      	bne.n	80065c2 <_free_r+0x22>
 8006600:	6818      	ldr	r0, [r3, #0]
 8006602:	685b      	ldr	r3, [r3, #4]
 8006604:	4401      	add	r1, r0
 8006606:	6011      	str	r1, [r2, #0]
 8006608:	6053      	str	r3, [r2, #4]
 800660a:	e7da      	b.n	80065c2 <_free_r+0x22>
 800660c:	d902      	bls.n	8006614 <_free_r+0x74>
 800660e:	230c      	movs	r3, #12
 8006610:	602b      	str	r3, [r5, #0]
 8006612:	e7d6      	b.n	80065c2 <_free_r+0x22>
 8006614:	6820      	ldr	r0, [r4, #0]
 8006616:	1821      	adds	r1, r4, r0
 8006618:	428b      	cmp	r3, r1
 800661a:	bf01      	itttt	eq
 800661c:	6819      	ldreq	r1, [r3, #0]
 800661e:	685b      	ldreq	r3, [r3, #4]
 8006620:	1809      	addeq	r1, r1, r0
 8006622:	6021      	streq	r1, [r4, #0]
 8006624:	6063      	str	r3, [r4, #4]
 8006626:	6054      	str	r4, [r2, #4]
 8006628:	e7cb      	b.n	80065c2 <_free_r+0x22>
 800662a:	bd38      	pop	{r3, r4, r5, pc}
 800662c:	20000250 	.word	0x20000250

08006630 <sbrk_aligned>:
 8006630:	b570      	push	{r4, r5, r6, lr}
 8006632:	4e0e      	ldr	r6, [pc, #56]	; (800666c <sbrk_aligned+0x3c>)
 8006634:	460c      	mov	r4, r1
 8006636:	6831      	ldr	r1, [r6, #0]
 8006638:	4605      	mov	r5, r0
 800663a:	b911      	cbnz	r1, 8006642 <sbrk_aligned+0x12>
 800663c:	f000 fefc 	bl	8007438 <_sbrk_r>
 8006640:	6030      	str	r0, [r6, #0]
 8006642:	4621      	mov	r1, r4
 8006644:	4628      	mov	r0, r5
 8006646:	f000 fef7 	bl	8007438 <_sbrk_r>
 800664a:	1c43      	adds	r3, r0, #1
 800664c:	d00a      	beq.n	8006664 <sbrk_aligned+0x34>
 800664e:	1cc4      	adds	r4, r0, #3
 8006650:	f024 0403 	bic.w	r4, r4, #3
 8006654:	42a0      	cmp	r0, r4
 8006656:	d007      	beq.n	8006668 <sbrk_aligned+0x38>
 8006658:	1a21      	subs	r1, r4, r0
 800665a:	4628      	mov	r0, r5
 800665c:	f000 feec 	bl	8007438 <_sbrk_r>
 8006660:	3001      	adds	r0, #1
 8006662:	d101      	bne.n	8006668 <sbrk_aligned+0x38>
 8006664:	f04f 34ff 	mov.w	r4, #4294967295
 8006668:	4620      	mov	r0, r4
 800666a:	bd70      	pop	{r4, r5, r6, pc}
 800666c:	20000254 	.word	0x20000254

08006670 <_malloc_r>:
 8006670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006674:	1ccd      	adds	r5, r1, #3
 8006676:	f025 0503 	bic.w	r5, r5, #3
 800667a:	3508      	adds	r5, #8
 800667c:	2d0c      	cmp	r5, #12
 800667e:	bf38      	it	cc
 8006680:	250c      	movcc	r5, #12
 8006682:	2d00      	cmp	r5, #0
 8006684:	4607      	mov	r7, r0
 8006686:	db01      	blt.n	800668c <_malloc_r+0x1c>
 8006688:	42a9      	cmp	r1, r5
 800668a:	d905      	bls.n	8006698 <_malloc_r+0x28>
 800668c:	230c      	movs	r3, #12
 800668e:	2600      	movs	r6, #0
 8006690:	603b      	str	r3, [r7, #0]
 8006692:	4630      	mov	r0, r6
 8006694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006698:	4e2e      	ldr	r6, [pc, #184]	; (8006754 <_malloc_r+0xe4>)
 800669a:	f001 f95f 	bl	800795c <__malloc_lock>
 800669e:	6833      	ldr	r3, [r6, #0]
 80066a0:	461c      	mov	r4, r3
 80066a2:	bb34      	cbnz	r4, 80066f2 <_malloc_r+0x82>
 80066a4:	4629      	mov	r1, r5
 80066a6:	4638      	mov	r0, r7
 80066a8:	f7ff ffc2 	bl	8006630 <sbrk_aligned>
 80066ac:	1c43      	adds	r3, r0, #1
 80066ae:	4604      	mov	r4, r0
 80066b0:	d14d      	bne.n	800674e <_malloc_r+0xde>
 80066b2:	6834      	ldr	r4, [r6, #0]
 80066b4:	4626      	mov	r6, r4
 80066b6:	2e00      	cmp	r6, #0
 80066b8:	d140      	bne.n	800673c <_malloc_r+0xcc>
 80066ba:	6823      	ldr	r3, [r4, #0]
 80066bc:	4631      	mov	r1, r6
 80066be:	4638      	mov	r0, r7
 80066c0:	eb04 0803 	add.w	r8, r4, r3
 80066c4:	f000 feb8 	bl	8007438 <_sbrk_r>
 80066c8:	4580      	cmp	r8, r0
 80066ca:	d13a      	bne.n	8006742 <_malloc_r+0xd2>
 80066cc:	6821      	ldr	r1, [r4, #0]
 80066ce:	3503      	adds	r5, #3
 80066d0:	1a6d      	subs	r5, r5, r1
 80066d2:	f025 0503 	bic.w	r5, r5, #3
 80066d6:	3508      	adds	r5, #8
 80066d8:	2d0c      	cmp	r5, #12
 80066da:	bf38      	it	cc
 80066dc:	250c      	movcc	r5, #12
 80066de:	4638      	mov	r0, r7
 80066e0:	4629      	mov	r1, r5
 80066e2:	f7ff ffa5 	bl	8006630 <sbrk_aligned>
 80066e6:	3001      	adds	r0, #1
 80066e8:	d02b      	beq.n	8006742 <_malloc_r+0xd2>
 80066ea:	6823      	ldr	r3, [r4, #0]
 80066ec:	442b      	add	r3, r5
 80066ee:	6023      	str	r3, [r4, #0]
 80066f0:	e00e      	b.n	8006710 <_malloc_r+0xa0>
 80066f2:	6822      	ldr	r2, [r4, #0]
 80066f4:	1b52      	subs	r2, r2, r5
 80066f6:	d41e      	bmi.n	8006736 <_malloc_r+0xc6>
 80066f8:	2a0b      	cmp	r2, #11
 80066fa:	d916      	bls.n	800672a <_malloc_r+0xba>
 80066fc:	1961      	adds	r1, r4, r5
 80066fe:	42a3      	cmp	r3, r4
 8006700:	6025      	str	r5, [r4, #0]
 8006702:	bf18      	it	ne
 8006704:	6059      	strne	r1, [r3, #4]
 8006706:	6863      	ldr	r3, [r4, #4]
 8006708:	bf08      	it	eq
 800670a:	6031      	streq	r1, [r6, #0]
 800670c:	5162      	str	r2, [r4, r5]
 800670e:	604b      	str	r3, [r1, #4]
 8006710:	4638      	mov	r0, r7
 8006712:	f104 060b 	add.w	r6, r4, #11
 8006716:	f001 f927 	bl	8007968 <__malloc_unlock>
 800671a:	f026 0607 	bic.w	r6, r6, #7
 800671e:	1d23      	adds	r3, r4, #4
 8006720:	1af2      	subs	r2, r6, r3
 8006722:	d0b6      	beq.n	8006692 <_malloc_r+0x22>
 8006724:	1b9b      	subs	r3, r3, r6
 8006726:	50a3      	str	r3, [r4, r2]
 8006728:	e7b3      	b.n	8006692 <_malloc_r+0x22>
 800672a:	6862      	ldr	r2, [r4, #4]
 800672c:	42a3      	cmp	r3, r4
 800672e:	bf0c      	ite	eq
 8006730:	6032      	streq	r2, [r6, #0]
 8006732:	605a      	strne	r2, [r3, #4]
 8006734:	e7ec      	b.n	8006710 <_malloc_r+0xa0>
 8006736:	4623      	mov	r3, r4
 8006738:	6864      	ldr	r4, [r4, #4]
 800673a:	e7b2      	b.n	80066a2 <_malloc_r+0x32>
 800673c:	4634      	mov	r4, r6
 800673e:	6876      	ldr	r6, [r6, #4]
 8006740:	e7b9      	b.n	80066b6 <_malloc_r+0x46>
 8006742:	230c      	movs	r3, #12
 8006744:	4638      	mov	r0, r7
 8006746:	603b      	str	r3, [r7, #0]
 8006748:	f001 f90e 	bl	8007968 <__malloc_unlock>
 800674c:	e7a1      	b.n	8006692 <_malloc_r+0x22>
 800674e:	6025      	str	r5, [r4, #0]
 8006750:	e7de      	b.n	8006710 <_malloc_r+0xa0>
 8006752:	bf00      	nop
 8006754:	20000250 	.word	0x20000250

08006758 <__ssputs_r>:
 8006758:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800675c:	688e      	ldr	r6, [r1, #8]
 800675e:	4682      	mov	sl, r0
 8006760:	429e      	cmp	r6, r3
 8006762:	460c      	mov	r4, r1
 8006764:	4690      	mov	r8, r2
 8006766:	461f      	mov	r7, r3
 8006768:	d838      	bhi.n	80067dc <__ssputs_r+0x84>
 800676a:	898a      	ldrh	r2, [r1, #12]
 800676c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006770:	d032      	beq.n	80067d8 <__ssputs_r+0x80>
 8006772:	6825      	ldr	r5, [r4, #0]
 8006774:	6909      	ldr	r1, [r1, #16]
 8006776:	3301      	adds	r3, #1
 8006778:	eba5 0901 	sub.w	r9, r5, r1
 800677c:	6965      	ldr	r5, [r4, #20]
 800677e:	444b      	add	r3, r9
 8006780:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006784:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006788:	106d      	asrs	r5, r5, #1
 800678a:	429d      	cmp	r5, r3
 800678c:	bf38      	it	cc
 800678e:	461d      	movcc	r5, r3
 8006790:	0553      	lsls	r3, r2, #21
 8006792:	d531      	bpl.n	80067f8 <__ssputs_r+0xa0>
 8006794:	4629      	mov	r1, r5
 8006796:	f7ff ff6b 	bl	8006670 <_malloc_r>
 800679a:	4606      	mov	r6, r0
 800679c:	b950      	cbnz	r0, 80067b4 <__ssputs_r+0x5c>
 800679e:	230c      	movs	r3, #12
 80067a0:	f04f 30ff 	mov.w	r0, #4294967295
 80067a4:	f8ca 3000 	str.w	r3, [sl]
 80067a8:	89a3      	ldrh	r3, [r4, #12]
 80067aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80067ae:	81a3      	strh	r3, [r4, #12]
 80067b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80067b4:	464a      	mov	r2, r9
 80067b6:	6921      	ldr	r1, [r4, #16]
 80067b8:	f7ff fa18 	bl	8005bec <memcpy>
 80067bc:	89a3      	ldrh	r3, [r4, #12]
 80067be:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80067c2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80067c6:	81a3      	strh	r3, [r4, #12]
 80067c8:	6126      	str	r6, [r4, #16]
 80067ca:	444e      	add	r6, r9
 80067cc:	6026      	str	r6, [r4, #0]
 80067ce:	463e      	mov	r6, r7
 80067d0:	6165      	str	r5, [r4, #20]
 80067d2:	eba5 0509 	sub.w	r5, r5, r9
 80067d6:	60a5      	str	r5, [r4, #8]
 80067d8:	42be      	cmp	r6, r7
 80067da:	d900      	bls.n	80067de <__ssputs_r+0x86>
 80067dc:	463e      	mov	r6, r7
 80067de:	4632      	mov	r2, r6
 80067e0:	4641      	mov	r1, r8
 80067e2:	6820      	ldr	r0, [r4, #0]
 80067e4:	f001 f8a0 	bl	8007928 <memmove>
 80067e8:	68a3      	ldr	r3, [r4, #8]
 80067ea:	2000      	movs	r0, #0
 80067ec:	1b9b      	subs	r3, r3, r6
 80067ee:	60a3      	str	r3, [r4, #8]
 80067f0:	6823      	ldr	r3, [r4, #0]
 80067f2:	4433      	add	r3, r6
 80067f4:	6023      	str	r3, [r4, #0]
 80067f6:	e7db      	b.n	80067b0 <__ssputs_r+0x58>
 80067f8:	462a      	mov	r2, r5
 80067fa:	f001 f8bb 	bl	8007974 <_realloc_r>
 80067fe:	4606      	mov	r6, r0
 8006800:	2800      	cmp	r0, #0
 8006802:	d1e1      	bne.n	80067c8 <__ssputs_r+0x70>
 8006804:	4650      	mov	r0, sl
 8006806:	6921      	ldr	r1, [r4, #16]
 8006808:	f7ff feca 	bl	80065a0 <_free_r>
 800680c:	e7c7      	b.n	800679e <__ssputs_r+0x46>
	...

08006810 <_svfiprintf_r>:
 8006810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006814:	4698      	mov	r8, r3
 8006816:	898b      	ldrh	r3, [r1, #12]
 8006818:	4607      	mov	r7, r0
 800681a:	061b      	lsls	r3, r3, #24
 800681c:	460d      	mov	r5, r1
 800681e:	4614      	mov	r4, r2
 8006820:	b09d      	sub	sp, #116	; 0x74
 8006822:	d50e      	bpl.n	8006842 <_svfiprintf_r+0x32>
 8006824:	690b      	ldr	r3, [r1, #16]
 8006826:	b963      	cbnz	r3, 8006842 <_svfiprintf_r+0x32>
 8006828:	2140      	movs	r1, #64	; 0x40
 800682a:	f7ff ff21 	bl	8006670 <_malloc_r>
 800682e:	6028      	str	r0, [r5, #0]
 8006830:	6128      	str	r0, [r5, #16]
 8006832:	b920      	cbnz	r0, 800683e <_svfiprintf_r+0x2e>
 8006834:	230c      	movs	r3, #12
 8006836:	603b      	str	r3, [r7, #0]
 8006838:	f04f 30ff 	mov.w	r0, #4294967295
 800683c:	e0d1      	b.n	80069e2 <_svfiprintf_r+0x1d2>
 800683e:	2340      	movs	r3, #64	; 0x40
 8006840:	616b      	str	r3, [r5, #20]
 8006842:	2300      	movs	r3, #0
 8006844:	9309      	str	r3, [sp, #36]	; 0x24
 8006846:	2320      	movs	r3, #32
 8006848:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800684c:	2330      	movs	r3, #48	; 0x30
 800684e:	f04f 0901 	mov.w	r9, #1
 8006852:	f8cd 800c 	str.w	r8, [sp, #12]
 8006856:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80069fc <_svfiprintf_r+0x1ec>
 800685a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800685e:	4623      	mov	r3, r4
 8006860:	469a      	mov	sl, r3
 8006862:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006866:	b10a      	cbz	r2, 800686c <_svfiprintf_r+0x5c>
 8006868:	2a25      	cmp	r2, #37	; 0x25
 800686a:	d1f9      	bne.n	8006860 <_svfiprintf_r+0x50>
 800686c:	ebba 0b04 	subs.w	fp, sl, r4
 8006870:	d00b      	beq.n	800688a <_svfiprintf_r+0x7a>
 8006872:	465b      	mov	r3, fp
 8006874:	4622      	mov	r2, r4
 8006876:	4629      	mov	r1, r5
 8006878:	4638      	mov	r0, r7
 800687a:	f7ff ff6d 	bl	8006758 <__ssputs_r>
 800687e:	3001      	adds	r0, #1
 8006880:	f000 80aa 	beq.w	80069d8 <_svfiprintf_r+0x1c8>
 8006884:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006886:	445a      	add	r2, fp
 8006888:	9209      	str	r2, [sp, #36]	; 0x24
 800688a:	f89a 3000 	ldrb.w	r3, [sl]
 800688e:	2b00      	cmp	r3, #0
 8006890:	f000 80a2 	beq.w	80069d8 <_svfiprintf_r+0x1c8>
 8006894:	2300      	movs	r3, #0
 8006896:	f04f 32ff 	mov.w	r2, #4294967295
 800689a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800689e:	f10a 0a01 	add.w	sl, sl, #1
 80068a2:	9304      	str	r3, [sp, #16]
 80068a4:	9307      	str	r3, [sp, #28]
 80068a6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80068aa:	931a      	str	r3, [sp, #104]	; 0x68
 80068ac:	4654      	mov	r4, sl
 80068ae:	2205      	movs	r2, #5
 80068b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80068b4:	4851      	ldr	r0, [pc, #324]	; (80069fc <_svfiprintf_r+0x1ec>)
 80068b6:	f7ff f98b 	bl	8005bd0 <memchr>
 80068ba:	9a04      	ldr	r2, [sp, #16]
 80068bc:	b9d8      	cbnz	r0, 80068f6 <_svfiprintf_r+0xe6>
 80068be:	06d0      	lsls	r0, r2, #27
 80068c0:	bf44      	itt	mi
 80068c2:	2320      	movmi	r3, #32
 80068c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80068c8:	0711      	lsls	r1, r2, #28
 80068ca:	bf44      	itt	mi
 80068cc:	232b      	movmi	r3, #43	; 0x2b
 80068ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80068d2:	f89a 3000 	ldrb.w	r3, [sl]
 80068d6:	2b2a      	cmp	r3, #42	; 0x2a
 80068d8:	d015      	beq.n	8006906 <_svfiprintf_r+0xf6>
 80068da:	4654      	mov	r4, sl
 80068dc:	2000      	movs	r0, #0
 80068de:	f04f 0c0a 	mov.w	ip, #10
 80068e2:	9a07      	ldr	r2, [sp, #28]
 80068e4:	4621      	mov	r1, r4
 80068e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80068ea:	3b30      	subs	r3, #48	; 0x30
 80068ec:	2b09      	cmp	r3, #9
 80068ee:	d94e      	bls.n	800698e <_svfiprintf_r+0x17e>
 80068f0:	b1b0      	cbz	r0, 8006920 <_svfiprintf_r+0x110>
 80068f2:	9207      	str	r2, [sp, #28]
 80068f4:	e014      	b.n	8006920 <_svfiprintf_r+0x110>
 80068f6:	eba0 0308 	sub.w	r3, r0, r8
 80068fa:	fa09 f303 	lsl.w	r3, r9, r3
 80068fe:	4313      	orrs	r3, r2
 8006900:	46a2      	mov	sl, r4
 8006902:	9304      	str	r3, [sp, #16]
 8006904:	e7d2      	b.n	80068ac <_svfiprintf_r+0x9c>
 8006906:	9b03      	ldr	r3, [sp, #12]
 8006908:	1d19      	adds	r1, r3, #4
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	9103      	str	r1, [sp, #12]
 800690e:	2b00      	cmp	r3, #0
 8006910:	bfbb      	ittet	lt
 8006912:	425b      	neglt	r3, r3
 8006914:	f042 0202 	orrlt.w	r2, r2, #2
 8006918:	9307      	strge	r3, [sp, #28]
 800691a:	9307      	strlt	r3, [sp, #28]
 800691c:	bfb8      	it	lt
 800691e:	9204      	strlt	r2, [sp, #16]
 8006920:	7823      	ldrb	r3, [r4, #0]
 8006922:	2b2e      	cmp	r3, #46	; 0x2e
 8006924:	d10c      	bne.n	8006940 <_svfiprintf_r+0x130>
 8006926:	7863      	ldrb	r3, [r4, #1]
 8006928:	2b2a      	cmp	r3, #42	; 0x2a
 800692a:	d135      	bne.n	8006998 <_svfiprintf_r+0x188>
 800692c:	9b03      	ldr	r3, [sp, #12]
 800692e:	3402      	adds	r4, #2
 8006930:	1d1a      	adds	r2, r3, #4
 8006932:	681b      	ldr	r3, [r3, #0]
 8006934:	9203      	str	r2, [sp, #12]
 8006936:	2b00      	cmp	r3, #0
 8006938:	bfb8      	it	lt
 800693a:	f04f 33ff 	movlt.w	r3, #4294967295
 800693e:	9305      	str	r3, [sp, #20]
 8006940:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8006a00 <_svfiprintf_r+0x1f0>
 8006944:	2203      	movs	r2, #3
 8006946:	4650      	mov	r0, sl
 8006948:	7821      	ldrb	r1, [r4, #0]
 800694a:	f7ff f941 	bl	8005bd0 <memchr>
 800694e:	b140      	cbz	r0, 8006962 <_svfiprintf_r+0x152>
 8006950:	2340      	movs	r3, #64	; 0x40
 8006952:	eba0 000a 	sub.w	r0, r0, sl
 8006956:	fa03 f000 	lsl.w	r0, r3, r0
 800695a:	9b04      	ldr	r3, [sp, #16]
 800695c:	3401      	adds	r4, #1
 800695e:	4303      	orrs	r3, r0
 8006960:	9304      	str	r3, [sp, #16]
 8006962:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006966:	2206      	movs	r2, #6
 8006968:	4826      	ldr	r0, [pc, #152]	; (8006a04 <_svfiprintf_r+0x1f4>)
 800696a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800696e:	f7ff f92f 	bl	8005bd0 <memchr>
 8006972:	2800      	cmp	r0, #0
 8006974:	d038      	beq.n	80069e8 <_svfiprintf_r+0x1d8>
 8006976:	4b24      	ldr	r3, [pc, #144]	; (8006a08 <_svfiprintf_r+0x1f8>)
 8006978:	bb1b      	cbnz	r3, 80069c2 <_svfiprintf_r+0x1b2>
 800697a:	9b03      	ldr	r3, [sp, #12]
 800697c:	3307      	adds	r3, #7
 800697e:	f023 0307 	bic.w	r3, r3, #7
 8006982:	3308      	adds	r3, #8
 8006984:	9303      	str	r3, [sp, #12]
 8006986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006988:	4433      	add	r3, r6
 800698a:	9309      	str	r3, [sp, #36]	; 0x24
 800698c:	e767      	b.n	800685e <_svfiprintf_r+0x4e>
 800698e:	460c      	mov	r4, r1
 8006990:	2001      	movs	r0, #1
 8006992:	fb0c 3202 	mla	r2, ip, r2, r3
 8006996:	e7a5      	b.n	80068e4 <_svfiprintf_r+0xd4>
 8006998:	2300      	movs	r3, #0
 800699a:	f04f 0c0a 	mov.w	ip, #10
 800699e:	4619      	mov	r1, r3
 80069a0:	3401      	adds	r4, #1
 80069a2:	9305      	str	r3, [sp, #20]
 80069a4:	4620      	mov	r0, r4
 80069a6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80069aa:	3a30      	subs	r2, #48	; 0x30
 80069ac:	2a09      	cmp	r2, #9
 80069ae:	d903      	bls.n	80069b8 <_svfiprintf_r+0x1a8>
 80069b0:	2b00      	cmp	r3, #0
 80069b2:	d0c5      	beq.n	8006940 <_svfiprintf_r+0x130>
 80069b4:	9105      	str	r1, [sp, #20]
 80069b6:	e7c3      	b.n	8006940 <_svfiprintf_r+0x130>
 80069b8:	4604      	mov	r4, r0
 80069ba:	2301      	movs	r3, #1
 80069bc:	fb0c 2101 	mla	r1, ip, r1, r2
 80069c0:	e7f0      	b.n	80069a4 <_svfiprintf_r+0x194>
 80069c2:	ab03      	add	r3, sp, #12
 80069c4:	9300      	str	r3, [sp, #0]
 80069c6:	462a      	mov	r2, r5
 80069c8:	4638      	mov	r0, r7
 80069ca:	4b10      	ldr	r3, [pc, #64]	; (8006a0c <_svfiprintf_r+0x1fc>)
 80069cc:	a904      	add	r1, sp, #16
 80069ce:	f7fb fe09 	bl	80025e4 <_printf_float>
 80069d2:	1c42      	adds	r2, r0, #1
 80069d4:	4606      	mov	r6, r0
 80069d6:	d1d6      	bne.n	8006986 <_svfiprintf_r+0x176>
 80069d8:	89ab      	ldrh	r3, [r5, #12]
 80069da:	065b      	lsls	r3, r3, #25
 80069dc:	f53f af2c 	bmi.w	8006838 <_svfiprintf_r+0x28>
 80069e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80069e2:	b01d      	add	sp, #116	; 0x74
 80069e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80069e8:	ab03      	add	r3, sp, #12
 80069ea:	9300      	str	r3, [sp, #0]
 80069ec:	462a      	mov	r2, r5
 80069ee:	4638      	mov	r0, r7
 80069f0:	4b06      	ldr	r3, [pc, #24]	; (8006a0c <_svfiprintf_r+0x1fc>)
 80069f2:	a904      	add	r1, sp, #16
 80069f4:	f7fc f892 	bl	8002b1c <_printf_i>
 80069f8:	e7eb      	b.n	80069d2 <_svfiprintf_r+0x1c2>
 80069fa:	bf00      	nop
 80069fc:	08007f8c 	.word	0x08007f8c
 8006a00:	08007f92 	.word	0x08007f92
 8006a04:	08007f96 	.word	0x08007f96
 8006a08:	080025e5 	.word	0x080025e5
 8006a0c:	08006759 	.word	0x08006759

08006a10 <__sfputc_r>:
 8006a10:	6893      	ldr	r3, [r2, #8]
 8006a12:	b410      	push	{r4}
 8006a14:	3b01      	subs	r3, #1
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	6093      	str	r3, [r2, #8]
 8006a1a:	da07      	bge.n	8006a2c <__sfputc_r+0x1c>
 8006a1c:	6994      	ldr	r4, [r2, #24]
 8006a1e:	42a3      	cmp	r3, r4
 8006a20:	db01      	blt.n	8006a26 <__sfputc_r+0x16>
 8006a22:	290a      	cmp	r1, #10
 8006a24:	d102      	bne.n	8006a2c <__sfputc_r+0x1c>
 8006a26:	bc10      	pop	{r4}
 8006a28:	f7fd bbca 	b.w	80041c0 <__swbuf_r>
 8006a2c:	6813      	ldr	r3, [r2, #0]
 8006a2e:	1c58      	adds	r0, r3, #1
 8006a30:	6010      	str	r0, [r2, #0]
 8006a32:	7019      	strb	r1, [r3, #0]
 8006a34:	4608      	mov	r0, r1
 8006a36:	bc10      	pop	{r4}
 8006a38:	4770      	bx	lr

08006a3a <__sfputs_r>:
 8006a3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a3c:	4606      	mov	r6, r0
 8006a3e:	460f      	mov	r7, r1
 8006a40:	4614      	mov	r4, r2
 8006a42:	18d5      	adds	r5, r2, r3
 8006a44:	42ac      	cmp	r4, r5
 8006a46:	d101      	bne.n	8006a4c <__sfputs_r+0x12>
 8006a48:	2000      	movs	r0, #0
 8006a4a:	e007      	b.n	8006a5c <__sfputs_r+0x22>
 8006a4c:	463a      	mov	r2, r7
 8006a4e:	4630      	mov	r0, r6
 8006a50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006a54:	f7ff ffdc 	bl	8006a10 <__sfputc_r>
 8006a58:	1c43      	adds	r3, r0, #1
 8006a5a:	d1f3      	bne.n	8006a44 <__sfputs_r+0xa>
 8006a5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006a60 <_vfiprintf_r>:
 8006a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a64:	460d      	mov	r5, r1
 8006a66:	4614      	mov	r4, r2
 8006a68:	4698      	mov	r8, r3
 8006a6a:	4606      	mov	r6, r0
 8006a6c:	b09d      	sub	sp, #116	; 0x74
 8006a6e:	b118      	cbz	r0, 8006a78 <_vfiprintf_r+0x18>
 8006a70:	6983      	ldr	r3, [r0, #24]
 8006a72:	b90b      	cbnz	r3, 8006a78 <_vfiprintf_r+0x18>
 8006a74:	f7fe fc06 	bl	8005284 <__sinit>
 8006a78:	4b89      	ldr	r3, [pc, #548]	; (8006ca0 <_vfiprintf_r+0x240>)
 8006a7a:	429d      	cmp	r5, r3
 8006a7c:	d11b      	bne.n	8006ab6 <_vfiprintf_r+0x56>
 8006a7e:	6875      	ldr	r5, [r6, #4]
 8006a80:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006a82:	07d9      	lsls	r1, r3, #31
 8006a84:	d405      	bmi.n	8006a92 <_vfiprintf_r+0x32>
 8006a86:	89ab      	ldrh	r3, [r5, #12]
 8006a88:	059a      	lsls	r2, r3, #22
 8006a8a:	d402      	bmi.n	8006a92 <_vfiprintf_r+0x32>
 8006a8c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006a8e:	f7ff f81e 	bl	8005ace <__retarget_lock_acquire_recursive>
 8006a92:	89ab      	ldrh	r3, [r5, #12]
 8006a94:	071b      	lsls	r3, r3, #28
 8006a96:	d501      	bpl.n	8006a9c <_vfiprintf_r+0x3c>
 8006a98:	692b      	ldr	r3, [r5, #16]
 8006a9a:	b9eb      	cbnz	r3, 8006ad8 <_vfiprintf_r+0x78>
 8006a9c:	4629      	mov	r1, r5
 8006a9e:	4630      	mov	r0, r6
 8006aa0:	f7fd fbe0 	bl	8004264 <__swsetup_r>
 8006aa4:	b1c0      	cbz	r0, 8006ad8 <_vfiprintf_r+0x78>
 8006aa6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006aa8:	07dc      	lsls	r4, r3, #31
 8006aaa:	d50e      	bpl.n	8006aca <_vfiprintf_r+0x6a>
 8006aac:	f04f 30ff 	mov.w	r0, #4294967295
 8006ab0:	b01d      	add	sp, #116	; 0x74
 8006ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ab6:	4b7b      	ldr	r3, [pc, #492]	; (8006ca4 <_vfiprintf_r+0x244>)
 8006ab8:	429d      	cmp	r5, r3
 8006aba:	d101      	bne.n	8006ac0 <_vfiprintf_r+0x60>
 8006abc:	68b5      	ldr	r5, [r6, #8]
 8006abe:	e7df      	b.n	8006a80 <_vfiprintf_r+0x20>
 8006ac0:	4b79      	ldr	r3, [pc, #484]	; (8006ca8 <_vfiprintf_r+0x248>)
 8006ac2:	429d      	cmp	r5, r3
 8006ac4:	bf08      	it	eq
 8006ac6:	68f5      	ldreq	r5, [r6, #12]
 8006ac8:	e7da      	b.n	8006a80 <_vfiprintf_r+0x20>
 8006aca:	89ab      	ldrh	r3, [r5, #12]
 8006acc:	0598      	lsls	r0, r3, #22
 8006ace:	d4ed      	bmi.n	8006aac <_vfiprintf_r+0x4c>
 8006ad0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006ad2:	f7fe fffd 	bl	8005ad0 <__retarget_lock_release_recursive>
 8006ad6:	e7e9      	b.n	8006aac <_vfiprintf_r+0x4c>
 8006ad8:	2300      	movs	r3, #0
 8006ada:	9309      	str	r3, [sp, #36]	; 0x24
 8006adc:	2320      	movs	r3, #32
 8006ade:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006ae2:	2330      	movs	r3, #48	; 0x30
 8006ae4:	f04f 0901 	mov.w	r9, #1
 8006ae8:	f8cd 800c 	str.w	r8, [sp, #12]
 8006aec:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8006cac <_vfiprintf_r+0x24c>
 8006af0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006af4:	4623      	mov	r3, r4
 8006af6:	469a      	mov	sl, r3
 8006af8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006afc:	b10a      	cbz	r2, 8006b02 <_vfiprintf_r+0xa2>
 8006afe:	2a25      	cmp	r2, #37	; 0x25
 8006b00:	d1f9      	bne.n	8006af6 <_vfiprintf_r+0x96>
 8006b02:	ebba 0b04 	subs.w	fp, sl, r4
 8006b06:	d00b      	beq.n	8006b20 <_vfiprintf_r+0xc0>
 8006b08:	465b      	mov	r3, fp
 8006b0a:	4622      	mov	r2, r4
 8006b0c:	4629      	mov	r1, r5
 8006b0e:	4630      	mov	r0, r6
 8006b10:	f7ff ff93 	bl	8006a3a <__sfputs_r>
 8006b14:	3001      	adds	r0, #1
 8006b16:	f000 80aa 	beq.w	8006c6e <_vfiprintf_r+0x20e>
 8006b1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006b1c:	445a      	add	r2, fp
 8006b1e:	9209      	str	r2, [sp, #36]	; 0x24
 8006b20:	f89a 3000 	ldrb.w	r3, [sl]
 8006b24:	2b00      	cmp	r3, #0
 8006b26:	f000 80a2 	beq.w	8006c6e <_vfiprintf_r+0x20e>
 8006b2a:	2300      	movs	r3, #0
 8006b2c:	f04f 32ff 	mov.w	r2, #4294967295
 8006b30:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006b34:	f10a 0a01 	add.w	sl, sl, #1
 8006b38:	9304      	str	r3, [sp, #16]
 8006b3a:	9307      	str	r3, [sp, #28]
 8006b3c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006b40:	931a      	str	r3, [sp, #104]	; 0x68
 8006b42:	4654      	mov	r4, sl
 8006b44:	2205      	movs	r2, #5
 8006b46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006b4a:	4858      	ldr	r0, [pc, #352]	; (8006cac <_vfiprintf_r+0x24c>)
 8006b4c:	f7ff f840 	bl	8005bd0 <memchr>
 8006b50:	9a04      	ldr	r2, [sp, #16]
 8006b52:	b9d8      	cbnz	r0, 8006b8c <_vfiprintf_r+0x12c>
 8006b54:	06d1      	lsls	r1, r2, #27
 8006b56:	bf44      	itt	mi
 8006b58:	2320      	movmi	r3, #32
 8006b5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006b5e:	0713      	lsls	r3, r2, #28
 8006b60:	bf44      	itt	mi
 8006b62:	232b      	movmi	r3, #43	; 0x2b
 8006b64:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006b68:	f89a 3000 	ldrb.w	r3, [sl]
 8006b6c:	2b2a      	cmp	r3, #42	; 0x2a
 8006b6e:	d015      	beq.n	8006b9c <_vfiprintf_r+0x13c>
 8006b70:	4654      	mov	r4, sl
 8006b72:	2000      	movs	r0, #0
 8006b74:	f04f 0c0a 	mov.w	ip, #10
 8006b78:	9a07      	ldr	r2, [sp, #28]
 8006b7a:	4621      	mov	r1, r4
 8006b7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006b80:	3b30      	subs	r3, #48	; 0x30
 8006b82:	2b09      	cmp	r3, #9
 8006b84:	d94e      	bls.n	8006c24 <_vfiprintf_r+0x1c4>
 8006b86:	b1b0      	cbz	r0, 8006bb6 <_vfiprintf_r+0x156>
 8006b88:	9207      	str	r2, [sp, #28]
 8006b8a:	e014      	b.n	8006bb6 <_vfiprintf_r+0x156>
 8006b8c:	eba0 0308 	sub.w	r3, r0, r8
 8006b90:	fa09 f303 	lsl.w	r3, r9, r3
 8006b94:	4313      	orrs	r3, r2
 8006b96:	46a2      	mov	sl, r4
 8006b98:	9304      	str	r3, [sp, #16]
 8006b9a:	e7d2      	b.n	8006b42 <_vfiprintf_r+0xe2>
 8006b9c:	9b03      	ldr	r3, [sp, #12]
 8006b9e:	1d19      	adds	r1, r3, #4
 8006ba0:	681b      	ldr	r3, [r3, #0]
 8006ba2:	9103      	str	r1, [sp, #12]
 8006ba4:	2b00      	cmp	r3, #0
 8006ba6:	bfbb      	ittet	lt
 8006ba8:	425b      	neglt	r3, r3
 8006baa:	f042 0202 	orrlt.w	r2, r2, #2
 8006bae:	9307      	strge	r3, [sp, #28]
 8006bb0:	9307      	strlt	r3, [sp, #28]
 8006bb2:	bfb8      	it	lt
 8006bb4:	9204      	strlt	r2, [sp, #16]
 8006bb6:	7823      	ldrb	r3, [r4, #0]
 8006bb8:	2b2e      	cmp	r3, #46	; 0x2e
 8006bba:	d10c      	bne.n	8006bd6 <_vfiprintf_r+0x176>
 8006bbc:	7863      	ldrb	r3, [r4, #1]
 8006bbe:	2b2a      	cmp	r3, #42	; 0x2a
 8006bc0:	d135      	bne.n	8006c2e <_vfiprintf_r+0x1ce>
 8006bc2:	9b03      	ldr	r3, [sp, #12]
 8006bc4:	3402      	adds	r4, #2
 8006bc6:	1d1a      	adds	r2, r3, #4
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	9203      	str	r2, [sp, #12]
 8006bcc:	2b00      	cmp	r3, #0
 8006bce:	bfb8      	it	lt
 8006bd0:	f04f 33ff 	movlt.w	r3, #4294967295
 8006bd4:	9305      	str	r3, [sp, #20]
 8006bd6:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8006cb0 <_vfiprintf_r+0x250>
 8006bda:	2203      	movs	r2, #3
 8006bdc:	4650      	mov	r0, sl
 8006bde:	7821      	ldrb	r1, [r4, #0]
 8006be0:	f7fe fff6 	bl	8005bd0 <memchr>
 8006be4:	b140      	cbz	r0, 8006bf8 <_vfiprintf_r+0x198>
 8006be6:	2340      	movs	r3, #64	; 0x40
 8006be8:	eba0 000a 	sub.w	r0, r0, sl
 8006bec:	fa03 f000 	lsl.w	r0, r3, r0
 8006bf0:	9b04      	ldr	r3, [sp, #16]
 8006bf2:	3401      	adds	r4, #1
 8006bf4:	4303      	orrs	r3, r0
 8006bf6:	9304      	str	r3, [sp, #16]
 8006bf8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006bfc:	2206      	movs	r2, #6
 8006bfe:	482d      	ldr	r0, [pc, #180]	; (8006cb4 <_vfiprintf_r+0x254>)
 8006c00:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006c04:	f7fe ffe4 	bl	8005bd0 <memchr>
 8006c08:	2800      	cmp	r0, #0
 8006c0a:	d03f      	beq.n	8006c8c <_vfiprintf_r+0x22c>
 8006c0c:	4b2a      	ldr	r3, [pc, #168]	; (8006cb8 <_vfiprintf_r+0x258>)
 8006c0e:	bb1b      	cbnz	r3, 8006c58 <_vfiprintf_r+0x1f8>
 8006c10:	9b03      	ldr	r3, [sp, #12]
 8006c12:	3307      	adds	r3, #7
 8006c14:	f023 0307 	bic.w	r3, r3, #7
 8006c18:	3308      	adds	r3, #8
 8006c1a:	9303      	str	r3, [sp, #12]
 8006c1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006c1e:	443b      	add	r3, r7
 8006c20:	9309      	str	r3, [sp, #36]	; 0x24
 8006c22:	e767      	b.n	8006af4 <_vfiprintf_r+0x94>
 8006c24:	460c      	mov	r4, r1
 8006c26:	2001      	movs	r0, #1
 8006c28:	fb0c 3202 	mla	r2, ip, r2, r3
 8006c2c:	e7a5      	b.n	8006b7a <_vfiprintf_r+0x11a>
 8006c2e:	2300      	movs	r3, #0
 8006c30:	f04f 0c0a 	mov.w	ip, #10
 8006c34:	4619      	mov	r1, r3
 8006c36:	3401      	adds	r4, #1
 8006c38:	9305      	str	r3, [sp, #20]
 8006c3a:	4620      	mov	r0, r4
 8006c3c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006c40:	3a30      	subs	r2, #48	; 0x30
 8006c42:	2a09      	cmp	r2, #9
 8006c44:	d903      	bls.n	8006c4e <_vfiprintf_r+0x1ee>
 8006c46:	2b00      	cmp	r3, #0
 8006c48:	d0c5      	beq.n	8006bd6 <_vfiprintf_r+0x176>
 8006c4a:	9105      	str	r1, [sp, #20]
 8006c4c:	e7c3      	b.n	8006bd6 <_vfiprintf_r+0x176>
 8006c4e:	4604      	mov	r4, r0
 8006c50:	2301      	movs	r3, #1
 8006c52:	fb0c 2101 	mla	r1, ip, r1, r2
 8006c56:	e7f0      	b.n	8006c3a <_vfiprintf_r+0x1da>
 8006c58:	ab03      	add	r3, sp, #12
 8006c5a:	9300      	str	r3, [sp, #0]
 8006c5c:	462a      	mov	r2, r5
 8006c5e:	4630      	mov	r0, r6
 8006c60:	4b16      	ldr	r3, [pc, #88]	; (8006cbc <_vfiprintf_r+0x25c>)
 8006c62:	a904      	add	r1, sp, #16
 8006c64:	f7fb fcbe 	bl	80025e4 <_printf_float>
 8006c68:	4607      	mov	r7, r0
 8006c6a:	1c78      	adds	r0, r7, #1
 8006c6c:	d1d6      	bne.n	8006c1c <_vfiprintf_r+0x1bc>
 8006c6e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006c70:	07d9      	lsls	r1, r3, #31
 8006c72:	d405      	bmi.n	8006c80 <_vfiprintf_r+0x220>
 8006c74:	89ab      	ldrh	r3, [r5, #12]
 8006c76:	059a      	lsls	r2, r3, #22
 8006c78:	d402      	bmi.n	8006c80 <_vfiprintf_r+0x220>
 8006c7a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006c7c:	f7fe ff28 	bl	8005ad0 <__retarget_lock_release_recursive>
 8006c80:	89ab      	ldrh	r3, [r5, #12]
 8006c82:	065b      	lsls	r3, r3, #25
 8006c84:	f53f af12 	bmi.w	8006aac <_vfiprintf_r+0x4c>
 8006c88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006c8a:	e711      	b.n	8006ab0 <_vfiprintf_r+0x50>
 8006c8c:	ab03      	add	r3, sp, #12
 8006c8e:	9300      	str	r3, [sp, #0]
 8006c90:	462a      	mov	r2, r5
 8006c92:	4630      	mov	r0, r6
 8006c94:	4b09      	ldr	r3, [pc, #36]	; (8006cbc <_vfiprintf_r+0x25c>)
 8006c96:	a904      	add	r1, sp, #16
 8006c98:	f7fb ff40 	bl	8002b1c <_printf_i>
 8006c9c:	e7e4      	b.n	8006c68 <_vfiprintf_r+0x208>
 8006c9e:	bf00      	nop
 8006ca0:	08007d74 	.word	0x08007d74
 8006ca4:	08007d94 	.word	0x08007d94
 8006ca8:	08007d54 	.word	0x08007d54
 8006cac:	08007f8c 	.word	0x08007f8c
 8006cb0:	08007f92 	.word	0x08007f92
 8006cb4:	08007f96 	.word	0x08007f96
 8006cb8:	080025e5 	.word	0x080025e5
 8006cbc:	08006a3b 	.word	0x08006a3b

08006cc0 <__svfiscanf_r>:
 8006cc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006cc4:	461d      	mov	r5, r3
 8006cc6:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8006cc8:	4606      	mov	r6, r0
 8006cca:	07df      	lsls	r7, r3, #31
 8006ccc:	460c      	mov	r4, r1
 8006cce:	4692      	mov	sl, r2
 8006cd0:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 8006cd4:	d405      	bmi.n	8006ce2 <__svfiscanf_r+0x22>
 8006cd6:	898b      	ldrh	r3, [r1, #12]
 8006cd8:	0598      	lsls	r0, r3, #22
 8006cda:	d402      	bmi.n	8006ce2 <__svfiscanf_r+0x22>
 8006cdc:	6d88      	ldr	r0, [r1, #88]	; 0x58
 8006cde:	f7fe fef6 	bl	8005ace <__retarget_lock_acquire_recursive>
 8006ce2:	2300      	movs	r3, #0
 8006ce4:	e9cd 3344 	strd	r3, r3, [sp, #272]	; 0x110
 8006ce8:	4ba6      	ldr	r3, [pc, #664]	; (8006f84 <__svfiscanf_r+0x2c4>)
 8006cea:	f10d 0804 	add.w	r8, sp, #4
 8006cee:	93a0      	str	r3, [sp, #640]	; 0x280
 8006cf0:	4ba5      	ldr	r3, [pc, #660]	; (8006f88 <__svfiscanf_r+0x2c8>)
 8006cf2:	4fa6      	ldr	r7, [pc, #664]	; (8006f8c <__svfiscanf_r+0x2cc>)
 8006cf4:	f8df 9298 	ldr.w	r9, [pc, #664]	; 8006f90 <__svfiscanf_r+0x2d0>
 8006cf8:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8006cfc:	93a1      	str	r3, [sp, #644]	; 0x284
 8006cfe:	9500      	str	r5, [sp, #0]
 8006d00:	f89a 3000 	ldrb.w	r3, [sl]
 8006d04:	2b00      	cmp	r3, #0
 8006d06:	f000 8173 	beq.w	8006ff0 <__svfiscanf_r+0x330>
 8006d0a:	5dd9      	ldrb	r1, [r3, r7]
 8006d0c:	f10a 0501 	add.w	r5, sl, #1
 8006d10:	f011 0108 	ands.w	r1, r1, #8
 8006d14:	d019      	beq.n	8006d4a <__svfiscanf_r+0x8a>
 8006d16:	6863      	ldr	r3, [r4, #4]
 8006d18:	2b00      	cmp	r3, #0
 8006d1a:	dd0f      	ble.n	8006d3c <__svfiscanf_r+0x7c>
 8006d1c:	6823      	ldr	r3, [r4, #0]
 8006d1e:	781a      	ldrb	r2, [r3, #0]
 8006d20:	5cba      	ldrb	r2, [r7, r2]
 8006d22:	0711      	lsls	r1, r2, #28
 8006d24:	d401      	bmi.n	8006d2a <__svfiscanf_r+0x6a>
 8006d26:	46aa      	mov	sl, r5
 8006d28:	e7ea      	b.n	8006d00 <__svfiscanf_r+0x40>
 8006d2a:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8006d2c:	3301      	adds	r3, #1
 8006d2e:	3201      	adds	r2, #1
 8006d30:	9245      	str	r2, [sp, #276]	; 0x114
 8006d32:	6862      	ldr	r2, [r4, #4]
 8006d34:	6023      	str	r3, [r4, #0]
 8006d36:	3a01      	subs	r2, #1
 8006d38:	6062      	str	r2, [r4, #4]
 8006d3a:	e7ec      	b.n	8006d16 <__svfiscanf_r+0x56>
 8006d3c:	4621      	mov	r1, r4
 8006d3e:	4630      	mov	r0, r6
 8006d40:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8006d42:	4798      	blx	r3
 8006d44:	2800      	cmp	r0, #0
 8006d46:	d0e9      	beq.n	8006d1c <__svfiscanf_r+0x5c>
 8006d48:	e7ed      	b.n	8006d26 <__svfiscanf_r+0x66>
 8006d4a:	2b25      	cmp	r3, #37	; 0x25
 8006d4c:	d012      	beq.n	8006d74 <__svfiscanf_r+0xb4>
 8006d4e:	469a      	mov	sl, r3
 8006d50:	6863      	ldr	r3, [r4, #4]
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	f340 8095 	ble.w	8006e82 <__svfiscanf_r+0x1c2>
 8006d58:	6822      	ldr	r2, [r4, #0]
 8006d5a:	7813      	ldrb	r3, [r2, #0]
 8006d5c:	4553      	cmp	r3, sl
 8006d5e:	f040 8147 	bne.w	8006ff0 <__svfiscanf_r+0x330>
 8006d62:	6863      	ldr	r3, [r4, #4]
 8006d64:	3201      	adds	r2, #1
 8006d66:	3b01      	subs	r3, #1
 8006d68:	6063      	str	r3, [r4, #4]
 8006d6a:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8006d6c:	6022      	str	r2, [r4, #0]
 8006d6e:	3301      	adds	r3, #1
 8006d70:	9345      	str	r3, [sp, #276]	; 0x114
 8006d72:	e7d8      	b.n	8006d26 <__svfiscanf_r+0x66>
 8006d74:	9141      	str	r1, [sp, #260]	; 0x104
 8006d76:	9143      	str	r1, [sp, #268]	; 0x10c
 8006d78:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8006d7c:	220a      	movs	r2, #10
 8006d7e:	2b2a      	cmp	r3, #42	; 0x2a
 8006d80:	bf02      	ittt	eq
 8006d82:	2310      	moveq	r3, #16
 8006d84:	f10a 0502 	addeq.w	r5, sl, #2
 8006d88:	9341      	streq	r3, [sp, #260]	; 0x104
 8006d8a:	46aa      	mov	sl, r5
 8006d8c:	f81a 1b01 	ldrb.w	r1, [sl], #1
 8006d90:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8006d94:	2b09      	cmp	r3, #9
 8006d96:	d91e      	bls.n	8006dd6 <__svfiscanf_r+0x116>
 8006d98:	2203      	movs	r2, #3
 8006d9a:	487d      	ldr	r0, [pc, #500]	; (8006f90 <__svfiscanf_r+0x2d0>)
 8006d9c:	f7fe ff18 	bl	8005bd0 <memchr>
 8006da0:	b140      	cbz	r0, 8006db4 <__svfiscanf_r+0xf4>
 8006da2:	2301      	movs	r3, #1
 8006da4:	4655      	mov	r5, sl
 8006da6:	eba0 0009 	sub.w	r0, r0, r9
 8006daa:	fa03 f000 	lsl.w	r0, r3, r0
 8006dae:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006db0:	4318      	orrs	r0, r3
 8006db2:	9041      	str	r0, [sp, #260]	; 0x104
 8006db4:	f815 3b01 	ldrb.w	r3, [r5], #1
 8006db8:	2b78      	cmp	r3, #120	; 0x78
 8006dba:	d807      	bhi.n	8006dcc <__svfiscanf_r+0x10c>
 8006dbc:	2b57      	cmp	r3, #87	; 0x57
 8006dbe:	d811      	bhi.n	8006de4 <__svfiscanf_r+0x124>
 8006dc0:	2b25      	cmp	r3, #37	; 0x25
 8006dc2:	d0c4      	beq.n	8006d4e <__svfiscanf_r+0x8e>
 8006dc4:	d858      	bhi.n	8006e78 <__svfiscanf_r+0x1b8>
 8006dc6:	2b00      	cmp	r3, #0
 8006dc8:	f000 80c8 	beq.w	8006f5c <__svfiscanf_r+0x29c>
 8006dcc:	2303      	movs	r3, #3
 8006dce:	9347      	str	r3, [sp, #284]	; 0x11c
 8006dd0:	230a      	movs	r3, #10
 8006dd2:	9342      	str	r3, [sp, #264]	; 0x108
 8006dd4:	e07c      	b.n	8006ed0 <__svfiscanf_r+0x210>
 8006dd6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8006dd8:	4655      	mov	r5, sl
 8006dda:	fb02 1103 	mla	r1, r2, r3, r1
 8006dde:	3930      	subs	r1, #48	; 0x30
 8006de0:	9143      	str	r1, [sp, #268]	; 0x10c
 8006de2:	e7d2      	b.n	8006d8a <__svfiscanf_r+0xca>
 8006de4:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 8006de8:	2a20      	cmp	r2, #32
 8006dea:	d8ef      	bhi.n	8006dcc <__svfiscanf_r+0x10c>
 8006dec:	a101      	add	r1, pc, #4	; (adr r1, 8006df4 <__svfiscanf_r+0x134>)
 8006dee:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8006df2:	bf00      	nop
 8006df4:	08006ebb 	.word	0x08006ebb
 8006df8:	08006dcd 	.word	0x08006dcd
 8006dfc:	08006dcd 	.word	0x08006dcd
 8006e00:	08006f19 	.word	0x08006f19
 8006e04:	08006dcd 	.word	0x08006dcd
 8006e08:	08006dcd 	.word	0x08006dcd
 8006e0c:	08006dcd 	.word	0x08006dcd
 8006e10:	08006dcd 	.word	0x08006dcd
 8006e14:	08006dcd 	.word	0x08006dcd
 8006e18:	08006dcd 	.word	0x08006dcd
 8006e1c:	08006dcd 	.word	0x08006dcd
 8006e20:	08006f2f 	.word	0x08006f2f
 8006e24:	08006f05 	.word	0x08006f05
 8006e28:	08006e7f 	.word	0x08006e7f
 8006e2c:	08006e7f 	.word	0x08006e7f
 8006e30:	08006e7f 	.word	0x08006e7f
 8006e34:	08006dcd 	.word	0x08006dcd
 8006e38:	08006f09 	.word	0x08006f09
 8006e3c:	08006dcd 	.word	0x08006dcd
 8006e40:	08006dcd 	.word	0x08006dcd
 8006e44:	08006dcd 	.word	0x08006dcd
 8006e48:	08006dcd 	.word	0x08006dcd
 8006e4c:	08006f3f 	.word	0x08006f3f
 8006e50:	08006f11 	.word	0x08006f11
 8006e54:	08006eb3 	.word	0x08006eb3
 8006e58:	08006dcd 	.word	0x08006dcd
 8006e5c:	08006dcd 	.word	0x08006dcd
 8006e60:	08006f3b 	.word	0x08006f3b
 8006e64:	08006dcd 	.word	0x08006dcd
 8006e68:	08006f05 	.word	0x08006f05
 8006e6c:	08006dcd 	.word	0x08006dcd
 8006e70:	08006dcd 	.word	0x08006dcd
 8006e74:	08006ebb 	.word	0x08006ebb
 8006e78:	3b45      	subs	r3, #69	; 0x45
 8006e7a:	2b02      	cmp	r3, #2
 8006e7c:	d8a6      	bhi.n	8006dcc <__svfiscanf_r+0x10c>
 8006e7e:	2305      	movs	r3, #5
 8006e80:	e025      	b.n	8006ece <__svfiscanf_r+0x20e>
 8006e82:	4621      	mov	r1, r4
 8006e84:	4630      	mov	r0, r6
 8006e86:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8006e88:	4798      	blx	r3
 8006e8a:	2800      	cmp	r0, #0
 8006e8c:	f43f af64 	beq.w	8006d58 <__svfiscanf_r+0x98>
 8006e90:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006e92:	07da      	lsls	r2, r3, #31
 8006e94:	f140 80a4 	bpl.w	8006fe0 <__svfiscanf_r+0x320>
 8006e98:	9844      	ldr	r0, [sp, #272]	; 0x110
 8006e9a:	2800      	cmp	r0, #0
 8006e9c:	d067      	beq.n	8006f6e <__svfiscanf_r+0x2ae>
 8006e9e:	89a3      	ldrh	r3, [r4, #12]
 8006ea0:	f013 0f40 	tst.w	r3, #64	; 0x40
 8006ea4:	bf18      	it	ne
 8006ea6:	f04f 30ff 	movne.w	r0, #4294967295
 8006eaa:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 8006eae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006eb2:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8006eb4:	f042 0220 	orr.w	r2, r2, #32
 8006eb8:	9241      	str	r2, [sp, #260]	; 0x104
 8006eba:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8006ebc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006ec0:	9241      	str	r2, [sp, #260]	; 0x104
 8006ec2:	2210      	movs	r2, #16
 8006ec4:	2b6f      	cmp	r3, #111	; 0x6f
 8006ec6:	bf34      	ite	cc
 8006ec8:	2303      	movcc	r3, #3
 8006eca:	2304      	movcs	r3, #4
 8006ecc:	9242      	str	r2, [sp, #264]	; 0x108
 8006ece:	9347      	str	r3, [sp, #284]	; 0x11c
 8006ed0:	6863      	ldr	r3, [r4, #4]
 8006ed2:	2b00      	cmp	r3, #0
 8006ed4:	dd4e      	ble.n	8006f74 <__svfiscanf_r+0x2b4>
 8006ed6:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006ed8:	065b      	lsls	r3, r3, #25
 8006eda:	d404      	bmi.n	8006ee6 <__svfiscanf_r+0x226>
 8006edc:	6823      	ldr	r3, [r4, #0]
 8006ede:	781a      	ldrb	r2, [r3, #0]
 8006ee0:	5cba      	ldrb	r2, [r7, r2]
 8006ee2:	0710      	lsls	r0, r2, #28
 8006ee4:	d456      	bmi.n	8006f94 <__svfiscanf_r+0x2d4>
 8006ee6:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8006ee8:	2b02      	cmp	r3, #2
 8006eea:	dc65      	bgt.n	8006fb8 <__svfiscanf_r+0x2f8>
 8006eec:	466b      	mov	r3, sp
 8006eee:	4622      	mov	r2, r4
 8006ef0:	4630      	mov	r0, r6
 8006ef2:	a941      	add	r1, sp, #260	; 0x104
 8006ef4:	f000 f8b2 	bl	800705c <_scanf_chars>
 8006ef8:	2801      	cmp	r0, #1
 8006efa:	d079      	beq.n	8006ff0 <__svfiscanf_r+0x330>
 8006efc:	2802      	cmp	r0, #2
 8006efe:	f47f af12 	bne.w	8006d26 <__svfiscanf_r+0x66>
 8006f02:	e7c5      	b.n	8006e90 <__svfiscanf_r+0x1d0>
 8006f04:	220a      	movs	r2, #10
 8006f06:	e7dd      	b.n	8006ec4 <__svfiscanf_r+0x204>
 8006f08:	2300      	movs	r3, #0
 8006f0a:	9342      	str	r3, [sp, #264]	; 0x108
 8006f0c:	2303      	movs	r3, #3
 8006f0e:	e7de      	b.n	8006ece <__svfiscanf_r+0x20e>
 8006f10:	2308      	movs	r3, #8
 8006f12:	9342      	str	r3, [sp, #264]	; 0x108
 8006f14:	2304      	movs	r3, #4
 8006f16:	e7da      	b.n	8006ece <__svfiscanf_r+0x20e>
 8006f18:	4629      	mov	r1, r5
 8006f1a:	4640      	mov	r0, r8
 8006f1c:	f000 fa9c 	bl	8007458 <__sccl>
 8006f20:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006f22:	4605      	mov	r5, r0
 8006f24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006f28:	9341      	str	r3, [sp, #260]	; 0x104
 8006f2a:	2301      	movs	r3, #1
 8006f2c:	e7cf      	b.n	8006ece <__svfiscanf_r+0x20e>
 8006f2e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006f30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006f34:	9341      	str	r3, [sp, #260]	; 0x104
 8006f36:	2300      	movs	r3, #0
 8006f38:	e7c9      	b.n	8006ece <__svfiscanf_r+0x20e>
 8006f3a:	2302      	movs	r3, #2
 8006f3c:	e7c7      	b.n	8006ece <__svfiscanf_r+0x20e>
 8006f3e:	9841      	ldr	r0, [sp, #260]	; 0x104
 8006f40:	06c3      	lsls	r3, r0, #27
 8006f42:	f53f aef0 	bmi.w	8006d26 <__svfiscanf_r+0x66>
 8006f46:	9b00      	ldr	r3, [sp, #0]
 8006f48:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8006f4a:	1d19      	adds	r1, r3, #4
 8006f4c:	9100      	str	r1, [sp, #0]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	f010 0f01 	tst.w	r0, #1
 8006f54:	bf14      	ite	ne
 8006f56:	801a      	strhne	r2, [r3, #0]
 8006f58:	601a      	streq	r2, [r3, #0]
 8006f5a:	e6e4      	b.n	8006d26 <__svfiscanf_r+0x66>
 8006f5c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006f5e:	07d8      	lsls	r0, r3, #31
 8006f60:	d405      	bmi.n	8006f6e <__svfiscanf_r+0x2ae>
 8006f62:	89a3      	ldrh	r3, [r4, #12]
 8006f64:	0599      	lsls	r1, r3, #22
 8006f66:	d402      	bmi.n	8006f6e <__svfiscanf_r+0x2ae>
 8006f68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006f6a:	f7fe fdb1 	bl	8005ad0 <__retarget_lock_release_recursive>
 8006f6e:	f04f 30ff 	mov.w	r0, #4294967295
 8006f72:	e79a      	b.n	8006eaa <__svfiscanf_r+0x1ea>
 8006f74:	4621      	mov	r1, r4
 8006f76:	4630      	mov	r0, r6
 8006f78:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8006f7a:	4798      	blx	r3
 8006f7c:	2800      	cmp	r0, #0
 8006f7e:	d0aa      	beq.n	8006ed6 <__svfiscanf_r+0x216>
 8006f80:	e786      	b.n	8006e90 <__svfiscanf_r+0x1d0>
 8006f82:	bf00      	nop
 8006f84:	080076d1 	.word	0x080076d1
 8006f88:	08007315 	.word	0x08007315
 8006f8c:	08007bc1 	.word	0x08007bc1
 8006f90:	08007f92 	.word	0x08007f92
 8006f94:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8006f96:	3201      	adds	r2, #1
 8006f98:	9245      	str	r2, [sp, #276]	; 0x114
 8006f9a:	6862      	ldr	r2, [r4, #4]
 8006f9c:	3a01      	subs	r2, #1
 8006f9e:	2a00      	cmp	r2, #0
 8006fa0:	6062      	str	r2, [r4, #4]
 8006fa2:	dd02      	ble.n	8006faa <__svfiscanf_r+0x2ea>
 8006fa4:	3301      	adds	r3, #1
 8006fa6:	6023      	str	r3, [r4, #0]
 8006fa8:	e798      	b.n	8006edc <__svfiscanf_r+0x21c>
 8006faa:	4621      	mov	r1, r4
 8006fac:	4630      	mov	r0, r6
 8006fae:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8006fb0:	4798      	blx	r3
 8006fb2:	2800      	cmp	r0, #0
 8006fb4:	d092      	beq.n	8006edc <__svfiscanf_r+0x21c>
 8006fb6:	e76b      	b.n	8006e90 <__svfiscanf_r+0x1d0>
 8006fb8:	2b04      	cmp	r3, #4
 8006fba:	dc06      	bgt.n	8006fca <__svfiscanf_r+0x30a>
 8006fbc:	466b      	mov	r3, sp
 8006fbe:	4622      	mov	r2, r4
 8006fc0:	4630      	mov	r0, r6
 8006fc2:	a941      	add	r1, sp, #260	; 0x104
 8006fc4:	f000 f8a4 	bl	8007110 <_scanf_i>
 8006fc8:	e796      	b.n	8006ef8 <__svfiscanf_r+0x238>
 8006fca:	4b0f      	ldr	r3, [pc, #60]	; (8007008 <__svfiscanf_r+0x348>)
 8006fcc:	2b00      	cmp	r3, #0
 8006fce:	f43f aeaa 	beq.w	8006d26 <__svfiscanf_r+0x66>
 8006fd2:	466b      	mov	r3, sp
 8006fd4:	4622      	mov	r2, r4
 8006fd6:	4630      	mov	r0, r6
 8006fd8:	a941      	add	r1, sp, #260	; 0x104
 8006fda:	f7fb fec5 	bl	8002d68 <_scanf_float>
 8006fde:	e78b      	b.n	8006ef8 <__svfiscanf_r+0x238>
 8006fe0:	89a3      	ldrh	r3, [r4, #12]
 8006fe2:	0599      	lsls	r1, r3, #22
 8006fe4:	f53f af58 	bmi.w	8006e98 <__svfiscanf_r+0x1d8>
 8006fe8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006fea:	f7fe fd71 	bl	8005ad0 <__retarget_lock_release_recursive>
 8006fee:	e753      	b.n	8006e98 <__svfiscanf_r+0x1d8>
 8006ff0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006ff2:	07da      	lsls	r2, r3, #31
 8006ff4:	d405      	bmi.n	8007002 <__svfiscanf_r+0x342>
 8006ff6:	89a3      	ldrh	r3, [r4, #12]
 8006ff8:	059b      	lsls	r3, r3, #22
 8006ffa:	d402      	bmi.n	8007002 <__svfiscanf_r+0x342>
 8006ffc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006ffe:	f7fe fd67 	bl	8005ad0 <__retarget_lock_release_recursive>
 8007002:	9844      	ldr	r0, [sp, #272]	; 0x110
 8007004:	e751      	b.n	8006eaa <__svfiscanf_r+0x1ea>
 8007006:	bf00      	nop
 8007008:	08002d69 	.word	0x08002d69

0800700c <_vfiscanf_r>:
 800700c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007010:	460c      	mov	r4, r1
 8007012:	4616      	mov	r6, r2
 8007014:	461f      	mov	r7, r3
 8007016:	4605      	mov	r5, r0
 8007018:	b118      	cbz	r0, 8007022 <_vfiscanf_r+0x16>
 800701a:	6983      	ldr	r3, [r0, #24]
 800701c:	b90b      	cbnz	r3, 8007022 <_vfiscanf_r+0x16>
 800701e:	f7fe f931 	bl	8005284 <__sinit>
 8007022:	4b0b      	ldr	r3, [pc, #44]	; (8007050 <_vfiscanf_r+0x44>)
 8007024:	429c      	cmp	r4, r3
 8007026:	d108      	bne.n	800703a <_vfiscanf_r+0x2e>
 8007028:	686c      	ldr	r4, [r5, #4]
 800702a:	463b      	mov	r3, r7
 800702c:	4632      	mov	r2, r6
 800702e:	4621      	mov	r1, r4
 8007030:	4628      	mov	r0, r5
 8007032:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007036:	f7ff be43 	b.w	8006cc0 <__svfiscanf_r>
 800703a:	4b06      	ldr	r3, [pc, #24]	; (8007054 <_vfiscanf_r+0x48>)
 800703c:	429c      	cmp	r4, r3
 800703e:	d101      	bne.n	8007044 <_vfiscanf_r+0x38>
 8007040:	68ac      	ldr	r4, [r5, #8]
 8007042:	e7f2      	b.n	800702a <_vfiscanf_r+0x1e>
 8007044:	4b04      	ldr	r3, [pc, #16]	; (8007058 <_vfiscanf_r+0x4c>)
 8007046:	429c      	cmp	r4, r3
 8007048:	bf08      	it	eq
 800704a:	68ec      	ldreq	r4, [r5, #12]
 800704c:	e7ed      	b.n	800702a <_vfiscanf_r+0x1e>
 800704e:	bf00      	nop
 8007050:	08007d74 	.word	0x08007d74
 8007054:	08007d94 	.word	0x08007d94
 8007058:	08007d54 	.word	0x08007d54

0800705c <_scanf_chars>:
 800705c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007060:	4615      	mov	r5, r2
 8007062:	688a      	ldr	r2, [r1, #8]
 8007064:	4680      	mov	r8, r0
 8007066:	460c      	mov	r4, r1
 8007068:	b932      	cbnz	r2, 8007078 <_scanf_chars+0x1c>
 800706a:	698a      	ldr	r2, [r1, #24]
 800706c:	2a00      	cmp	r2, #0
 800706e:	bf0c      	ite	eq
 8007070:	2201      	moveq	r2, #1
 8007072:	f04f 32ff 	movne.w	r2, #4294967295
 8007076:	608a      	str	r2, [r1, #8]
 8007078:	2700      	movs	r7, #0
 800707a:	6822      	ldr	r2, [r4, #0]
 800707c:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800710c <_scanf_chars+0xb0>
 8007080:	06d1      	lsls	r1, r2, #27
 8007082:	bf5f      	itttt	pl
 8007084:	681a      	ldrpl	r2, [r3, #0]
 8007086:	1d11      	addpl	r1, r2, #4
 8007088:	6019      	strpl	r1, [r3, #0]
 800708a:	6816      	ldrpl	r6, [r2, #0]
 800708c:	69a0      	ldr	r0, [r4, #24]
 800708e:	b188      	cbz	r0, 80070b4 <_scanf_chars+0x58>
 8007090:	2801      	cmp	r0, #1
 8007092:	d107      	bne.n	80070a4 <_scanf_chars+0x48>
 8007094:	682b      	ldr	r3, [r5, #0]
 8007096:	781a      	ldrb	r2, [r3, #0]
 8007098:	6963      	ldr	r3, [r4, #20]
 800709a:	5c9b      	ldrb	r3, [r3, r2]
 800709c:	b953      	cbnz	r3, 80070b4 <_scanf_chars+0x58>
 800709e:	2f00      	cmp	r7, #0
 80070a0:	d031      	beq.n	8007106 <_scanf_chars+0xaa>
 80070a2:	e022      	b.n	80070ea <_scanf_chars+0x8e>
 80070a4:	2802      	cmp	r0, #2
 80070a6:	d120      	bne.n	80070ea <_scanf_chars+0x8e>
 80070a8:	682b      	ldr	r3, [r5, #0]
 80070aa:	781b      	ldrb	r3, [r3, #0]
 80070ac:	f813 3009 	ldrb.w	r3, [r3, r9]
 80070b0:	071b      	lsls	r3, r3, #28
 80070b2:	d41a      	bmi.n	80070ea <_scanf_chars+0x8e>
 80070b4:	6823      	ldr	r3, [r4, #0]
 80070b6:	3701      	adds	r7, #1
 80070b8:	06da      	lsls	r2, r3, #27
 80070ba:	bf5e      	ittt	pl
 80070bc:	682b      	ldrpl	r3, [r5, #0]
 80070be:	781b      	ldrbpl	r3, [r3, #0]
 80070c0:	f806 3b01 	strbpl.w	r3, [r6], #1
 80070c4:	682a      	ldr	r2, [r5, #0]
 80070c6:	686b      	ldr	r3, [r5, #4]
 80070c8:	3201      	adds	r2, #1
 80070ca:	602a      	str	r2, [r5, #0]
 80070cc:	68a2      	ldr	r2, [r4, #8]
 80070ce:	3b01      	subs	r3, #1
 80070d0:	3a01      	subs	r2, #1
 80070d2:	606b      	str	r3, [r5, #4]
 80070d4:	60a2      	str	r2, [r4, #8]
 80070d6:	b142      	cbz	r2, 80070ea <_scanf_chars+0x8e>
 80070d8:	2b00      	cmp	r3, #0
 80070da:	dcd7      	bgt.n	800708c <_scanf_chars+0x30>
 80070dc:	4629      	mov	r1, r5
 80070de:	4640      	mov	r0, r8
 80070e0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80070e4:	4798      	blx	r3
 80070e6:	2800      	cmp	r0, #0
 80070e8:	d0d0      	beq.n	800708c <_scanf_chars+0x30>
 80070ea:	6823      	ldr	r3, [r4, #0]
 80070ec:	f013 0310 	ands.w	r3, r3, #16
 80070f0:	d105      	bne.n	80070fe <_scanf_chars+0xa2>
 80070f2:	68e2      	ldr	r2, [r4, #12]
 80070f4:	3201      	adds	r2, #1
 80070f6:	60e2      	str	r2, [r4, #12]
 80070f8:	69a2      	ldr	r2, [r4, #24]
 80070fa:	b102      	cbz	r2, 80070fe <_scanf_chars+0xa2>
 80070fc:	7033      	strb	r3, [r6, #0]
 80070fe:	2000      	movs	r0, #0
 8007100:	6923      	ldr	r3, [r4, #16]
 8007102:	443b      	add	r3, r7
 8007104:	6123      	str	r3, [r4, #16]
 8007106:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800710a:	bf00      	nop
 800710c:	08007bc1 	.word	0x08007bc1

08007110 <_scanf_i>:
 8007110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007114:	460c      	mov	r4, r1
 8007116:	4698      	mov	r8, r3
 8007118:	4b75      	ldr	r3, [pc, #468]	; (80072f0 <_scanf_i+0x1e0>)
 800711a:	b087      	sub	sp, #28
 800711c:	4682      	mov	sl, r0
 800711e:	4616      	mov	r6, r2
 8007120:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8007124:	ab03      	add	r3, sp, #12
 8007126:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800712a:	4b72      	ldr	r3, [pc, #456]	; (80072f4 <_scanf_i+0x1e4>)
 800712c:	69a1      	ldr	r1, [r4, #24]
 800712e:	4a72      	ldr	r2, [pc, #456]	; (80072f8 <_scanf_i+0x1e8>)
 8007130:	4627      	mov	r7, r4
 8007132:	2903      	cmp	r1, #3
 8007134:	bf18      	it	ne
 8007136:	461a      	movne	r2, r3
 8007138:	68a3      	ldr	r3, [r4, #8]
 800713a:	9201      	str	r2, [sp, #4]
 800713c:	1e5a      	subs	r2, r3, #1
 800713e:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8007142:	bf81      	itttt	hi
 8007144:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8007148:	eb03 0905 	addhi.w	r9, r3, r5
 800714c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8007150:	60a3      	strhi	r3, [r4, #8]
 8007152:	f857 3b1c 	ldr.w	r3, [r7], #28
 8007156:	bf98      	it	ls
 8007158:	f04f 0900 	movls.w	r9, #0
 800715c:	463d      	mov	r5, r7
 800715e:	f04f 0b00 	mov.w	fp, #0
 8007162:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8007166:	6023      	str	r3, [r4, #0]
 8007168:	6831      	ldr	r1, [r6, #0]
 800716a:	ab03      	add	r3, sp, #12
 800716c:	2202      	movs	r2, #2
 800716e:	7809      	ldrb	r1, [r1, #0]
 8007170:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8007174:	f7fe fd2c 	bl	8005bd0 <memchr>
 8007178:	b328      	cbz	r0, 80071c6 <_scanf_i+0xb6>
 800717a:	f1bb 0f01 	cmp.w	fp, #1
 800717e:	d159      	bne.n	8007234 <_scanf_i+0x124>
 8007180:	6862      	ldr	r2, [r4, #4]
 8007182:	b92a      	cbnz	r2, 8007190 <_scanf_i+0x80>
 8007184:	2308      	movs	r3, #8
 8007186:	6822      	ldr	r2, [r4, #0]
 8007188:	6063      	str	r3, [r4, #4]
 800718a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800718e:	6022      	str	r2, [r4, #0]
 8007190:	6822      	ldr	r2, [r4, #0]
 8007192:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 8007196:	6022      	str	r2, [r4, #0]
 8007198:	68a2      	ldr	r2, [r4, #8]
 800719a:	1e51      	subs	r1, r2, #1
 800719c:	60a1      	str	r1, [r4, #8]
 800719e:	b192      	cbz	r2, 80071c6 <_scanf_i+0xb6>
 80071a0:	6832      	ldr	r2, [r6, #0]
 80071a2:	1c51      	adds	r1, r2, #1
 80071a4:	6031      	str	r1, [r6, #0]
 80071a6:	7812      	ldrb	r2, [r2, #0]
 80071a8:	f805 2b01 	strb.w	r2, [r5], #1
 80071ac:	6872      	ldr	r2, [r6, #4]
 80071ae:	3a01      	subs	r2, #1
 80071b0:	2a00      	cmp	r2, #0
 80071b2:	6072      	str	r2, [r6, #4]
 80071b4:	dc07      	bgt.n	80071c6 <_scanf_i+0xb6>
 80071b6:	4631      	mov	r1, r6
 80071b8:	4650      	mov	r0, sl
 80071ba:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 80071be:	4790      	blx	r2
 80071c0:	2800      	cmp	r0, #0
 80071c2:	f040 8085 	bne.w	80072d0 <_scanf_i+0x1c0>
 80071c6:	f10b 0b01 	add.w	fp, fp, #1
 80071ca:	f1bb 0f03 	cmp.w	fp, #3
 80071ce:	d1cb      	bne.n	8007168 <_scanf_i+0x58>
 80071d0:	6863      	ldr	r3, [r4, #4]
 80071d2:	b90b      	cbnz	r3, 80071d8 <_scanf_i+0xc8>
 80071d4:	230a      	movs	r3, #10
 80071d6:	6063      	str	r3, [r4, #4]
 80071d8:	6863      	ldr	r3, [r4, #4]
 80071da:	4948      	ldr	r1, [pc, #288]	; (80072fc <_scanf_i+0x1ec>)
 80071dc:	6960      	ldr	r0, [r4, #20]
 80071de:	1ac9      	subs	r1, r1, r3
 80071e0:	f000 f93a 	bl	8007458 <__sccl>
 80071e4:	f04f 0b00 	mov.w	fp, #0
 80071e8:	68a3      	ldr	r3, [r4, #8]
 80071ea:	6822      	ldr	r2, [r4, #0]
 80071ec:	2b00      	cmp	r3, #0
 80071ee:	d03d      	beq.n	800726c <_scanf_i+0x15c>
 80071f0:	6831      	ldr	r1, [r6, #0]
 80071f2:	6960      	ldr	r0, [r4, #20]
 80071f4:	f891 c000 	ldrb.w	ip, [r1]
 80071f8:	f810 000c 	ldrb.w	r0, [r0, ip]
 80071fc:	2800      	cmp	r0, #0
 80071fe:	d035      	beq.n	800726c <_scanf_i+0x15c>
 8007200:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 8007204:	d124      	bne.n	8007250 <_scanf_i+0x140>
 8007206:	0510      	lsls	r0, r2, #20
 8007208:	d522      	bpl.n	8007250 <_scanf_i+0x140>
 800720a:	f10b 0b01 	add.w	fp, fp, #1
 800720e:	f1b9 0f00 	cmp.w	r9, #0
 8007212:	d003      	beq.n	800721c <_scanf_i+0x10c>
 8007214:	3301      	adds	r3, #1
 8007216:	f109 39ff 	add.w	r9, r9, #4294967295
 800721a:	60a3      	str	r3, [r4, #8]
 800721c:	6873      	ldr	r3, [r6, #4]
 800721e:	3b01      	subs	r3, #1
 8007220:	2b00      	cmp	r3, #0
 8007222:	6073      	str	r3, [r6, #4]
 8007224:	dd1b      	ble.n	800725e <_scanf_i+0x14e>
 8007226:	6833      	ldr	r3, [r6, #0]
 8007228:	3301      	adds	r3, #1
 800722a:	6033      	str	r3, [r6, #0]
 800722c:	68a3      	ldr	r3, [r4, #8]
 800722e:	3b01      	subs	r3, #1
 8007230:	60a3      	str	r3, [r4, #8]
 8007232:	e7d9      	b.n	80071e8 <_scanf_i+0xd8>
 8007234:	f1bb 0f02 	cmp.w	fp, #2
 8007238:	d1ae      	bne.n	8007198 <_scanf_i+0x88>
 800723a:	6822      	ldr	r2, [r4, #0]
 800723c:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8007240:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8007244:	d1bf      	bne.n	80071c6 <_scanf_i+0xb6>
 8007246:	2310      	movs	r3, #16
 8007248:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800724c:	6063      	str	r3, [r4, #4]
 800724e:	e7a2      	b.n	8007196 <_scanf_i+0x86>
 8007250:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 8007254:	6022      	str	r2, [r4, #0]
 8007256:	780b      	ldrb	r3, [r1, #0]
 8007258:	f805 3b01 	strb.w	r3, [r5], #1
 800725c:	e7de      	b.n	800721c <_scanf_i+0x10c>
 800725e:	4631      	mov	r1, r6
 8007260:	4650      	mov	r0, sl
 8007262:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8007266:	4798      	blx	r3
 8007268:	2800      	cmp	r0, #0
 800726a:	d0df      	beq.n	800722c <_scanf_i+0x11c>
 800726c:	6823      	ldr	r3, [r4, #0]
 800726e:	05db      	lsls	r3, r3, #23
 8007270:	d50d      	bpl.n	800728e <_scanf_i+0x17e>
 8007272:	42bd      	cmp	r5, r7
 8007274:	d909      	bls.n	800728a <_scanf_i+0x17a>
 8007276:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800727a:	4632      	mov	r2, r6
 800727c:	4650      	mov	r0, sl
 800727e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8007282:	f105 39ff 	add.w	r9, r5, #4294967295
 8007286:	4798      	blx	r3
 8007288:	464d      	mov	r5, r9
 800728a:	42bd      	cmp	r5, r7
 800728c:	d02d      	beq.n	80072ea <_scanf_i+0x1da>
 800728e:	6822      	ldr	r2, [r4, #0]
 8007290:	f012 0210 	ands.w	r2, r2, #16
 8007294:	d113      	bne.n	80072be <_scanf_i+0x1ae>
 8007296:	702a      	strb	r2, [r5, #0]
 8007298:	4639      	mov	r1, r7
 800729a:	6863      	ldr	r3, [r4, #4]
 800729c:	4650      	mov	r0, sl
 800729e:	9e01      	ldr	r6, [sp, #4]
 80072a0:	47b0      	blx	r6
 80072a2:	6821      	ldr	r1, [r4, #0]
 80072a4:	f8d8 3000 	ldr.w	r3, [r8]
 80072a8:	f011 0f20 	tst.w	r1, #32
 80072ac:	d013      	beq.n	80072d6 <_scanf_i+0x1c6>
 80072ae:	1d1a      	adds	r2, r3, #4
 80072b0:	f8c8 2000 	str.w	r2, [r8]
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	6018      	str	r0, [r3, #0]
 80072b8:	68e3      	ldr	r3, [r4, #12]
 80072ba:	3301      	adds	r3, #1
 80072bc:	60e3      	str	r3, [r4, #12]
 80072be:	2000      	movs	r0, #0
 80072c0:	1bed      	subs	r5, r5, r7
 80072c2:	44ab      	add	fp, r5
 80072c4:	6925      	ldr	r5, [r4, #16]
 80072c6:	445d      	add	r5, fp
 80072c8:	6125      	str	r5, [r4, #16]
 80072ca:	b007      	add	sp, #28
 80072cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072d0:	f04f 0b00 	mov.w	fp, #0
 80072d4:	e7ca      	b.n	800726c <_scanf_i+0x15c>
 80072d6:	1d1a      	adds	r2, r3, #4
 80072d8:	f8c8 2000 	str.w	r2, [r8]
 80072dc:	681b      	ldr	r3, [r3, #0]
 80072de:	f011 0f01 	tst.w	r1, #1
 80072e2:	bf14      	ite	ne
 80072e4:	8018      	strhne	r0, [r3, #0]
 80072e6:	6018      	streq	r0, [r3, #0]
 80072e8:	e7e6      	b.n	80072b8 <_scanf_i+0x1a8>
 80072ea:	2001      	movs	r0, #1
 80072ec:	e7ed      	b.n	80072ca <_scanf_i+0x1ba>
 80072ee:	bf00      	nop
 80072f0:	08007b10 	.word	0x08007b10
 80072f4:	0800765d 	.word	0x0800765d
 80072f8:	080041bd 	.word	0x080041bd
 80072fc:	08007fb6 	.word	0x08007fb6

08007300 <lflush>:
 8007300:	8983      	ldrh	r3, [r0, #12]
 8007302:	f003 0309 	and.w	r3, r3, #9
 8007306:	2b09      	cmp	r3, #9
 8007308:	d101      	bne.n	800730e <lflush+0xe>
 800730a:	f7fd bf51 	b.w	80051b0 <fflush>
 800730e:	2000      	movs	r0, #0
 8007310:	4770      	bx	lr
	...

08007314 <__srefill_r>:
 8007314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007316:	460c      	mov	r4, r1
 8007318:	4605      	mov	r5, r0
 800731a:	b118      	cbz	r0, 8007324 <__srefill_r+0x10>
 800731c:	6983      	ldr	r3, [r0, #24]
 800731e:	b90b      	cbnz	r3, 8007324 <__srefill_r+0x10>
 8007320:	f7fd ffb0 	bl	8005284 <__sinit>
 8007324:	4b3c      	ldr	r3, [pc, #240]	; (8007418 <__srefill_r+0x104>)
 8007326:	429c      	cmp	r4, r3
 8007328:	d10a      	bne.n	8007340 <__srefill_r+0x2c>
 800732a:	686c      	ldr	r4, [r5, #4]
 800732c:	2300      	movs	r3, #0
 800732e:	6063      	str	r3, [r4, #4]
 8007330:	89a3      	ldrh	r3, [r4, #12]
 8007332:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007336:	069e      	lsls	r6, r3, #26
 8007338:	d50c      	bpl.n	8007354 <__srefill_r+0x40>
 800733a:	f04f 30ff 	mov.w	r0, #4294967295
 800733e:	e067      	b.n	8007410 <__srefill_r+0xfc>
 8007340:	4b36      	ldr	r3, [pc, #216]	; (800741c <__srefill_r+0x108>)
 8007342:	429c      	cmp	r4, r3
 8007344:	d101      	bne.n	800734a <__srefill_r+0x36>
 8007346:	68ac      	ldr	r4, [r5, #8]
 8007348:	e7f0      	b.n	800732c <__srefill_r+0x18>
 800734a:	4b35      	ldr	r3, [pc, #212]	; (8007420 <__srefill_r+0x10c>)
 800734c:	429c      	cmp	r4, r3
 800734e:	bf08      	it	eq
 8007350:	68ec      	ldreq	r4, [r5, #12]
 8007352:	e7eb      	b.n	800732c <__srefill_r+0x18>
 8007354:	0758      	lsls	r0, r3, #29
 8007356:	d449      	bmi.n	80073ec <__srefill_r+0xd8>
 8007358:	06d9      	lsls	r1, r3, #27
 800735a:	d405      	bmi.n	8007368 <__srefill_r+0x54>
 800735c:	2309      	movs	r3, #9
 800735e:	602b      	str	r3, [r5, #0]
 8007360:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007364:	81a3      	strh	r3, [r4, #12]
 8007366:	e7e8      	b.n	800733a <__srefill_r+0x26>
 8007368:	071a      	lsls	r2, r3, #28
 800736a:	d50b      	bpl.n	8007384 <__srefill_r+0x70>
 800736c:	4621      	mov	r1, r4
 800736e:	4628      	mov	r0, r5
 8007370:	f7fd fee2 	bl	8005138 <_fflush_r>
 8007374:	2800      	cmp	r0, #0
 8007376:	d1e0      	bne.n	800733a <__srefill_r+0x26>
 8007378:	89a3      	ldrh	r3, [r4, #12]
 800737a:	60a0      	str	r0, [r4, #8]
 800737c:	f023 0308 	bic.w	r3, r3, #8
 8007380:	81a3      	strh	r3, [r4, #12]
 8007382:	61a0      	str	r0, [r4, #24]
 8007384:	89a3      	ldrh	r3, [r4, #12]
 8007386:	f043 0304 	orr.w	r3, r3, #4
 800738a:	81a3      	strh	r3, [r4, #12]
 800738c:	6923      	ldr	r3, [r4, #16]
 800738e:	b91b      	cbnz	r3, 8007398 <__srefill_r+0x84>
 8007390:	4621      	mov	r1, r4
 8007392:	4628      	mov	r0, r5
 8007394:	f7fe fbc2 	bl	8005b1c <__smakebuf_r>
 8007398:	89a6      	ldrh	r6, [r4, #12]
 800739a:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 800739e:	07b3      	lsls	r3, r6, #30
 80073a0:	d00f      	beq.n	80073c2 <__srefill_r+0xae>
 80073a2:	2301      	movs	r3, #1
 80073a4:	81a3      	strh	r3, [r4, #12]
 80073a6:	4b1f      	ldr	r3, [pc, #124]	; (8007424 <__srefill_r+0x110>)
 80073a8:	491f      	ldr	r1, [pc, #124]	; (8007428 <__srefill_r+0x114>)
 80073aa:	6818      	ldr	r0, [r3, #0]
 80073ac:	f006 0609 	and.w	r6, r6, #9
 80073b0:	f7fd ffe6 	bl	8005380 <_fwalk>
 80073b4:	2e09      	cmp	r6, #9
 80073b6:	81a7      	strh	r7, [r4, #12]
 80073b8:	d103      	bne.n	80073c2 <__srefill_r+0xae>
 80073ba:	4621      	mov	r1, r4
 80073bc:	4628      	mov	r0, r5
 80073be:	f7fd fe39 	bl	8005034 <__sflush_r>
 80073c2:	6922      	ldr	r2, [r4, #16]
 80073c4:	4628      	mov	r0, r5
 80073c6:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80073c8:	6963      	ldr	r3, [r4, #20]
 80073ca:	6a21      	ldr	r1, [r4, #32]
 80073cc:	6022      	str	r2, [r4, #0]
 80073ce:	47b0      	blx	r6
 80073d0:	2800      	cmp	r0, #0
 80073d2:	6060      	str	r0, [r4, #4]
 80073d4:	dc1d      	bgt.n	8007412 <__srefill_r+0xfe>
 80073d6:	bf18      	it	ne
 80073d8:	2200      	movne	r2, #0
 80073da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80073de:	bf16      	itet	ne
 80073e0:	6062      	strne	r2, [r4, #4]
 80073e2:	f043 0320 	orreq.w	r3, r3, #32
 80073e6:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80073ea:	e7bb      	b.n	8007364 <__srefill_r+0x50>
 80073ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80073ee:	2900      	cmp	r1, #0
 80073f0:	d0cc      	beq.n	800738c <__srefill_r+0x78>
 80073f2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80073f6:	4299      	cmp	r1, r3
 80073f8:	d002      	beq.n	8007400 <__srefill_r+0xec>
 80073fa:	4628      	mov	r0, r5
 80073fc:	f7ff f8d0 	bl	80065a0 <_free_r>
 8007400:	2000      	movs	r0, #0
 8007402:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007404:	6360      	str	r0, [r4, #52]	; 0x34
 8007406:	6063      	str	r3, [r4, #4]
 8007408:	2b00      	cmp	r3, #0
 800740a:	d0bf      	beq.n	800738c <__srefill_r+0x78>
 800740c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800740e:	6023      	str	r3, [r4, #0]
 8007410:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007412:	2000      	movs	r0, #0
 8007414:	e7fc      	b.n	8007410 <__srefill_r+0xfc>
 8007416:	bf00      	nop
 8007418:	08007d74 	.word	0x08007d74
 800741c:	08007d94 	.word	0x08007d94
 8007420:	08007d54 	.word	0x08007d54
 8007424:	08007b34 	.word	0x08007b34
 8007428:	08007301 	.word	0x08007301

0800742c <nan>:
 800742c:	2000      	movs	r0, #0
 800742e:	4901      	ldr	r1, [pc, #4]	; (8007434 <nan+0x8>)
 8007430:	4770      	bx	lr
 8007432:	bf00      	nop
 8007434:	7ff80000 	.word	0x7ff80000

08007438 <_sbrk_r>:
 8007438:	b538      	push	{r3, r4, r5, lr}
 800743a:	2300      	movs	r3, #0
 800743c:	4d05      	ldr	r5, [pc, #20]	; (8007454 <_sbrk_r+0x1c>)
 800743e:	4604      	mov	r4, r0
 8007440:	4608      	mov	r0, r1
 8007442:	602b      	str	r3, [r5, #0]
 8007444:	f7f9 fdd8 	bl	8000ff8 <_sbrk>
 8007448:	1c43      	adds	r3, r0, #1
 800744a:	d102      	bne.n	8007452 <_sbrk_r+0x1a>
 800744c:	682b      	ldr	r3, [r5, #0]
 800744e:	b103      	cbz	r3, 8007452 <_sbrk_r+0x1a>
 8007450:	6023      	str	r3, [r4, #0]
 8007452:	bd38      	pop	{r3, r4, r5, pc}
 8007454:	20000258 	.word	0x20000258

08007458 <__sccl>:
 8007458:	b570      	push	{r4, r5, r6, lr}
 800745a:	780b      	ldrb	r3, [r1, #0]
 800745c:	4604      	mov	r4, r0
 800745e:	2b5e      	cmp	r3, #94	; 0x5e
 8007460:	bf13      	iteet	ne
 8007462:	2200      	movne	r2, #0
 8007464:	2201      	moveq	r2, #1
 8007466:	784b      	ldrbeq	r3, [r1, #1]
 8007468:	1c48      	addne	r0, r1, #1
 800746a:	bf08      	it	eq
 800746c:	1c88      	addeq	r0, r1, #2
 800746e:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8007472:	1e61      	subs	r1, r4, #1
 8007474:	f801 2f01 	strb.w	r2, [r1, #1]!
 8007478:	42a9      	cmp	r1, r5
 800747a:	d1fb      	bne.n	8007474 <__sccl+0x1c>
 800747c:	b90b      	cbnz	r3, 8007482 <__sccl+0x2a>
 800747e:	3801      	subs	r0, #1
 8007480:	bd70      	pop	{r4, r5, r6, pc}
 8007482:	f082 0201 	eor.w	r2, r2, #1
 8007486:	4605      	mov	r5, r0
 8007488:	54e2      	strb	r2, [r4, r3]
 800748a:	4628      	mov	r0, r5
 800748c:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007490:	292d      	cmp	r1, #45	; 0x2d
 8007492:	d006      	beq.n	80074a2 <__sccl+0x4a>
 8007494:	295d      	cmp	r1, #93	; 0x5d
 8007496:	d0f3      	beq.n	8007480 <__sccl+0x28>
 8007498:	b909      	cbnz	r1, 800749e <__sccl+0x46>
 800749a:	4628      	mov	r0, r5
 800749c:	e7f0      	b.n	8007480 <__sccl+0x28>
 800749e:	460b      	mov	r3, r1
 80074a0:	e7f1      	b.n	8007486 <__sccl+0x2e>
 80074a2:	786e      	ldrb	r6, [r5, #1]
 80074a4:	2e5d      	cmp	r6, #93	; 0x5d
 80074a6:	d0fa      	beq.n	800749e <__sccl+0x46>
 80074a8:	42b3      	cmp	r3, r6
 80074aa:	dcf8      	bgt.n	800749e <__sccl+0x46>
 80074ac:	4619      	mov	r1, r3
 80074ae:	3502      	adds	r5, #2
 80074b0:	3101      	adds	r1, #1
 80074b2:	428e      	cmp	r6, r1
 80074b4:	5462      	strb	r2, [r4, r1]
 80074b6:	dcfb      	bgt.n	80074b0 <__sccl+0x58>
 80074b8:	1af1      	subs	r1, r6, r3
 80074ba:	3901      	subs	r1, #1
 80074bc:	42b3      	cmp	r3, r6
 80074be:	bfa8      	it	ge
 80074c0:	2100      	movge	r1, #0
 80074c2:	1c58      	adds	r0, r3, #1
 80074c4:	1843      	adds	r3, r0, r1
 80074c6:	e7e0      	b.n	800748a <__sccl+0x32>

080074c8 <__sread>:
 80074c8:	b510      	push	{r4, lr}
 80074ca:	460c      	mov	r4, r1
 80074cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074d0:	f000 fa80 	bl	80079d4 <_read_r>
 80074d4:	2800      	cmp	r0, #0
 80074d6:	bfab      	itete	ge
 80074d8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80074da:	89a3      	ldrhlt	r3, [r4, #12]
 80074dc:	181b      	addge	r3, r3, r0
 80074de:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80074e2:	bfac      	ite	ge
 80074e4:	6563      	strge	r3, [r4, #84]	; 0x54
 80074e6:	81a3      	strhlt	r3, [r4, #12]
 80074e8:	bd10      	pop	{r4, pc}

080074ea <__swrite>:
 80074ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80074ee:	461f      	mov	r7, r3
 80074f0:	898b      	ldrh	r3, [r1, #12]
 80074f2:	4605      	mov	r5, r0
 80074f4:	05db      	lsls	r3, r3, #23
 80074f6:	460c      	mov	r4, r1
 80074f8:	4616      	mov	r6, r2
 80074fa:	d505      	bpl.n	8007508 <__swrite+0x1e>
 80074fc:	2302      	movs	r3, #2
 80074fe:	2200      	movs	r2, #0
 8007500:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007504:	f000 f9fe 	bl	8007904 <_lseek_r>
 8007508:	89a3      	ldrh	r3, [r4, #12]
 800750a:	4632      	mov	r2, r6
 800750c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007510:	81a3      	strh	r3, [r4, #12]
 8007512:	4628      	mov	r0, r5
 8007514:	463b      	mov	r3, r7
 8007516:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800751a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800751e:	f000 b97d 	b.w	800781c <_write_r>

08007522 <__sseek>:
 8007522:	b510      	push	{r4, lr}
 8007524:	460c      	mov	r4, r1
 8007526:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800752a:	f000 f9eb 	bl	8007904 <_lseek_r>
 800752e:	1c43      	adds	r3, r0, #1
 8007530:	89a3      	ldrh	r3, [r4, #12]
 8007532:	bf15      	itete	ne
 8007534:	6560      	strne	r0, [r4, #84]	; 0x54
 8007536:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800753a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800753e:	81a3      	strheq	r3, [r4, #12]
 8007540:	bf18      	it	ne
 8007542:	81a3      	strhne	r3, [r4, #12]
 8007544:	bd10      	pop	{r4, pc}

08007546 <__sclose>:
 8007546:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800754a:	f000 b997 	b.w	800787c <_close_r>

0800754e <strncmp>:
 800754e:	4603      	mov	r3, r0
 8007550:	b510      	push	{r4, lr}
 8007552:	b172      	cbz	r2, 8007572 <strncmp+0x24>
 8007554:	3901      	subs	r1, #1
 8007556:	1884      	adds	r4, r0, r2
 8007558:	f813 0b01 	ldrb.w	r0, [r3], #1
 800755c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8007560:	4290      	cmp	r0, r2
 8007562:	d101      	bne.n	8007568 <strncmp+0x1a>
 8007564:	42a3      	cmp	r3, r4
 8007566:	d101      	bne.n	800756c <strncmp+0x1e>
 8007568:	1a80      	subs	r0, r0, r2
 800756a:	bd10      	pop	{r4, pc}
 800756c:	2800      	cmp	r0, #0
 800756e:	d1f3      	bne.n	8007558 <strncmp+0xa>
 8007570:	e7fa      	b.n	8007568 <strncmp+0x1a>
 8007572:	4610      	mov	r0, r2
 8007574:	e7f9      	b.n	800756a <strncmp+0x1c>
	...

08007578 <_strtoul_l.constprop.0>:
 8007578:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800757c:	4686      	mov	lr, r0
 800757e:	460d      	mov	r5, r1
 8007580:	4f35      	ldr	r7, [pc, #212]	; (8007658 <_strtoul_l.constprop.0+0xe0>)
 8007582:	4628      	mov	r0, r5
 8007584:	f815 4b01 	ldrb.w	r4, [r5], #1
 8007588:	5de6      	ldrb	r6, [r4, r7]
 800758a:	f016 0608 	ands.w	r6, r6, #8
 800758e:	d1f8      	bne.n	8007582 <_strtoul_l.constprop.0+0xa>
 8007590:	2c2d      	cmp	r4, #45	; 0x2d
 8007592:	d12f      	bne.n	80075f4 <_strtoul_l.constprop.0+0x7c>
 8007594:	2601      	movs	r6, #1
 8007596:	782c      	ldrb	r4, [r5, #0]
 8007598:	1c85      	adds	r5, r0, #2
 800759a:	2b00      	cmp	r3, #0
 800759c:	d057      	beq.n	800764e <_strtoul_l.constprop.0+0xd6>
 800759e:	2b10      	cmp	r3, #16
 80075a0:	d109      	bne.n	80075b6 <_strtoul_l.constprop.0+0x3e>
 80075a2:	2c30      	cmp	r4, #48	; 0x30
 80075a4:	d107      	bne.n	80075b6 <_strtoul_l.constprop.0+0x3e>
 80075a6:	7828      	ldrb	r0, [r5, #0]
 80075a8:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80075ac:	2858      	cmp	r0, #88	; 0x58
 80075ae:	d149      	bne.n	8007644 <_strtoul_l.constprop.0+0xcc>
 80075b0:	2310      	movs	r3, #16
 80075b2:	786c      	ldrb	r4, [r5, #1]
 80075b4:	3502      	adds	r5, #2
 80075b6:	f04f 38ff 	mov.w	r8, #4294967295
 80075ba:	fbb8 f8f3 	udiv	r8, r8, r3
 80075be:	2700      	movs	r7, #0
 80075c0:	fb03 f908 	mul.w	r9, r3, r8
 80075c4:	4638      	mov	r0, r7
 80075c6:	ea6f 0909 	mvn.w	r9, r9
 80075ca:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80075ce:	f1bc 0f09 	cmp.w	ip, #9
 80075d2:	d814      	bhi.n	80075fe <_strtoul_l.constprop.0+0x86>
 80075d4:	4664      	mov	r4, ip
 80075d6:	42a3      	cmp	r3, r4
 80075d8:	dd22      	ble.n	8007620 <_strtoul_l.constprop.0+0xa8>
 80075da:	2f00      	cmp	r7, #0
 80075dc:	db1d      	blt.n	800761a <_strtoul_l.constprop.0+0xa2>
 80075de:	4580      	cmp	r8, r0
 80075e0:	d31b      	bcc.n	800761a <_strtoul_l.constprop.0+0xa2>
 80075e2:	d101      	bne.n	80075e8 <_strtoul_l.constprop.0+0x70>
 80075e4:	45a1      	cmp	r9, r4
 80075e6:	db18      	blt.n	800761a <_strtoul_l.constprop.0+0xa2>
 80075e8:	2701      	movs	r7, #1
 80075ea:	fb00 4003 	mla	r0, r0, r3, r4
 80075ee:	f815 4b01 	ldrb.w	r4, [r5], #1
 80075f2:	e7ea      	b.n	80075ca <_strtoul_l.constprop.0+0x52>
 80075f4:	2c2b      	cmp	r4, #43	; 0x2b
 80075f6:	bf04      	itt	eq
 80075f8:	782c      	ldrbeq	r4, [r5, #0]
 80075fa:	1c85      	addeq	r5, r0, #2
 80075fc:	e7cd      	b.n	800759a <_strtoul_l.constprop.0+0x22>
 80075fe:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8007602:	f1bc 0f19 	cmp.w	ip, #25
 8007606:	d801      	bhi.n	800760c <_strtoul_l.constprop.0+0x94>
 8007608:	3c37      	subs	r4, #55	; 0x37
 800760a:	e7e4      	b.n	80075d6 <_strtoul_l.constprop.0+0x5e>
 800760c:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8007610:	f1bc 0f19 	cmp.w	ip, #25
 8007614:	d804      	bhi.n	8007620 <_strtoul_l.constprop.0+0xa8>
 8007616:	3c57      	subs	r4, #87	; 0x57
 8007618:	e7dd      	b.n	80075d6 <_strtoul_l.constprop.0+0x5e>
 800761a:	f04f 37ff 	mov.w	r7, #4294967295
 800761e:	e7e6      	b.n	80075ee <_strtoul_l.constprop.0+0x76>
 8007620:	2f00      	cmp	r7, #0
 8007622:	da07      	bge.n	8007634 <_strtoul_l.constprop.0+0xbc>
 8007624:	2322      	movs	r3, #34	; 0x22
 8007626:	f04f 30ff 	mov.w	r0, #4294967295
 800762a:	f8ce 3000 	str.w	r3, [lr]
 800762e:	b932      	cbnz	r2, 800763e <_strtoul_l.constprop.0+0xc6>
 8007630:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007634:	b106      	cbz	r6, 8007638 <_strtoul_l.constprop.0+0xc0>
 8007636:	4240      	negs	r0, r0
 8007638:	2a00      	cmp	r2, #0
 800763a:	d0f9      	beq.n	8007630 <_strtoul_l.constprop.0+0xb8>
 800763c:	b107      	cbz	r7, 8007640 <_strtoul_l.constprop.0+0xc8>
 800763e:	1e69      	subs	r1, r5, #1
 8007640:	6011      	str	r1, [r2, #0]
 8007642:	e7f5      	b.n	8007630 <_strtoul_l.constprop.0+0xb8>
 8007644:	2430      	movs	r4, #48	; 0x30
 8007646:	2b00      	cmp	r3, #0
 8007648:	d1b5      	bne.n	80075b6 <_strtoul_l.constprop.0+0x3e>
 800764a:	2308      	movs	r3, #8
 800764c:	e7b3      	b.n	80075b6 <_strtoul_l.constprop.0+0x3e>
 800764e:	2c30      	cmp	r4, #48	; 0x30
 8007650:	d0a9      	beq.n	80075a6 <_strtoul_l.constprop.0+0x2e>
 8007652:	230a      	movs	r3, #10
 8007654:	e7af      	b.n	80075b6 <_strtoul_l.constprop.0+0x3e>
 8007656:	bf00      	nop
 8007658:	08007bc1 	.word	0x08007bc1

0800765c <_strtoul_r>:
 800765c:	f7ff bf8c 	b.w	8007578 <_strtoul_l.constprop.0>

08007660 <__submore>:
 8007660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007664:	460c      	mov	r4, r1
 8007666:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8007668:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800766c:	4299      	cmp	r1, r3
 800766e:	d11b      	bne.n	80076a8 <__submore+0x48>
 8007670:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8007674:	f7fe fffc 	bl	8006670 <_malloc_r>
 8007678:	b918      	cbnz	r0, 8007682 <__submore+0x22>
 800767a:	f04f 30ff 	mov.w	r0, #4294967295
 800767e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007682:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007686:	63a3      	str	r3, [r4, #56]	; 0x38
 8007688:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800768c:	6360      	str	r0, [r4, #52]	; 0x34
 800768e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 8007692:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007696:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800769a:	7043      	strb	r3, [r0, #1]
 800769c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80076a0:	7003      	strb	r3, [r0, #0]
 80076a2:	6020      	str	r0, [r4, #0]
 80076a4:	2000      	movs	r0, #0
 80076a6:	e7ea      	b.n	800767e <__submore+0x1e>
 80076a8:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 80076aa:	0077      	lsls	r7, r6, #1
 80076ac:	463a      	mov	r2, r7
 80076ae:	f000 f961 	bl	8007974 <_realloc_r>
 80076b2:	4605      	mov	r5, r0
 80076b4:	2800      	cmp	r0, #0
 80076b6:	d0e0      	beq.n	800767a <__submore+0x1a>
 80076b8:	eb00 0806 	add.w	r8, r0, r6
 80076bc:	4601      	mov	r1, r0
 80076be:	4632      	mov	r2, r6
 80076c0:	4640      	mov	r0, r8
 80076c2:	f7fe fa93 	bl	8005bec <memcpy>
 80076c6:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 80076ca:	f8c4 8000 	str.w	r8, [r4]
 80076ce:	e7e9      	b.n	80076a4 <__submore+0x44>

080076d0 <_ungetc_r>:
 80076d0:	b570      	push	{r4, r5, r6, lr}
 80076d2:	4614      	mov	r4, r2
 80076d4:	1c4a      	adds	r2, r1, #1
 80076d6:	4606      	mov	r6, r0
 80076d8:	460d      	mov	r5, r1
 80076da:	d103      	bne.n	80076e4 <_ungetc_r+0x14>
 80076dc:	f04f 35ff 	mov.w	r5, #4294967295
 80076e0:	4628      	mov	r0, r5
 80076e2:	bd70      	pop	{r4, r5, r6, pc}
 80076e4:	b118      	cbz	r0, 80076ee <_ungetc_r+0x1e>
 80076e6:	6983      	ldr	r3, [r0, #24]
 80076e8:	b90b      	cbnz	r3, 80076ee <_ungetc_r+0x1e>
 80076ea:	f7fd fdcb 	bl	8005284 <__sinit>
 80076ee:	4b41      	ldr	r3, [pc, #260]	; (80077f4 <_ungetc_r+0x124>)
 80076f0:	429c      	cmp	r4, r3
 80076f2:	d11d      	bne.n	8007730 <_ungetc_r+0x60>
 80076f4:	6874      	ldr	r4, [r6, #4]
 80076f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80076f8:	07db      	lsls	r3, r3, #31
 80076fa:	d405      	bmi.n	8007708 <_ungetc_r+0x38>
 80076fc:	89a3      	ldrh	r3, [r4, #12]
 80076fe:	0598      	lsls	r0, r3, #22
 8007700:	d402      	bmi.n	8007708 <_ungetc_r+0x38>
 8007702:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007704:	f7fe f9e3 	bl	8005ace <__retarget_lock_acquire_recursive>
 8007708:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800770c:	f023 0320 	bic.w	r3, r3, #32
 8007710:	0759      	lsls	r1, r3, #29
 8007712:	81a3      	strh	r3, [r4, #12]
 8007714:	b29a      	uxth	r2, r3
 8007716:	d42d      	bmi.n	8007774 <_ungetc_r+0xa4>
 8007718:	06d3      	lsls	r3, r2, #27
 800771a:	d413      	bmi.n	8007744 <_ungetc_r+0x74>
 800771c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800771e:	07dd      	lsls	r5, r3, #31
 8007720:	d4dc      	bmi.n	80076dc <_ungetc_r+0xc>
 8007722:	f412 7f00 	tst.w	r2, #512	; 0x200
 8007726:	d1d9      	bne.n	80076dc <_ungetc_r+0xc>
 8007728:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800772a:	f7fe f9d1 	bl	8005ad0 <__retarget_lock_release_recursive>
 800772e:	e7d5      	b.n	80076dc <_ungetc_r+0xc>
 8007730:	4b31      	ldr	r3, [pc, #196]	; (80077f8 <_ungetc_r+0x128>)
 8007732:	429c      	cmp	r4, r3
 8007734:	d101      	bne.n	800773a <_ungetc_r+0x6a>
 8007736:	68b4      	ldr	r4, [r6, #8]
 8007738:	e7dd      	b.n	80076f6 <_ungetc_r+0x26>
 800773a:	4b30      	ldr	r3, [pc, #192]	; (80077fc <_ungetc_r+0x12c>)
 800773c:	429c      	cmp	r4, r3
 800773e:	bf08      	it	eq
 8007740:	68f4      	ldreq	r4, [r6, #12]
 8007742:	e7d8      	b.n	80076f6 <_ungetc_r+0x26>
 8007744:	0710      	lsls	r0, r2, #28
 8007746:	d511      	bpl.n	800776c <_ungetc_r+0x9c>
 8007748:	4621      	mov	r1, r4
 800774a:	4630      	mov	r0, r6
 800774c:	f7fd fcf4 	bl	8005138 <_fflush_r>
 8007750:	b130      	cbz	r0, 8007760 <_ungetc_r+0x90>
 8007752:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007754:	07d9      	lsls	r1, r3, #31
 8007756:	d4c1      	bmi.n	80076dc <_ungetc_r+0xc>
 8007758:	89a3      	ldrh	r3, [r4, #12]
 800775a:	f413 7f00 	tst.w	r3, #512	; 0x200
 800775e:	e7e2      	b.n	8007726 <_ungetc_r+0x56>
 8007760:	89a3      	ldrh	r3, [r4, #12]
 8007762:	60a0      	str	r0, [r4, #8]
 8007764:	f023 0308 	bic.w	r3, r3, #8
 8007768:	81a3      	strh	r3, [r4, #12]
 800776a:	61a0      	str	r0, [r4, #24]
 800776c:	89a3      	ldrh	r3, [r4, #12]
 800776e:	f043 0304 	orr.w	r3, r3, #4
 8007772:	81a3      	strh	r3, [r4, #12]
 8007774:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007776:	6862      	ldr	r2, [r4, #4]
 8007778:	b2ed      	uxtb	r5, r5
 800777a:	b1d3      	cbz	r3, 80077b2 <_ungetc_r+0xe2>
 800777c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800777e:	4293      	cmp	r3, r2
 8007780:	dc05      	bgt.n	800778e <_ungetc_r+0xbe>
 8007782:	4621      	mov	r1, r4
 8007784:	4630      	mov	r0, r6
 8007786:	f7ff ff6b 	bl	8007660 <__submore>
 800778a:	2800      	cmp	r0, #0
 800778c:	d1e1      	bne.n	8007752 <_ungetc_r+0x82>
 800778e:	6823      	ldr	r3, [r4, #0]
 8007790:	1e5a      	subs	r2, r3, #1
 8007792:	6022      	str	r2, [r4, #0]
 8007794:	f803 5c01 	strb.w	r5, [r3, #-1]
 8007798:	6863      	ldr	r3, [r4, #4]
 800779a:	3301      	adds	r3, #1
 800779c:	6063      	str	r3, [r4, #4]
 800779e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80077a0:	07da      	lsls	r2, r3, #31
 80077a2:	d49d      	bmi.n	80076e0 <_ungetc_r+0x10>
 80077a4:	89a3      	ldrh	r3, [r4, #12]
 80077a6:	059b      	lsls	r3, r3, #22
 80077a8:	d49a      	bmi.n	80076e0 <_ungetc_r+0x10>
 80077aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80077ac:	f7fe f990 	bl	8005ad0 <__retarget_lock_release_recursive>
 80077b0:	e796      	b.n	80076e0 <_ungetc_r+0x10>
 80077b2:	6e61      	ldr	r1, [r4, #100]	; 0x64
 80077b4:	6920      	ldr	r0, [r4, #16]
 80077b6:	6823      	ldr	r3, [r4, #0]
 80077b8:	f001 0101 	and.w	r1, r1, #1
 80077bc:	b160      	cbz	r0, 80077d8 <_ungetc_r+0x108>
 80077be:	4298      	cmp	r0, r3
 80077c0:	d20a      	bcs.n	80077d8 <_ungetc_r+0x108>
 80077c2:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 80077c6:	42a8      	cmp	r0, r5
 80077c8:	d106      	bne.n	80077d8 <_ungetc_r+0x108>
 80077ca:	3b01      	subs	r3, #1
 80077cc:	3201      	adds	r2, #1
 80077ce:	6023      	str	r3, [r4, #0]
 80077d0:	6062      	str	r2, [r4, #4]
 80077d2:	2900      	cmp	r1, #0
 80077d4:	d184      	bne.n	80076e0 <_ungetc_r+0x10>
 80077d6:	e7e5      	b.n	80077a4 <_ungetc_r+0xd4>
 80077d8:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 80077dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80077e0:	6363      	str	r3, [r4, #52]	; 0x34
 80077e2:	2303      	movs	r3, #3
 80077e4:	63a3      	str	r3, [r4, #56]	; 0x38
 80077e6:	4623      	mov	r3, r4
 80077e8:	f803 5f46 	strb.w	r5, [r3, #70]!
 80077ec:	6023      	str	r3, [r4, #0]
 80077ee:	2301      	movs	r3, #1
 80077f0:	6063      	str	r3, [r4, #4]
 80077f2:	e7ee      	b.n	80077d2 <_ungetc_r+0x102>
 80077f4:	08007d74 	.word	0x08007d74
 80077f8:	08007d94 	.word	0x08007d94
 80077fc:	08007d54 	.word	0x08007d54

08007800 <__ascii_wctomb>:
 8007800:	4603      	mov	r3, r0
 8007802:	4608      	mov	r0, r1
 8007804:	b141      	cbz	r1, 8007818 <__ascii_wctomb+0x18>
 8007806:	2aff      	cmp	r2, #255	; 0xff
 8007808:	d904      	bls.n	8007814 <__ascii_wctomb+0x14>
 800780a:	228a      	movs	r2, #138	; 0x8a
 800780c:	f04f 30ff 	mov.w	r0, #4294967295
 8007810:	601a      	str	r2, [r3, #0]
 8007812:	4770      	bx	lr
 8007814:	2001      	movs	r0, #1
 8007816:	700a      	strb	r2, [r1, #0]
 8007818:	4770      	bx	lr
	...

0800781c <_write_r>:
 800781c:	b538      	push	{r3, r4, r5, lr}
 800781e:	4604      	mov	r4, r0
 8007820:	4608      	mov	r0, r1
 8007822:	4611      	mov	r1, r2
 8007824:	2200      	movs	r2, #0
 8007826:	4d05      	ldr	r5, [pc, #20]	; (800783c <_write_r+0x20>)
 8007828:	602a      	str	r2, [r5, #0]
 800782a:	461a      	mov	r2, r3
 800782c:	f7f9 faf2 	bl	8000e14 <_write>
 8007830:	1c43      	adds	r3, r0, #1
 8007832:	d102      	bne.n	800783a <_write_r+0x1e>
 8007834:	682b      	ldr	r3, [r5, #0]
 8007836:	b103      	cbz	r3, 800783a <_write_r+0x1e>
 8007838:	6023      	str	r3, [r4, #0]
 800783a:	bd38      	pop	{r3, r4, r5, pc}
 800783c:	20000258 	.word	0x20000258

08007840 <__assert_func>:
 8007840:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007842:	4614      	mov	r4, r2
 8007844:	461a      	mov	r2, r3
 8007846:	4b09      	ldr	r3, [pc, #36]	; (800786c <__assert_func+0x2c>)
 8007848:	4605      	mov	r5, r0
 800784a:	681b      	ldr	r3, [r3, #0]
 800784c:	68d8      	ldr	r0, [r3, #12]
 800784e:	b14c      	cbz	r4, 8007864 <__assert_func+0x24>
 8007850:	4b07      	ldr	r3, [pc, #28]	; (8007870 <__assert_func+0x30>)
 8007852:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8007856:	9100      	str	r1, [sp, #0]
 8007858:	462b      	mov	r3, r5
 800785a:	4906      	ldr	r1, [pc, #24]	; (8007874 <__assert_func+0x34>)
 800785c:	f000 f81e 	bl	800789c <fiprintf>
 8007860:	f000 f8ca 	bl	80079f8 <abort>
 8007864:	4b04      	ldr	r3, [pc, #16]	; (8007878 <__assert_func+0x38>)
 8007866:	461c      	mov	r4, r3
 8007868:	e7f3      	b.n	8007852 <__assert_func+0x12>
 800786a:	bf00      	nop
 800786c:	2000000c 	.word	0x2000000c
 8007870:	08007fb8 	.word	0x08007fb8
 8007874:	08007fc5 	.word	0x08007fc5
 8007878:	08007ff3 	.word	0x08007ff3

0800787c <_close_r>:
 800787c:	b538      	push	{r3, r4, r5, lr}
 800787e:	2300      	movs	r3, #0
 8007880:	4d05      	ldr	r5, [pc, #20]	; (8007898 <_close_r+0x1c>)
 8007882:	4604      	mov	r4, r0
 8007884:	4608      	mov	r0, r1
 8007886:	602b      	str	r3, [r5, #0]
 8007888:	f7f9 faf0 	bl	8000e6c <_close>
 800788c:	1c43      	adds	r3, r0, #1
 800788e:	d102      	bne.n	8007896 <_close_r+0x1a>
 8007890:	682b      	ldr	r3, [r5, #0]
 8007892:	b103      	cbz	r3, 8007896 <_close_r+0x1a>
 8007894:	6023      	str	r3, [r4, #0]
 8007896:	bd38      	pop	{r3, r4, r5, pc}
 8007898:	20000258 	.word	0x20000258

0800789c <fiprintf>:
 800789c:	b40e      	push	{r1, r2, r3}
 800789e:	b503      	push	{r0, r1, lr}
 80078a0:	4601      	mov	r1, r0
 80078a2:	ab03      	add	r3, sp, #12
 80078a4:	4805      	ldr	r0, [pc, #20]	; (80078bc <fiprintf+0x20>)
 80078a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80078aa:	6800      	ldr	r0, [r0, #0]
 80078ac:	9301      	str	r3, [sp, #4]
 80078ae:	f7ff f8d7 	bl	8006a60 <_vfiprintf_r>
 80078b2:	b002      	add	sp, #8
 80078b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80078b8:	b003      	add	sp, #12
 80078ba:	4770      	bx	lr
 80078bc:	2000000c 	.word	0x2000000c

080078c0 <_fstat_r>:
 80078c0:	b538      	push	{r3, r4, r5, lr}
 80078c2:	2300      	movs	r3, #0
 80078c4:	4d06      	ldr	r5, [pc, #24]	; (80078e0 <_fstat_r+0x20>)
 80078c6:	4604      	mov	r4, r0
 80078c8:	4608      	mov	r0, r1
 80078ca:	4611      	mov	r1, r2
 80078cc:	602b      	str	r3, [r5, #0]
 80078ce:	f7f9 fb1d 	bl	8000f0c <_fstat>
 80078d2:	1c43      	adds	r3, r0, #1
 80078d4:	d102      	bne.n	80078dc <_fstat_r+0x1c>
 80078d6:	682b      	ldr	r3, [r5, #0]
 80078d8:	b103      	cbz	r3, 80078dc <_fstat_r+0x1c>
 80078da:	6023      	str	r3, [r4, #0]
 80078dc:	bd38      	pop	{r3, r4, r5, pc}
 80078de:	bf00      	nop
 80078e0:	20000258 	.word	0x20000258

080078e4 <_isatty_r>:
 80078e4:	b538      	push	{r3, r4, r5, lr}
 80078e6:	2300      	movs	r3, #0
 80078e8:	4d05      	ldr	r5, [pc, #20]	; (8007900 <_isatty_r+0x1c>)
 80078ea:	4604      	mov	r4, r0
 80078ec:	4608      	mov	r0, r1
 80078ee:	602b      	str	r3, [r5, #0]
 80078f0:	f7f9 fa7a 	bl	8000de8 <_isatty>
 80078f4:	1c43      	adds	r3, r0, #1
 80078f6:	d102      	bne.n	80078fe <_isatty_r+0x1a>
 80078f8:	682b      	ldr	r3, [r5, #0]
 80078fa:	b103      	cbz	r3, 80078fe <_isatty_r+0x1a>
 80078fc:	6023      	str	r3, [r4, #0]
 80078fe:	bd38      	pop	{r3, r4, r5, pc}
 8007900:	20000258 	.word	0x20000258

08007904 <_lseek_r>:
 8007904:	b538      	push	{r3, r4, r5, lr}
 8007906:	4604      	mov	r4, r0
 8007908:	4608      	mov	r0, r1
 800790a:	4611      	mov	r1, r2
 800790c:	2200      	movs	r2, #0
 800790e:	4d05      	ldr	r5, [pc, #20]	; (8007924 <_lseek_r+0x20>)
 8007910:	602a      	str	r2, [r5, #0]
 8007912:	461a      	mov	r2, r3
 8007914:	f7f9 fac1 	bl	8000e9a <_lseek>
 8007918:	1c43      	adds	r3, r0, #1
 800791a:	d102      	bne.n	8007922 <_lseek_r+0x1e>
 800791c:	682b      	ldr	r3, [r5, #0]
 800791e:	b103      	cbz	r3, 8007922 <_lseek_r+0x1e>
 8007920:	6023      	str	r3, [r4, #0]
 8007922:	bd38      	pop	{r3, r4, r5, pc}
 8007924:	20000258 	.word	0x20000258

08007928 <memmove>:
 8007928:	4288      	cmp	r0, r1
 800792a:	b510      	push	{r4, lr}
 800792c:	eb01 0402 	add.w	r4, r1, r2
 8007930:	d902      	bls.n	8007938 <memmove+0x10>
 8007932:	4284      	cmp	r4, r0
 8007934:	4623      	mov	r3, r4
 8007936:	d807      	bhi.n	8007948 <memmove+0x20>
 8007938:	1e43      	subs	r3, r0, #1
 800793a:	42a1      	cmp	r1, r4
 800793c:	d008      	beq.n	8007950 <memmove+0x28>
 800793e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007942:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007946:	e7f8      	b.n	800793a <memmove+0x12>
 8007948:	4601      	mov	r1, r0
 800794a:	4402      	add	r2, r0
 800794c:	428a      	cmp	r2, r1
 800794e:	d100      	bne.n	8007952 <memmove+0x2a>
 8007950:	bd10      	pop	{r4, pc}
 8007952:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007956:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800795a:	e7f7      	b.n	800794c <memmove+0x24>

0800795c <__malloc_lock>:
 800795c:	4801      	ldr	r0, [pc, #4]	; (8007964 <__malloc_lock+0x8>)
 800795e:	f7fe b8b6 	b.w	8005ace <__retarget_lock_acquire_recursive>
 8007962:	bf00      	nop
 8007964:	2000024c 	.word	0x2000024c

08007968 <__malloc_unlock>:
 8007968:	4801      	ldr	r0, [pc, #4]	; (8007970 <__malloc_unlock+0x8>)
 800796a:	f7fe b8b1 	b.w	8005ad0 <__retarget_lock_release_recursive>
 800796e:	bf00      	nop
 8007970:	2000024c 	.word	0x2000024c

08007974 <_realloc_r>:
 8007974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007978:	4680      	mov	r8, r0
 800797a:	4614      	mov	r4, r2
 800797c:	460e      	mov	r6, r1
 800797e:	b921      	cbnz	r1, 800798a <_realloc_r+0x16>
 8007980:	4611      	mov	r1, r2
 8007982:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007986:	f7fe be73 	b.w	8006670 <_malloc_r>
 800798a:	b92a      	cbnz	r2, 8007998 <_realloc_r+0x24>
 800798c:	f7fe fe08 	bl	80065a0 <_free_r>
 8007990:	4625      	mov	r5, r4
 8007992:	4628      	mov	r0, r5
 8007994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007998:	f000 f835 	bl	8007a06 <_malloc_usable_size_r>
 800799c:	4284      	cmp	r4, r0
 800799e:	4607      	mov	r7, r0
 80079a0:	d802      	bhi.n	80079a8 <_realloc_r+0x34>
 80079a2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80079a6:	d812      	bhi.n	80079ce <_realloc_r+0x5a>
 80079a8:	4621      	mov	r1, r4
 80079aa:	4640      	mov	r0, r8
 80079ac:	f7fe fe60 	bl	8006670 <_malloc_r>
 80079b0:	4605      	mov	r5, r0
 80079b2:	2800      	cmp	r0, #0
 80079b4:	d0ed      	beq.n	8007992 <_realloc_r+0x1e>
 80079b6:	42bc      	cmp	r4, r7
 80079b8:	4622      	mov	r2, r4
 80079ba:	4631      	mov	r1, r6
 80079bc:	bf28      	it	cs
 80079be:	463a      	movcs	r2, r7
 80079c0:	f7fe f914 	bl	8005bec <memcpy>
 80079c4:	4631      	mov	r1, r6
 80079c6:	4640      	mov	r0, r8
 80079c8:	f7fe fdea 	bl	80065a0 <_free_r>
 80079cc:	e7e1      	b.n	8007992 <_realloc_r+0x1e>
 80079ce:	4635      	mov	r5, r6
 80079d0:	e7df      	b.n	8007992 <_realloc_r+0x1e>
	...

080079d4 <_read_r>:
 80079d4:	b538      	push	{r3, r4, r5, lr}
 80079d6:	4604      	mov	r4, r0
 80079d8:	4608      	mov	r0, r1
 80079da:	4611      	mov	r1, r2
 80079dc:	2200      	movs	r2, #0
 80079de:	4d05      	ldr	r5, [pc, #20]	; (80079f4 <_read_r+0x20>)
 80079e0:	602a      	str	r2, [r5, #0]
 80079e2:	461a      	mov	r2, r3
 80079e4:	f7f9 fa6a 	bl	8000ebc <_read>
 80079e8:	1c43      	adds	r3, r0, #1
 80079ea:	d102      	bne.n	80079f2 <_read_r+0x1e>
 80079ec:	682b      	ldr	r3, [r5, #0]
 80079ee:	b103      	cbz	r3, 80079f2 <_read_r+0x1e>
 80079f0:	6023      	str	r3, [r4, #0]
 80079f2:	bd38      	pop	{r3, r4, r5, pc}
 80079f4:	20000258 	.word	0x20000258

080079f8 <abort>:
 80079f8:	2006      	movs	r0, #6
 80079fa:	b508      	push	{r3, lr}
 80079fc:	f000 f834 	bl	8007a68 <raise>
 8007a00:	2001      	movs	r0, #1
 8007a02:	f000 f85d 	bl	8007ac0 <_exit>

08007a06 <_malloc_usable_size_r>:
 8007a06:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007a0a:	1f18      	subs	r0, r3, #4
 8007a0c:	2b00      	cmp	r3, #0
 8007a0e:	bfbc      	itt	lt
 8007a10:	580b      	ldrlt	r3, [r1, r0]
 8007a12:	18c0      	addlt	r0, r0, r3
 8007a14:	4770      	bx	lr

08007a16 <_raise_r>:
 8007a16:	291f      	cmp	r1, #31
 8007a18:	b538      	push	{r3, r4, r5, lr}
 8007a1a:	4604      	mov	r4, r0
 8007a1c:	460d      	mov	r5, r1
 8007a1e:	d904      	bls.n	8007a2a <_raise_r+0x14>
 8007a20:	2316      	movs	r3, #22
 8007a22:	6003      	str	r3, [r0, #0]
 8007a24:	f04f 30ff 	mov.w	r0, #4294967295
 8007a28:	bd38      	pop	{r3, r4, r5, pc}
 8007a2a:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8007a2c:	b112      	cbz	r2, 8007a34 <_raise_r+0x1e>
 8007a2e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007a32:	b94b      	cbnz	r3, 8007a48 <_raise_r+0x32>
 8007a34:	4620      	mov	r0, r4
 8007a36:	f000 f831 	bl	8007a9c <_getpid_r>
 8007a3a:	462a      	mov	r2, r5
 8007a3c:	4601      	mov	r1, r0
 8007a3e:	4620      	mov	r0, r4
 8007a40:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007a44:	f000 b818 	b.w	8007a78 <_kill_r>
 8007a48:	2b01      	cmp	r3, #1
 8007a4a:	d00a      	beq.n	8007a62 <_raise_r+0x4c>
 8007a4c:	1c59      	adds	r1, r3, #1
 8007a4e:	d103      	bne.n	8007a58 <_raise_r+0x42>
 8007a50:	2316      	movs	r3, #22
 8007a52:	6003      	str	r3, [r0, #0]
 8007a54:	2001      	movs	r0, #1
 8007a56:	e7e7      	b.n	8007a28 <_raise_r+0x12>
 8007a58:	2400      	movs	r4, #0
 8007a5a:	4628      	mov	r0, r5
 8007a5c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007a60:	4798      	blx	r3
 8007a62:	2000      	movs	r0, #0
 8007a64:	e7e0      	b.n	8007a28 <_raise_r+0x12>
	...

08007a68 <raise>:
 8007a68:	4b02      	ldr	r3, [pc, #8]	; (8007a74 <raise+0xc>)
 8007a6a:	4601      	mov	r1, r0
 8007a6c:	6818      	ldr	r0, [r3, #0]
 8007a6e:	f7ff bfd2 	b.w	8007a16 <_raise_r>
 8007a72:	bf00      	nop
 8007a74:	2000000c 	.word	0x2000000c

08007a78 <_kill_r>:
 8007a78:	b538      	push	{r3, r4, r5, lr}
 8007a7a:	2300      	movs	r3, #0
 8007a7c:	4d06      	ldr	r5, [pc, #24]	; (8007a98 <_kill_r+0x20>)
 8007a7e:	4604      	mov	r4, r0
 8007a80:	4608      	mov	r0, r1
 8007a82:	4611      	mov	r1, r2
 8007a84:	602b      	str	r3, [r5, #0]
 8007a86:	f000 f813 	bl	8007ab0 <_kill>
 8007a8a:	1c43      	adds	r3, r0, #1
 8007a8c:	d102      	bne.n	8007a94 <_kill_r+0x1c>
 8007a8e:	682b      	ldr	r3, [r5, #0]
 8007a90:	b103      	cbz	r3, 8007a94 <_kill_r+0x1c>
 8007a92:	6023      	str	r3, [r4, #0]
 8007a94:	bd38      	pop	{r3, r4, r5, pc}
 8007a96:	bf00      	nop
 8007a98:	20000258 	.word	0x20000258

08007a9c <_getpid_r>:
 8007a9c:	f000 b800 	b.w	8007aa0 <_getpid>

08007aa0 <_getpid>:
 8007aa0:	2258      	movs	r2, #88	; 0x58
 8007aa2:	4b02      	ldr	r3, [pc, #8]	; (8007aac <_getpid+0xc>)
 8007aa4:	f04f 30ff 	mov.w	r0, #4294967295
 8007aa8:	601a      	str	r2, [r3, #0]
 8007aaa:	4770      	bx	lr
 8007aac:	20000258 	.word	0x20000258

08007ab0 <_kill>:
 8007ab0:	2258      	movs	r2, #88	; 0x58
 8007ab2:	4b02      	ldr	r3, [pc, #8]	; (8007abc <_kill+0xc>)
 8007ab4:	f04f 30ff 	mov.w	r0, #4294967295
 8007ab8:	601a      	str	r2, [r3, #0]
 8007aba:	4770      	bx	lr
 8007abc:	20000258 	.word	0x20000258

08007ac0 <_exit>:
 8007ac0:	e7fe      	b.n	8007ac0 <_exit>
	...

08007ac4 <_init>:
 8007ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ac6:	bf00      	nop
 8007ac8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007aca:	bc08      	pop	{r3}
 8007acc:	469e      	mov	lr, r3
 8007ace:	4770      	bx	lr

08007ad0 <_fini>:
 8007ad0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ad2:	bf00      	nop
 8007ad4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007ad6:	bc08      	pop	{r3}
 8007ad8:	469e      	mov	lr, r3
 8007ada:	4770      	bx	lr
